ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Z_PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Z_PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Z_PWM_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Z_PWM_Enable, %function
  25              	Z_PWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\Z_PWM.c"
   1:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Z_PWM.c **** * File Name: Z_PWM.c
   3:Generated_Source\PSoC5/Z_PWM.c **** * Version 3.30
   4:Generated_Source\PSoC5/Z_PWM.c **** *
   5:Generated_Source\PSoC5/Z_PWM.c **** * Description:
   6:Generated_Source\PSoC5/Z_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/Z_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/Z_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/Z_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/Z_PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/Z_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/Z_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/Z_PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/Z_PWM.c **** *
  15:Generated_Source\PSoC5/Z_PWM.c **** * Note:
  16:Generated_Source\PSoC5/Z_PWM.c **** *
  17:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC5/Z_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Z_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Z_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Z_PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Z_PWM.c **** 
  24:Generated_Source\PSoC5/Z_PWM.c **** #include "Z_PWM.h"
  25:Generated_Source\PSoC5/Z_PWM.c **** 
  26:Generated_Source\PSoC5/Z_PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/Z_PWM.c **** #ifdef Z_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/Z_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/Z_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/Z_PWM.c **** #endif /* Z_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 2


  31:Generated_Source\PSoC5/Z_PWM.c **** 
  32:Generated_Source\PSoC5/Z_PWM.c **** uint8 Z_PWM_initVar = 0u;
  33:Generated_Source\PSoC5/Z_PWM.c **** 
  34:Generated_Source\PSoC5/Z_PWM.c **** 
  35:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_Start
  37:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC5/Z_PWM.c **** *
  39:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
  40:Generated_Source\PSoC5/Z_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/Z_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/Z_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/Z_PWM.c **** *
  44:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
  45:Generated_Source\PSoC5/Z_PWM.c **** *  None
  46:Generated_Source\PSoC5/Z_PWM.c **** *
  47:Generated_Source\PSoC5/Z_PWM.c **** * Return:
  48:Generated_Source\PSoC5/Z_PWM.c **** *  None
  49:Generated_Source\PSoC5/Z_PWM.c **** *
  50:Generated_Source\PSoC5/Z_PWM.c **** * Global variables:
  51:Generated_Source\PSoC5/Z_PWM.c **** *  Z_PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/Z_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/Z_PWM.c **** *
  54:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/Z_PWM.c **** void Z_PWM_Start(void) 
  56:Generated_Source\PSoC5/Z_PWM.c **** {
  57:Generated_Source\PSoC5/Z_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/Z_PWM.c ****     if(Z_PWM_initVar == 0u)
  59:Generated_Source\PSoC5/Z_PWM.c ****     {
  60:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_Init();
  61:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_initVar = 1u;
  62:Generated_Source\PSoC5/Z_PWM.c ****     }
  63:Generated_Source\PSoC5/Z_PWM.c ****     Z_PWM_Enable();
  64:Generated_Source\PSoC5/Z_PWM.c **** 
  65:Generated_Source\PSoC5/Z_PWM.c **** }
  66:Generated_Source\PSoC5/Z_PWM.c **** 
  67:Generated_Source\PSoC5/Z_PWM.c **** 
  68:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_Init
  70:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC5/Z_PWM.c **** *
  72:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
  73:Generated_Source\PSoC5/Z_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/Z_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/Z_PWM.c **** *  Z_PWM_Start().
  76:Generated_Source\PSoC5/Z_PWM.c **** *
  77:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
  78:Generated_Source\PSoC5/Z_PWM.c **** *  None
  79:Generated_Source\PSoC5/Z_PWM.c **** *
  80:Generated_Source\PSoC5/Z_PWM.c **** * Return:
  81:Generated_Source\PSoC5/Z_PWM.c **** *  None
  82:Generated_Source\PSoC5/Z_PWM.c **** *
  83:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/Z_PWM.c **** void Z_PWM_Init(void) 
  85:Generated_Source\PSoC5/Z_PWM.c **** {
  86:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction || Z_PWM_UseControl)
  87:Generated_Source\PSoC5/Z_PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 3


  88:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction || Z_PWM_UseControl) */
  89:Generated_Source\PSoC5/Z_PWM.c **** 
  90:Generated_Source\PSoC5/Z_PWM.c ****     #if(!Z_PWM_UsingFixedFunction)
  91:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UseStatus)
  92:Generated_Source\PSoC5/Z_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/Z_PWM.c ****             uint8 Z_PWM_interruptState;
  94:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UseStatus) */
  95:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (!Z_PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC5/Z_PWM.c **** 
  97:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction)
  98:Generated_Source\PSoC5/Z_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL |= Z_PWM_CFG0_MODE;
 100:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_DeadBand2_4)
 101:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_CONTROL |= Z_PWM_CFG0_DB;
 102:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_DeadBand2_4) */
 103:Generated_Source\PSoC5/Z_PWM.c **** 
 104:Generated_Source\PSoC5/Z_PWM.c ****         ctrl = Z_PWM_CONTROL3 & ((uint8 )(~Z_PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL3 = ctrl | Z_PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/Z_PWM.c **** 
 107:Generated_Source\PSoC5/Z_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_RT1 &= ((uint8)(~Z_PWM_RT1_MASK));
 109:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_RT1 |= Z_PWM_SYNC;
 110:Generated_Source\PSoC5/Z_PWM.c **** 
 111:Generated_Source\PSoC5/Z_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_RT1 &= ((uint8)(~Z_PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_RT1 |= Z_PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC5/Z_PWM.c **** 
 115:Generated_Source\PSoC5/Z_PWM.c ****     #elif (Z_PWM_UseControl)
 116:Generated_Source\PSoC5/Z_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/Z_PWM.c ****         ctrl = Z_PWM_CONTROL & ((uint8)(~Z_PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/Z_PWM.c ****                 ((uint8)(~Z_PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL = ctrl | Z_PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/Z_PWM.c ****                                    Z_PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC5/Z_PWM.c **** 
 123:Generated_Source\PSoC5/Z_PWM.c ****     #if (!Z_PWM_UsingFixedFunction)
 124:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_Resolution == 8)
 125:Generated_Source\PSoC5/Z_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_AUX_CONTROLDP0 |= (Z_PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/Z_PWM.c ****         #else /* (Z_PWM_Resolution == 16)*/
 128:Generated_Source\PSoC5/Z_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_AUX_CONTROLDP0 |= (Z_PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_AUX_CONTROLDP1 |= (Z_PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_Resolution == 8) */
 132:Generated_Source\PSoC5/Z_PWM.c **** 
 133:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_WriteCounter(Z_PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (!Z_PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC5/Z_PWM.c **** 
 136:Generated_Source\PSoC5/Z_PWM.c ****     Z_PWM_WritePeriod(Z_PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/Z_PWM.c **** 
 138:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_UseOneCompareMode)
 139:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_WriteCompare(Z_PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/Z_PWM.c ****         #else
 141:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_WriteCompare1(Z_PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_WriteCompare2(Z_PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC5/Z_PWM.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 4


 145:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_KillModeMinTime)
 146:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_WriteKillTime(Z_PWM_MinimumKillTime);
 147:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_KillModeMinTime) */
 148:Generated_Source\PSoC5/Z_PWM.c **** 
 149:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_DeadBandUsed)
 150:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_WriteDeadTime(Z_PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_DeadBandUsed) */
 152:Generated_Source\PSoC5/Z_PWM.c **** 
 153:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UseStatus || Z_PWM_UsingFixedFunction)
 154:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_SetInterruptMode(Z_PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UseStatus || Z_PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC5/Z_PWM.c **** 
 157:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction)
 158:Generated_Source\PSoC5/Z_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_GLOBAL_ENABLE |= Z_PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/Z_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL2 |= Z_PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/Z_PWM.c ****     #else
 163:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UseStatus)
 164:Generated_Source\PSoC5/Z_PWM.c **** 
 165:Generated_Source\PSoC5/Z_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/Z_PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/Z_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_STATUS_AUX_CTRL |= Z_PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/Z_PWM.c **** 
 171:Generated_Source\PSoC5/Z_PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/Z_PWM.c ****             CyExitCriticalSection(Z_PWM_interruptState);
 173:Generated_Source\PSoC5/Z_PWM.c **** 
 174:Generated_Source\PSoC5/Z_PWM.c ****             /* Clear the FIFO to enable the Z_PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/Z_PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_ClearFIFO();
 177:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UseStatus) */
 178:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC5/Z_PWM.c **** }
 180:Generated_Source\PSoC5/Z_PWM.c **** 
 181:Generated_Source\PSoC5/Z_PWM.c **** 
 182:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_Enable
 184:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC5/Z_PWM.c **** *
 186:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
 187:Generated_Source\PSoC5/Z_PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/Z_PWM.c **** *
 189:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
 190:Generated_Source\PSoC5/Z_PWM.c **** *  None
 191:Generated_Source\PSoC5/Z_PWM.c **** *
 192:Generated_Source\PSoC5/Z_PWM.c **** * Return:
 193:Generated_Source\PSoC5/Z_PWM.c **** *  None
 194:Generated_Source\PSoC5/Z_PWM.c **** *
 195:Generated_Source\PSoC5/Z_PWM.c **** * Side Effects:
 196:Generated_Source\PSoC5/Z_PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/Z_PWM.c **** *
 198:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/Z_PWM.c **** void Z_PWM_Enable(void) 
 200:Generated_Source\PSoC5/Z_PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/Z_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction)
 203:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_GLOBAL_ENABLE |= Z_PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_GLOBAL_STBY_ENABLE |= Z_PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC5/Z_PWM.c **** 
 207:Generated_Source\PSoC5/Z_PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UseControl || Z_PWM_UsingFixedFunction)
 209:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL |= Z_PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 70640040 		.word	1073767536
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	Z_PWM_Enable, .-Z_PWM_Enable
  46              		.section	.text.Z_PWM_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Z_PWM_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Z_PWM_Stop, %function
  52              	Z_PWM_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UseControl || Z_PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC5/Z_PWM.c **** }
 212:Generated_Source\PSoC5/Z_PWM.c **** 
 213:Generated_Source\PSoC5/Z_PWM.c **** 
 214:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_Stop
 216:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC5/Z_PWM.c **** *
 218:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
 219:Generated_Source\PSoC5/Z_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/Z_PWM.c **** *  interrupts.
 221:Generated_Source\PSoC5/Z_PWM.c **** *
 222:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
 223:Generated_Source\PSoC5/Z_PWM.c **** *  None
 224:Generated_Source\PSoC5/Z_PWM.c **** *
 225:Generated_Source\PSoC5/Z_PWM.c **** * Return:
 226:Generated_Source\PSoC5/Z_PWM.c **** *  None
 227:Generated_Source\PSoC5/Z_PWM.c **** *
 228:Generated_Source\PSoC5/Z_PWM.c **** * Side Effects:
 229:Generated_Source\PSoC5/Z_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/Z_PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/Z_PWM.c **** *
 232:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 6


 233:Generated_Source\PSoC5/Z_PWM.c **** void Z_PWM_Stop(void) 
 234:Generated_Source\PSoC5/Z_PWM.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UseControl || Z_PWM_UsingFixedFunction)
 236:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_CONTROL &= ((uint8)(~Z_PWM_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 70640040 		.word	1073767536
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Z_PWM_Stop, .-Z_PWM_Stop
  72              		.section	.text.Z_PWM_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	Z_PWM_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	Z_PWM_WriteCounter, %function
  78              	Z_PWM_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UseControl || Z_PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC5/Z_PWM.c **** 
 239:Generated_Source\PSoC5/Z_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction)
 241:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_GLOBAL_ENABLE &= ((uint8)(~Z_PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~Z_PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC5/Z_PWM.c **** }
 245:Generated_Source\PSoC5/Z_PWM.c **** 
 246:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_UseOneCompareMode)
 247:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_CompareMode1SW)
 248:Generated_Source\PSoC5/Z_PWM.c **** 
 249:Generated_Source\PSoC5/Z_PWM.c **** 
 250:Generated_Source\PSoC5/Z_PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/Z_PWM.c ****         * Function Name: Z_PWM_SetCompareMode
 252:Generated_Source\PSoC5/Z_PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/Z_PWM.c ****         *
 254:Generated_Source\PSoC5/Z_PWM.c ****         * Summary:
 255:Generated_Source\PSoC5/Z_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/Z_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/Z_PWM.c ****         *
 258:Generated_Source\PSoC5/Z_PWM.c ****         * Parameters:
 259:Generated_Source\PSoC5/Z_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/Z_PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/Z_PWM.c ****         *
 262:Generated_Source\PSoC5/Z_PWM.c ****         * Return:
 263:Generated_Source\PSoC5/Z_PWM.c ****         *  None
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 7


 264:Generated_Source\PSoC5/Z_PWM.c ****         *
 265:Generated_Source\PSoC5/Z_PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/Z_PWM.c ****         void Z_PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/Z_PWM.c ****         {
 268:Generated_Source\PSoC5/Z_PWM.c ****             #if(Z_PWM_UsingFixedFunction)
 269:Generated_Source\PSoC5/Z_PWM.c **** 
 270:Generated_Source\PSoC5/Z_PWM.c ****                 #if(0 != Z_PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_PWM_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/Z_PWM.c ****                 #else
 273:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/Z_PWM.c ****                 #endif /* (0 != Z_PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/Z_PWM.c **** 
 276:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL3 &= ((uint8)(~Z_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/Z_PWM.c **** 
 279:Generated_Source\PSoC5/Z_PWM.c ****             #elif (Z_PWM_UseControl)
 280:Generated_Source\PSoC5/Z_PWM.c **** 
 281:Generated_Source\PSoC5/Z_PWM.c ****                 #if(0 != Z_PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Z_PWM_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/Z_PWM.c ****                                                 Z_PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/Z_PWM.c ****                 #else
 285:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemode1masked = comparemode & Z_PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/Z_PWM.c ****                 #endif /* (0 != Z_PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/Z_PWM.c **** 
 288:Generated_Source\PSoC5/Z_PWM.c ****                 #if(0 != Z_PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Z_PWM_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/Z_PWM.c ****                                                Z_PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/Z_PWM.c ****                 #else
 292:Generated_Source\PSoC5/Z_PWM.c ****                     uint8 comparemode2masked = comparemode & Z_PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/Z_PWM.c ****                 #endif /* (0 != Z_PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/Z_PWM.c **** 
 295:Generated_Source\PSoC5/Z_PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL &= ((uint8)(~(Z_PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/Z_PWM.c ****                                             Z_PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/Z_PWM.c **** 
 300:Generated_Source\PSoC5/Z_PWM.c ****             #else
 301:Generated_Source\PSoC5/Z_PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (Z_PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC5/Z_PWM.c ****         }
 304:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* Z_PWM_CompareMode1SW */
 305:Generated_Source\PSoC5/Z_PWM.c **** 
 306:Generated_Source\PSoC5/Z_PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/Z_PWM.c **** 
 308:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_CompareMode1SW)
 309:Generated_Source\PSoC5/Z_PWM.c **** 
 310:Generated_Source\PSoC5/Z_PWM.c **** 
 311:Generated_Source\PSoC5/Z_PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/Z_PWM.c ****         * Function Name: Z_PWM_SetCompareMode1
 313:Generated_Source\PSoC5/Z_PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/Z_PWM.c ****         *
 315:Generated_Source\PSoC5/Z_PWM.c ****         * Summary:
 316:Generated_Source\PSoC5/Z_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/Z_PWM.c ****         *
 318:Generated_Source\PSoC5/Z_PWM.c ****         * Parameters:
 319:Generated_Source\PSoC5/Z_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/Z_PWM.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 8


 321:Generated_Source\PSoC5/Z_PWM.c ****         *
 322:Generated_Source\PSoC5/Z_PWM.c ****         * Return:
 323:Generated_Source\PSoC5/Z_PWM.c ****         *  None
 324:Generated_Source\PSoC5/Z_PWM.c ****         *
 325:Generated_Source\PSoC5/Z_PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/Z_PWM.c ****         void Z_PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/Z_PWM.c ****         {
 328:Generated_Source\PSoC5/Z_PWM.c ****             #if(0 != Z_PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/Z_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_PWM_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/Z_PWM.c ****                                            Z_PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/Z_PWM.c ****             #else
 332:Generated_Source\PSoC5/Z_PWM.c ****                 uint8 comparemodemasked = comparemode & Z_PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (0 != Z_PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/Z_PWM.c **** 
 335:Generated_Source\PSoC5/Z_PWM.c ****             #if (Z_PWM_UseControl)
 336:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL &= ((uint8)(~Z_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (Z_PWM_UseControl) */
 339:Generated_Source\PSoC5/Z_PWM.c ****         }
 340:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* Z_PWM_CompareMode1SW */
 341:Generated_Source\PSoC5/Z_PWM.c **** 
 342:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_CompareMode2SW)
 343:Generated_Source\PSoC5/Z_PWM.c **** 
 344:Generated_Source\PSoC5/Z_PWM.c **** 
 345:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_SetCompareMode2
 347:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/Z_PWM.c ****     *
 349:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 350:Generated_Source\PSoC5/Z_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/Z_PWM.c ****     *
 352:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 353:Generated_Source\PSoC5/Z_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/Z_PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/Z_PWM.c ****     *
 356:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 357:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 358:Generated_Source\PSoC5/Z_PWM.c ****     *
 359:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/Z_PWM.c ****     {
 362:Generated_Source\PSoC5/Z_PWM.c **** 
 363:Generated_Source\PSoC5/Z_PWM.c ****         #if(0 != Z_PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/Z_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/Z_PWM.c ****                                                  Z_PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/Z_PWM.c ****         #else
 367:Generated_Source\PSoC5/Z_PWM.c ****             uint8 comparemodemasked = comparemode & Z_PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (0 != Z_PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/Z_PWM.c **** 
 370:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_UseControl)
 371:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_CONTROL &= ((uint8)(~Z_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UseControl) */
 374:Generated_Source\PSoC5/Z_PWM.c ****     }
 375:Generated_Source\PSoC5/Z_PWM.c ****     #endif /*Z_PWM_CompareMode2SW */
 376:Generated_Source\PSoC5/Z_PWM.c **** 
 377:Generated_Source\PSoC5/Z_PWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 9


 378:Generated_Source\PSoC5/Z_PWM.c **** 
 379:Generated_Source\PSoC5/Z_PWM.c **** 
 380:Generated_Source\PSoC5/Z_PWM.c **** #if (!Z_PWM_UsingFixedFunction)
 381:Generated_Source\PSoC5/Z_PWM.c **** 
 382:Generated_Source\PSoC5/Z_PWM.c **** 
 383:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteCounter
 385:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/Z_PWM.c ****     *
 387:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 388:Generated_Source\PSoC5/Z_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/Z_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/Z_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/Z_PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/Z_PWM.c ****     *
 393:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 394:Generated_Source\PSoC5/Z_PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/Z_PWM.c ****     *
 396:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 397:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 398:Generated_Source\PSoC5/Z_PWM.c ****     *
 399:Generated_Source\PSoC5/Z_PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC5/Z_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/Z_PWM.c ****     *
 402:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/Z_PWM.c ****                                        
 405:Generated_Source\PSoC5/Z_PWM.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/Z_PWM.c ****         CY_SET_REG16(Z_PWM_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 00680040 		.word	1073768448
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Z_PWM_WriteCounter, .-Z_PWM_WriteCounter
  97              		.section	.text.Z_PWM_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	Z_PWM_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	Z_PWM_ReadCounter, %function
 103              	Z_PWM_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/Z_PWM.c ****     }
 408:Generated_Source\PSoC5/Z_PWM.c **** 
 409:Generated_Source\PSoC5/Z_PWM.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 10


 410:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadCounter
 412:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/Z_PWM.c ****     *
 414:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 415:Generated_Source\PSoC5/Z_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/Z_PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/Z_PWM.c ****     *
 418:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 419:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 420:Generated_Source\PSoC5/Z_PWM.c ****     *
 421:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 422:Generated_Source\PSoC5/Z_PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/Z_PWM.c ****     *
 424:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/Z_PWM.c ****     uint16 Z_PWM_ReadCounter(void) 
 426:Generated_Source\PSoC5/Z_PWM.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/Z_PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/Z_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/Z_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/Z_PWM.c ****           (void)CY_GET_REG8(Z_PWM_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/Z_PWM.c **** 
 432:Generated_Source\PSoC5/Z_PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG16(Z_PWM_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/Z_PWM.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 10640040 		.word	1073767440
 123 0010 A0680040 		.word	1073768608
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	Z_PWM_ReadCounter, .-Z_PWM_ReadCounter
 127              		.section	.text.Z_PWM_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	Z_PWM_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	Z_PWM_WritePeriod, %function
 133              	Z_PWM_WritePeriod:
 134              	.LFB7:
 435:Generated_Source\PSoC5/Z_PWM.c **** 
 436:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UseStatus)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 11


 437:Generated_Source\PSoC5/Z_PWM.c **** 
 438:Generated_Source\PSoC5/Z_PWM.c **** 
 439:Generated_Source\PSoC5/Z_PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/Z_PWM.c ****         * Function Name: Z_PWM_ClearFIFO
 441:Generated_Source\PSoC5/Z_PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/Z_PWM.c ****         *
 443:Generated_Source\PSoC5/Z_PWM.c ****         * Summary:
 444:Generated_Source\PSoC5/Z_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/Z_PWM.c ****         *
 446:Generated_Source\PSoC5/Z_PWM.c ****         * Parameters:
 447:Generated_Source\PSoC5/Z_PWM.c ****         *  None
 448:Generated_Source\PSoC5/Z_PWM.c ****         *
 449:Generated_Source\PSoC5/Z_PWM.c ****         * Return:
 450:Generated_Source\PSoC5/Z_PWM.c ****         *  None
 451:Generated_Source\PSoC5/Z_PWM.c ****         *
 452:Generated_Source\PSoC5/Z_PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/Z_PWM.c ****         void Z_PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC5/Z_PWM.c ****         {
 455:Generated_Source\PSoC5/Z_PWM.c ****             while(0u != (Z_PWM_ReadStatusRegister() & Z_PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/Z_PWM.c ****             {
 457:Generated_Source\PSoC5/Z_PWM.c ****                 (void)Z_PWM_ReadCapture();
 458:Generated_Source\PSoC5/Z_PWM.c ****             }
 459:Generated_Source\PSoC5/Z_PWM.c ****         }
 460:Generated_Source\PSoC5/Z_PWM.c **** 
 461:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* Z_PWM_UseStatus */
 462:Generated_Source\PSoC5/Z_PWM.c **** 
 463:Generated_Source\PSoC5/Z_PWM.c **** #endif /* !Z_PWM_UsingFixedFunction */
 464:Generated_Source\PSoC5/Z_PWM.c **** 
 465:Generated_Source\PSoC5/Z_PWM.c **** 
 466:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_WritePeriod
 468:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Z_PWM.c **** *
 470:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
 471:Generated_Source\PSoC5/Z_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/Z_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/Z_PWM.c **** *
 474:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
 475:Generated_Source\PSoC5/Z_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/Z_PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/Z_PWM.c **** *
 478:Generated_Source\PSoC5/Z_PWM.c **** * Return:
 479:Generated_Source\PSoC5/Z_PWM.c **** *  None
 480:Generated_Source\PSoC5/Z_PWM.c **** *
 481:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/Z_PWM.c **** void Z_PWM_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/Z_PWM.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/Z_PWM.c ****     #if(Z_PWM_UsingFixedFunction)
 485:Generated_Source\PSoC5/Z_PWM.c ****         CY_SET_REG16(Z_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/Z_PWM.c ****     #else
 487:Generated_Source\PSoC5/Z_PWM.c ****         CY_SET_REG16(Z_PWM_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 80680040 		.word	1073768576
 149              		.cfi_endproc
 150              	.LFE7:
 151              		.size	Z_PWM_WritePeriod, .-Z_PWM_WritePeriod
 152              		.section	.text.Z_PWM_WriteCompare,"ax",%progbits
 153              		.align	2
 154              		.global	Z_PWM_WriteCompare
 155              		.thumb
 156              		.thumb_func
 157              		.type	Z_PWM_WriteCompare, %function
 158              	Z_PWM_WriteCompare:
 159              	.LFB8:
 488:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC5/Z_PWM.c **** }
 490:Generated_Source\PSoC5/Z_PWM.c **** 
 491:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_UseOneCompareMode)
 492:Generated_Source\PSoC5/Z_PWM.c **** 
 493:Generated_Source\PSoC5/Z_PWM.c **** 
 494:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteCompare
 496:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/Z_PWM.c ****     *
 498:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 499:Generated_Source\PSoC5/Z_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/Z_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/Z_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/Z_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/Z_PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/Z_PWM.c ****     *
 505:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 506:Generated_Source\PSoC5/Z_PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/Z_PWM.c ****     *
 508:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 509:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 510:Generated_Source\PSoC5/Z_PWM.c ****     *
 511:Generated_Source\PSoC5/Z_PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC5/Z_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/Z_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/Z_PWM.c ****     *
 515:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/Z_PWM.c ****                                        
 518:Generated_Source\PSoC5/Z_PWM.c ****     {
 160              		.loc 1 518 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 519:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UsingFixedFunction)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 13


 520:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/Z_PWM.c ****         #else
 522:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 522 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 40680040 		.word	1073768512
 174              		.cfi_endproc
 175              	.LFE8:
 176              		.size	Z_PWM_WriteCompare, .-Z_PWM_WriteCompare
 177              		.section	.text.Z_PWM_SetInterruptMode,"ax",%progbits
 178              		.align	2
 179              		.global	Z_PWM_SetInterruptMode
 180              		.thumb
 181              		.thumb_func
 182              		.type	Z_PWM_SetInterruptMode, %function
 183              	Z_PWM_SetInterruptMode:
 184              	.LFB9:
 523:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC5/Z_PWM.c **** 
 525:Generated_Source\PSoC5/Z_PWM.c ****         #if (Z_PWM_PWMMode == Z_PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC5/Z_PWM.c ****             #if(Z_PWM_UsingFixedFunction)
 527:Generated_Source\PSoC5/Z_PWM.c ****                 CY_SET_REG16(Z_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/Z_PWM.c ****             #else
 529:Generated_Source\PSoC5/Z_PWM.c ****                 CY_SET_REG16(Z_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (Z_PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_PWMMode == Z_PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/Z_PWM.c ****     }
 533:Generated_Source\PSoC5/Z_PWM.c **** 
 534:Generated_Source\PSoC5/Z_PWM.c **** 
 535:Generated_Source\PSoC5/Z_PWM.c **** #else
 536:Generated_Source\PSoC5/Z_PWM.c **** 
 537:Generated_Source\PSoC5/Z_PWM.c **** 
 538:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteCompare1
 540:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/Z_PWM.c ****     *
 542:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 543:Generated_Source\PSoC5/Z_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/Z_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/Z_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/Z_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/Z_PWM.c ****     *
 548:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 549:Generated_Source\PSoC5/Z_PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/Z_PWM.c ****     *
 551:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 552:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 553:Generated_Source\PSoC5/Z_PWM.c ****     *
 554:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/Z_PWM.c ****                                         
 557:Generated_Source\PSoC5/Z_PWM.c ****     {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 14


 558:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UsingFixedFunction)
 559:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/Z_PWM.c ****         #else
 561:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC5/Z_PWM.c ****     }
 564:Generated_Source\PSoC5/Z_PWM.c **** 
 565:Generated_Source\PSoC5/Z_PWM.c **** 
 566:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteCompare2
 568:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/Z_PWM.c ****     *
 570:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 571:Generated_Source\PSoC5/Z_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/Z_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/Z_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/Z_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/Z_PWM.c ****     *  mode.
 576:Generated_Source\PSoC5/Z_PWM.c ****     *
 577:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 578:Generated_Source\PSoC5/Z_PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/Z_PWM.c ****     *
 580:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 581:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 582:Generated_Source\PSoC5/Z_PWM.c ****     *
 583:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/Z_PWM.c ****                                         
 586:Generated_Source\PSoC5/Z_PWM.c ****     {
 587:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UsingFixedFunction)
 588:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/Z_PWM.c ****         #else
 590:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG16(Z_PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC5/Z_PWM.c ****     }
 593:Generated_Source\PSoC5/Z_PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/Z_PWM.c **** 
 595:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_DeadBandUsed)
 596:Generated_Source\PSoC5/Z_PWM.c **** 
 597:Generated_Source\PSoC5/Z_PWM.c **** 
 598:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteDeadTime
 600:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/Z_PWM.c ****     *
 602:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 603:Generated_Source\PSoC5/Z_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/Z_PWM.c ****     *
 605:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 606:Generated_Source\PSoC5/Z_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/Z_PWM.c ****     *
 608:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 609:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 610:Generated_Source\PSoC5/Z_PWM.c ****     *
 611:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/Z_PWM.c ****     {
 614:Generated_Source\PSoC5/Z_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 15


 615:Generated_Source\PSoC5/Z_PWM.c ****         #if(!Z_PWM_DeadBand2_4)
 616:Generated_Source\PSoC5/Z_PWM.c ****             CY_SET_REG8(Z_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/Z_PWM.c ****         #else
 618:Generated_Source\PSoC5/Z_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/Z_PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_DEADBAND_COUNT &= ((uint8)(~Z_PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/Z_PWM.c **** 
 622:Generated_Source\PSoC5/Z_PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/Z_PWM.c ****             #if(Z_PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Z_PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/Z_PWM.c ****                                                     Z_PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/Z_PWM.c ****             #else
 627:Generated_Source\PSoC5/Z_PWM.c ****                 Z_PWM_DEADBAND_COUNT |= deadtime & Z_PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (Z_PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/Z_PWM.c **** 
 630:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (!Z_PWM_DeadBand2_4) */
 631:Generated_Source\PSoC5/Z_PWM.c ****     }
 632:Generated_Source\PSoC5/Z_PWM.c **** 
 633:Generated_Source\PSoC5/Z_PWM.c **** 
 634:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadDeadTime
 636:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/Z_PWM.c ****     *
 638:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 639:Generated_Source\PSoC5/Z_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/Z_PWM.c ****     *
 641:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 642:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 643:Generated_Source\PSoC5/Z_PWM.c ****     *
 644:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 645:Generated_Source\PSoC5/Z_PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/Z_PWM.c ****     *
 647:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/Z_PWM.c ****     uint8 Z_PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/Z_PWM.c ****     {
 650:Generated_Source\PSoC5/Z_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/Z_PWM.c ****         #if(!Z_PWM_DeadBand2_4)
 652:Generated_Source\PSoC5/Z_PWM.c ****             return (CY_GET_REG8(Z_PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/Z_PWM.c ****         #else
 654:Generated_Source\PSoC5/Z_PWM.c **** 
 655:Generated_Source\PSoC5/Z_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/Z_PWM.c ****             #if(Z_PWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/Z_PWM.c ****                 return ((uint8)(((uint8)(Z_PWM_DEADBAND_COUNT & Z_PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/Z_PWM.c ****                                                                            Z_PWM_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/Z_PWM.c ****             #else
 660:Generated_Source\PSoC5/Z_PWM.c ****                 return (Z_PWM_DEADBAND_COUNT & Z_PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/Z_PWM.c ****             #endif /* (Z_PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (!Z_PWM_DeadBand2_4) */
 663:Generated_Source\PSoC5/Z_PWM.c ****     }
 664:Generated_Source\PSoC5/Z_PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/Z_PWM.c **** 
 666:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_UseStatus || Z_PWM_UsingFixedFunction)
 667:Generated_Source\PSoC5/Z_PWM.c **** 
 668:Generated_Source\PSoC5/Z_PWM.c **** 
 669:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_SetInterruptMode
 671:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 16


 672:Generated_Source\PSoC5/Z_PWM.c ****     *
 673:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 674:Generated_Source\PSoC5/Z_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/Z_PWM.c ****     *  source status register.
 676:Generated_Source\PSoC5/Z_PWM.c ****     *
 677:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 678:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/Z_PWM.c ****     *
 680:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 681:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 682:Generated_Source\PSoC5/Z_PWM.c ****     *
 683:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/Z_PWM.c ****     {
 185              		.loc 1 685 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL3:
 686:Generated_Source\PSoC5/Z_PWM.c ****         CY_SET_REG8(Z_PWM_STATUS_MASK_PTR, interruptMode);
 191              		.loc 1 686 0
 192 0000 014B     		ldr	r3, .L20
 193 0002 1870     		strb	r0, [r3]
 194 0004 7047     		bx	lr
 195              	.L21:
 196 0006 00BF     		.align	2
 197              	.L20:
 198 0008 81640040 		.word	1073767553
 199              		.cfi_endproc
 200              	.LFE9:
 201              		.size	Z_PWM_SetInterruptMode, .-Z_PWM_SetInterruptMode
 202              		.section	.text.Z_PWM_ReadStatusRegister,"ax",%progbits
 203              		.align	2
 204              		.global	Z_PWM_ReadStatusRegister
 205              		.thumb
 206              		.thumb_func
 207              		.type	Z_PWM_ReadStatusRegister, %function
 208              	Z_PWM_ReadStatusRegister:
 209              	.LFB10:
 687:Generated_Source\PSoC5/Z_PWM.c ****     }
 688:Generated_Source\PSoC5/Z_PWM.c **** 
 689:Generated_Source\PSoC5/Z_PWM.c **** 
 690:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadStatusRegister
 692:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/Z_PWM.c ****     *
 694:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 695:Generated_Source\PSoC5/Z_PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/Z_PWM.c ****     *
 697:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 698:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 699:Generated_Source\PSoC5/Z_PWM.c ****     *
 700:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 701:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/Z_PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/Z_PWM.c ****     *  [5]   : Kill event output
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 17


 704:Generated_Source\PSoC5/Z_PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/Z_PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/Z_PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/Z_PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/Z_PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/Z_PWM.c ****     *
 710:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/Z_PWM.c ****     uint8 Z_PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/Z_PWM.c ****     {
 210              		.loc 1 712 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 713:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG8(Z_PWM_STATUS_PTR));
 215              		.loc 1 713 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/Z_PWM.c ****     }
 218              		.loc 1 714 0
 219 0004 7047     		bx	lr
 220              	.L24:
 221 0006 00BF     		.align	2
 222              	.L23:
 223 0008 61640040 		.word	1073767521
 224              		.cfi_endproc
 225              	.LFE10:
 226              		.size	Z_PWM_ReadStatusRegister, .-Z_PWM_ReadStatusRegister
 227              		.section	.text.Z_PWM_ReadControlRegister,"ax",%progbits
 228              		.align	2
 229              		.global	Z_PWM_ReadControlRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	Z_PWM_ReadControlRegister, %function
 233              	Z_PWM_ReadControlRegister:
 234              	.LFB11:
 715:Generated_Source\PSoC5/Z_PWM.c **** 
 716:Generated_Source\PSoC5/Z_PWM.c **** #endif /* (Z_PWM_UseStatus || Z_PWM_UsingFixedFunction) */
 717:Generated_Source\PSoC5/Z_PWM.c **** 
 718:Generated_Source\PSoC5/Z_PWM.c **** 
 719:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_UseControl)
 720:Generated_Source\PSoC5/Z_PWM.c **** 
 721:Generated_Source\PSoC5/Z_PWM.c **** 
 722:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadControlRegister
 724:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/Z_PWM.c ****     *
 726:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 727:Generated_Source\PSoC5/Z_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/Z_PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/Z_PWM.c ****     *
 730:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 731:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 732:Generated_Source\PSoC5/Z_PWM.c ****     *
 733:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 734:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/Z_PWM.c ****     *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 18


 736:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/Z_PWM.c ****     uint8 Z_PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/Z_PWM.c ****     {
 235              		.loc 1 738 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 739:Generated_Source\PSoC5/Z_PWM.c ****         uint8 result;
 740:Generated_Source\PSoC5/Z_PWM.c **** 
 741:Generated_Source\PSoC5/Z_PWM.c ****         result = CY_GET_REG8(Z_PWM_CONTROL_PTR);
 240              		.loc 1 741 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 243              	.LVL4:
 742:Generated_Source\PSoC5/Z_PWM.c ****         return (result);
 743:Generated_Source\PSoC5/Z_PWM.c ****     }
 244              		.loc 1 743 0
 245 0004 7047     		bx	lr
 246              	.L27:
 247 0006 00BF     		.align	2
 248              	.L26:
 249 0008 70640040 		.word	1073767536
 250              		.cfi_endproc
 251              	.LFE11:
 252              		.size	Z_PWM_ReadControlRegister, .-Z_PWM_ReadControlRegister
 253              		.section	.text.Z_PWM_WriteControlRegister,"ax",%progbits
 254              		.align	2
 255              		.global	Z_PWM_WriteControlRegister
 256              		.thumb
 257              		.thumb_func
 258              		.type	Z_PWM_WriteControlRegister, %function
 259              	Z_PWM_WriteControlRegister:
 260              	.LFB12:
 744:Generated_Source\PSoC5/Z_PWM.c **** 
 745:Generated_Source\PSoC5/Z_PWM.c **** 
 746:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_WriteControlRegister
 748:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/Z_PWM.c ****     *
 750:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 751:Generated_Source\PSoC5/Z_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/Z_PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/Z_PWM.c ****     *
 754:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 755:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/Z_PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/Z_PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/Z_PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/Z_PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/Z_PWM.c ****     *
 761:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 762:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 763:Generated_Source\PSoC5/Z_PWM.c ****     *
 764:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/Z_PWM.c ****     void Z_PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/Z_PWM.c ****     {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 19


 261              		.loc 1 766 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL5:
 767:Generated_Source\PSoC5/Z_PWM.c ****         CY_SET_REG8(Z_PWM_CONTROL_PTR, control);
 267              		.loc 1 767 0
 268 0000 014B     		ldr	r3, .L29
 269 0002 1870     		strb	r0, [r3]
 270 0004 7047     		bx	lr
 271              	.L30:
 272 0006 00BF     		.align	2
 273              	.L29:
 274 0008 70640040 		.word	1073767536
 275              		.cfi_endproc
 276              	.LFE12:
 277              		.size	Z_PWM_WriteControlRegister, .-Z_PWM_WriteControlRegister
 278              		.section	.text.Z_PWM_ReadCapture,"ax",%progbits
 279              		.align	2
 280              		.global	Z_PWM_ReadCapture
 281              		.thumb
 282              		.thumb_func
 283              		.type	Z_PWM_ReadCapture, %function
 284              	Z_PWM_ReadCapture:
 285              	.LFB13:
 768:Generated_Source\PSoC5/Z_PWM.c ****     }
 769:Generated_Source\PSoC5/Z_PWM.c **** 
 770:Generated_Source\PSoC5/Z_PWM.c **** #endif /* (Z_PWM_UseControl) */
 771:Generated_Source\PSoC5/Z_PWM.c **** 
 772:Generated_Source\PSoC5/Z_PWM.c **** 
 773:Generated_Source\PSoC5/Z_PWM.c **** #if (!Z_PWM_UsingFixedFunction)
 774:Generated_Source\PSoC5/Z_PWM.c **** 
 775:Generated_Source\PSoC5/Z_PWM.c **** 
 776:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadCapture
 778:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/Z_PWM.c ****     *
 780:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 781:Generated_Source\PSoC5/Z_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/Z_PWM.c ****     *
 783:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 784:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 785:Generated_Source\PSoC5/Z_PWM.c ****     *
 786:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 787:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/Z_PWM.c ****     *
 789:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/Z_PWM.c ****     uint16 Z_PWM_ReadCapture(void) 
 791:Generated_Source\PSoC5/Z_PWM.c ****     {
 286              		.loc 1 791 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 792:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG16(Z_PWM_CAPTURE_LSB_PTR));
 291              		.loc 1 792 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 20


 292 0000 014B     		ldr	r3, .L32
 293 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/Z_PWM.c ****     }
 294              		.loc 1 793 0
 295 0004 80B2     		uxth	r0, r0
 296 0006 7047     		bx	lr
 297              	.L33:
 298              		.align	2
 299              	.L32:
 300 0008 A0680040 		.word	1073768608
 301              		.cfi_endproc
 302              	.LFE13:
 303              		.size	Z_PWM_ReadCapture, .-Z_PWM_ReadCapture
 304              		.section	.text.Z_PWM_ClearFIFO,"ax",%progbits
 305              		.align	2
 306              		.global	Z_PWM_ClearFIFO
 307              		.thumb
 308              		.thumb_func
 309              		.type	Z_PWM_ClearFIFO, %function
 310              	Z_PWM_ClearFIFO:
 311              	.LFB6:
 454:Generated_Source\PSoC5/Z_PWM.c ****             while(0u != (Z_PWM_ReadStatusRegister() & Z_PWM_STATUS_FIFONEMPTY))
 312              		.loc 1 454 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/Z_PWM.c ****             {
 320              		.loc 1 455 0
 321 0002 01E0     		b	.L35
 322              	.L36:
 457:Generated_Source\PSoC5/Z_PWM.c ****             }
 323              		.loc 1 457 0
 324 0004 FFF7FEFF 		bl	Z_PWM_ReadCapture
 325              	.LVL6:
 326              	.L35:
 455:Generated_Source\PSoC5/Z_PWM.c ****             {
 327              		.loc 1 455 0
 328 0008 FFF7FEFF 		bl	Z_PWM_ReadStatusRegister
 329              	.LVL7:
 330 000c 10F0100F 		tst	r0, #16
 331 0010 F8D1     		bne	.L36
 459:Generated_Source\PSoC5/Z_PWM.c **** 
 332              		.loc 1 459 0
 333 0012 08BD     		pop	{r3, pc}
 334              		.cfi_endproc
 335              	.LFE6:
 336              		.size	Z_PWM_ClearFIFO, .-Z_PWM_ClearFIFO
 337              		.section	.text.Z_PWM_Init,"ax",%progbits
 338              		.align	2
 339              		.global	Z_PWM_Init
 340              		.thumb
 341              		.thumb_func
 342              		.type	Z_PWM_Init, %function
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 21


 343              	Z_PWM_Init:
 344              	.LFB1:
  85:Generated_Source\PSoC5/Z_PWM.c ****     #if (Z_PWM_UsingFixedFunction || Z_PWM_UseControl)
 345              		.loc 1 85 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/Z_PWM.c ****                 ((uint8)(~Z_PWM_CTRL_CMPMODE1_MASK));
 353              		.loc 1 117 0
 354 0002 154A     		ldr	r2, .L40
 355 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 356 0006 03F0C003 		and	r3, r3, #192
 357              	.LVL8:
 119:Generated_Source\PSoC5/Z_PWM.c ****                                    Z_PWM_DEFAULT_COMPARE1_MODE;
 358              		.loc 1 119 0
 359 000a 43F00903 		orr	r3, r3, #9
 360              	.LVL9:
 361 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/Z_PWM.c ****             Z_PWM_AUX_CONTROLDP1 |= (Z_PWM_AUX_CTRL_FIFO0_CLR);
 362              		.loc 1 129 0
 363 0010 2032     		adds	r2, r2, #32
 364 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 365 0014 43F00103 		orr	r3, r3, #1
 366 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_Resolution == 8) */
 367              		.loc 1 130 0
 368 001a 104C     		ldr	r4, .L40+4
 369 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 370 001e 43F00103 		orr	r3, r3, #1
 371 0022 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (!Z_PWM_UsingFixedFunction) */
 372              		.loc 1 133 0
 373 0024 4FF48050 		mov	r0, #4096
 374 0028 FFF7FEFF 		bl	Z_PWM_WriteCounter
 375              	.LVL10:
 136:Generated_Source\PSoC5/Z_PWM.c **** 
 376              		.loc 1 136 0
 377 002c 4FF48050 		mov	r0, #4096
 378 0030 FFF7FEFF 		bl	Z_PWM_WritePeriod
 379              	.LVL11:
 139:Generated_Source\PSoC5/Z_PWM.c ****         #else
 380              		.loc 1 139 0
 381 0034 4FF40070 		mov	r0, #512
 382 0038 FFF7FEFF 		bl	Z_PWM_WriteCompare
 383              	.LVL12:
 154:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UseStatus || Z_PWM_UsingFixedFunction) */
 384              		.loc 1 154 0
 385 003c 0020     		movs	r0, #0
 386 003e FFF7FEFF 		bl	Z_PWM_SetInterruptMode
 387              	.LVL13:
 167:Generated_Source\PSoC5/Z_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 388              		.loc 1 167 0
 389 0042 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 22


 390              	.LVL14:
 169:Generated_Source\PSoC5/Z_PWM.c **** 
 391              		.loc 1 169 0
 392 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 393 0048 43F01003 		orr	r3, r3, #16
 394 004c 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/Z_PWM.c **** 
 395              		.loc 1 172 0
 396 004e FFF7FEFF 		bl	CyExitCriticalSection
 397              	.LVL15:
 176:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UseStatus) */
 398              		.loc 1 176 0
 399 0052 FFF7FEFF 		bl	Z_PWM_ClearFIFO
 400              	.LVL16:
 401 0056 10BD     		pop	{r4, pc}
 402              	.L41:
 403              		.align	2
 404              	.L40:
 405 0058 70640040 		.word	1073767536
 406 005c 91640040 		.word	1073767569
 407              		.cfi_endproc
 408              	.LFE1:
 409              		.size	Z_PWM_Init, .-Z_PWM_Init
 410              		.section	.text.Z_PWM_Start,"ax",%progbits
 411              		.align	2
 412              		.global	Z_PWM_Start
 413              		.thumb
 414              		.thumb_func
 415              		.type	Z_PWM_Start, %function
 416              	Z_PWM_Start:
 417              	.LFB0:
  56:Generated_Source\PSoC5/Z_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 418              		.loc 1 56 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/Z_PWM.c ****     {
 426              		.loc 1 58 0
 427 0002 054B     		ldr	r3, .L45
 428 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0006 23B9     		cbnz	r3, .L43
  60:Generated_Source\PSoC5/Z_PWM.c ****         Z_PWM_initVar = 1u;
 430              		.loc 1 60 0
 431 0008 FFF7FEFF 		bl	Z_PWM_Init
 432              	.LVL17:
  61:Generated_Source\PSoC5/Z_PWM.c ****     }
 433              		.loc 1 61 0
 434 000c 0122     		movs	r2, #1
 435 000e 024B     		ldr	r3, .L45
 436 0010 1A70     		strb	r2, [r3]
 437              	.L43:
  63:Generated_Source\PSoC5/Z_PWM.c **** 
 438              		.loc 1 63 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 23


 439 0012 FFF7FEFF 		bl	Z_PWM_Enable
 440              	.LVL18:
 441 0016 08BD     		pop	{r3, pc}
 442              	.L46:
 443              		.align	2
 444              	.L45:
 445 0018 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE0:
 448              		.size	Z_PWM_Start, .-Z_PWM_Start
 449              		.section	.text.Z_PWM_ReadCompare,"ax",%progbits
 450              		.align	2
 451              		.global	Z_PWM_ReadCompare
 452              		.thumb
 453              		.thumb_func
 454              		.type	Z_PWM_ReadCompare, %function
 455              	Z_PWM_ReadCompare:
 456              	.LFB14:
 794:Generated_Source\PSoC5/Z_PWM.c **** 
 795:Generated_Source\PSoC5/Z_PWM.c **** #endif /* (!Z_PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC5/Z_PWM.c **** 
 797:Generated_Source\PSoC5/Z_PWM.c **** 
 798:Generated_Source\PSoC5/Z_PWM.c **** #if (Z_PWM_UseOneCompareMode)
 799:Generated_Source\PSoC5/Z_PWM.c **** 
 800:Generated_Source\PSoC5/Z_PWM.c **** 
 801:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadCompare
 803:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/Z_PWM.c ****     *
 805:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 806:Generated_Source\PSoC5/Z_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/Z_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/Z_PWM.c ****     *
 809:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 810:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 811:Generated_Source\PSoC5/Z_PWM.c ****     *
 812:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 813:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/Z_PWM.c ****     *
 815:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/Z_PWM.c ****     uint16 Z_PWM_ReadCompare(void) 
 817:Generated_Source\PSoC5/Z_PWM.c ****     {
 457              		.loc 1 817 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 818:Generated_Source\PSoC5/Z_PWM.c ****         #if(Z_PWM_UsingFixedFunction)
 819:Generated_Source\PSoC5/Z_PWM.c ****             return ((uint16)CY_GET_REG16(Z_PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/Z_PWM.c ****         #else
 821:Generated_Source\PSoC5/Z_PWM.c ****             return (CY_GET_REG16(Z_PWM_COMPARE1_LSB_PTR));
 462              		.loc 1 821 0
 463 0000 014B     		ldr	r3, .L48
 464 0002 1888     		ldrh	r0, [r3]
 822:Generated_Source\PSoC5/Z_PWM.c ****         #endif /* (Z_PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC5/Z_PWM.c ****     }
 465              		.loc 1 823 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 24


 466 0004 80B2     		uxth	r0, r0
 467 0006 7047     		bx	lr
 468              	.L49:
 469              		.align	2
 470              	.L48:
 471 0008 40680040 		.word	1073768512
 472              		.cfi_endproc
 473              	.LFE14:
 474              		.size	Z_PWM_ReadCompare, .-Z_PWM_ReadCompare
 475              		.section	.text.Z_PWM_ReadPeriod,"ax",%progbits
 476              		.align	2
 477              		.global	Z_PWM_ReadPeriod
 478              		.thumb
 479              		.thumb_func
 480              		.type	Z_PWM_ReadPeriod, %function
 481              	Z_PWM_ReadPeriod:
 482              	.LFB15:
 824:Generated_Source\PSoC5/Z_PWM.c **** 
 825:Generated_Source\PSoC5/Z_PWM.c **** #else
 826:Generated_Source\PSoC5/Z_PWM.c **** 
 827:Generated_Source\PSoC5/Z_PWM.c **** 
 828:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadCompare1
 830:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/Z_PWM.c ****     *
 832:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 833:Generated_Source\PSoC5/Z_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/Z_PWM.c ****     *
 835:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 836:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 837:Generated_Source\PSoC5/Z_PWM.c ****     *
 838:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 839:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/Z_PWM.c ****     *
 841:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/Z_PWM.c ****     uint16 Z_PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC5/Z_PWM.c ****     {
 844:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG16(Z_PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/Z_PWM.c ****     }
 846:Generated_Source\PSoC5/Z_PWM.c **** 
 847:Generated_Source\PSoC5/Z_PWM.c **** 
 848:Generated_Source\PSoC5/Z_PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/Z_PWM.c ****     * Function Name: Z_PWM_ReadCompare2
 850:Generated_Source\PSoC5/Z_PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/Z_PWM.c ****     *
 852:Generated_Source\PSoC5/Z_PWM.c ****     * Summary:
 853:Generated_Source\PSoC5/Z_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/Z_PWM.c ****     *
 855:Generated_Source\PSoC5/Z_PWM.c ****     * Parameters:
 856:Generated_Source\PSoC5/Z_PWM.c ****     *  None
 857:Generated_Source\PSoC5/Z_PWM.c ****     *
 858:Generated_Source\PSoC5/Z_PWM.c ****     * Return:
 859:Generated_Source\PSoC5/Z_PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/Z_PWM.c ****     *
 861:Generated_Source\PSoC5/Z_PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/Z_PWM.c ****     uint16 Z_PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC5/Z_PWM.c ****     {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 25


 864:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG16(Z_PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/Z_PWM.c ****     }
 866:Generated_Source\PSoC5/Z_PWM.c **** 
 867:Generated_Source\PSoC5/Z_PWM.c **** #endif /* (Z_PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC5/Z_PWM.c **** 
 869:Generated_Source\PSoC5/Z_PWM.c **** 
 870:Generated_Source\PSoC5/Z_PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/Z_PWM.c **** * Function Name: Z_PWM_ReadPeriod
 872:Generated_Source\PSoC5/Z_PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC5/Z_PWM.c **** *
 874:Generated_Source\PSoC5/Z_PWM.c **** * Summary:
 875:Generated_Source\PSoC5/Z_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/Z_PWM.c **** *
 877:Generated_Source\PSoC5/Z_PWM.c **** * Parameters:
 878:Generated_Source\PSoC5/Z_PWM.c **** *  None
 879:Generated_Source\PSoC5/Z_PWM.c **** *
 880:Generated_Source\PSoC5/Z_PWM.c **** * Return:
 881:Generated_Source\PSoC5/Z_PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/Z_PWM.c **** *
 883:Generated_Source\PSoC5/Z_PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/Z_PWM.c **** uint16 Z_PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC5/Z_PWM.c **** {
 483              		.loc 1 885 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 886:Generated_Source\PSoC5/Z_PWM.c ****     #if(Z_PWM_UsingFixedFunction)
 887:Generated_Source\PSoC5/Z_PWM.c ****         return ((uint16)CY_GET_REG16(Z_PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/Z_PWM.c ****     #else
 889:Generated_Source\PSoC5/Z_PWM.c ****         return (CY_GET_REG16(Z_PWM_PERIOD_LSB_PTR));
 488              		.loc 1 889 0
 489 0000 014B     		ldr	r3, .L51
 490 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/Z_PWM.c ****     #endif /* (Z_PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC5/Z_PWM.c **** }
 491              		.loc 1 891 0
 492 0004 80B2     		uxth	r0, r0
 493 0006 7047     		bx	lr
 494              	.L52:
 495              		.align	2
 496              	.L51:
 497 0008 80680040 		.word	1073768576
 498              		.cfi_endproc
 499              	.LFE15:
 500              		.size	Z_PWM_ReadPeriod, .-Z_PWM_ReadPeriod
 501              		.global	Z_PWM_initVar
 502              		.bss
 503              		.set	.LANCHOR0,. + 0
 504              		.type	Z_PWM_initVar, %object
 505              		.size	Z_PWM_initVar, 1
 506              	Z_PWM_initVar:
 507 0000 00       		.space	1
 508              		.text
 509              	.Letext0:
 510              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 511              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 26


 512              		.section	.debug_info,"",%progbits
 513              	.Ldebug_info0:
 514 0000 50030000 		.4byte	0x350
 515 0004 0400     		.2byte	0x4
 516 0006 00000000 		.4byte	.Ldebug_abbrev0
 517 000a 04       		.byte	0x4
 518 000b 01       		.uleb128 0x1
 519 000c 9B000000 		.4byte	.LASF43
 520 0010 0C       		.byte	0xc
 521 0011 E4020000 		.4byte	.LASF44
 522 0015 6C020000 		.4byte	.LASF45
 523 0019 00000000 		.4byte	.Ldebug_ranges0+0
 524 001d 00000000 		.4byte	0
 525 0021 00000000 		.4byte	.Ldebug_line0
 526 0025 02       		.uleb128 0x2
 527 0026 01       		.byte	0x1
 528 0027 06       		.byte	0x6
 529 0028 45030000 		.4byte	.LASF0
 530 002c 02       		.uleb128 0x2
 531 002d 01       		.byte	0x1
 532 002e 08       		.byte	0x8
 533 002f 4C010000 		.4byte	.LASF1
 534 0033 02       		.uleb128 0x2
 535 0034 02       		.byte	0x2
 536 0035 05       		.byte	0x5
 537 0036 1C030000 		.4byte	.LASF2
 538 003a 02       		.uleb128 0x2
 539 003b 02       		.byte	0x2
 540 003c 07       		.byte	0x7
 541 003d 33000000 		.4byte	.LASF3
 542 0041 02       		.uleb128 0x2
 543 0042 04       		.byte	0x4
 544 0043 05       		.byte	0x5
 545 0044 2B030000 		.4byte	.LASF4
 546 0048 02       		.uleb128 0x2
 547 0049 04       		.byte	0x4
 548 004a 07       		.byte	0x7
 549 004b B7010000 		.4byte	.LASF5
 550 004f 02       		.uleb128 0x2
 551 0050 08       		.byte	0x8
 552 0051 05       		.byte	0x5
 553 0052 D6020000 		.4byte	.LASF6
 554 0056 02       		.uleb128 0x2
 555 0057 08       		.byte	0x8
 556 0058 07       		.byte	0x7
 557 0059 78000000 		.4byte	.LASF7
 558 005d 03       		.uleb128 0x3
 559 005e 04       		.byte	0x4
 560 005f 05       		.byte	0x5
 561 0060 696E7400 		.ascii	"int\000"
 562 0064 02       		.uleb128 0x2
 563 0065 04       		.byte	0x4
 564 0066 07       		.byte	0x7
 565 0067 C9010000 		.4byte	.LASF8
 566 006b 04       		.uleb128 0x4
 567 006c 3E010000 		.4byte	.LASF9
 568 0070 02       		.byte	0x2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 27


 569 0071 E401     		.2byte	0x1e4
 570 0073 2C000000 		.4byte	0x2c
 571 0077 04       		.uleb128 0x4
 572 0078 84010000 		.4byte	.LASF10
 573 007c 02       		.byte	0x2
 574 007d E501     		.2byte	0x1e5
 575 007f 3A000000 		.4byte	0x3a
 576 0083 02       		.uleb128 0x2
 577 0084 04       		.byte	0x4
 578 0085 04       		.byte	0x4
 579 0086 1B000000 		.4byte	.LASF11
 580 008a 02       		.uleb128 0x2
 581 008b 08       		.byte	0x8
 582 008c 04       		.byte	0x4
 583 008d 62010000 		.4byte	.LASF12
 584 0091 02       		.uleb128 0x2
 585 0092 01       		.byte	0x1
 586 0093 08       		.byte	0x8
 587 0094 34030000 		.4byte	.LASF13
 588 0098 04       		.uleb128 0x4
 589 0099 29010000 		.4byte	.LASF14
 590 009d 02       		.byte	0x2
 591 009e 8E02     		.2byte	0x28e
 592 00a0 A4000000 		.4byte	0xa4
 593 00a4 05       		.uleb128 0x5
 594 00a5 6B000000 		.4byte	0x6b
 595 00a9 04       		.uleb128 0x4
 596 00aa 00000000 		.4byte	.LASF15
 597 00ae 02       		.byte	0x2
 598 00af 8F02     		.2byte	0x28f
 599 00b1 B5000000 		.4byte	0xb5
 600 00b5 05       		.uleb128 0x5
 601 00b6 77000000 		.4byte	0x77
 602 00ba 02       		.uleb128 0x2
 603 00bb 08       		.byte	0x8
 604 00bc 04       		.byte	0x4
 605 00bd 39030000 		.4byte	.LASF16
 606 00c1 02       		.uleb128 0x2
 607 00c2 04       		.byte	0x4
 608 00c3 07       		.byte	0x7
 609 00c4 CD020000 		.4byte	.LASF17
 610 00c8 06       		.uleb128 0x6
 611 00c9 6B000000 		.4byte	.LASF18
 612 00cd 01       		.byte	0x1
 613 00ce C7       		.byte	0xc7
 614 00cf 00000000 		.4byte	.LFB2
 615 00d3 10000000 		.4byte	.LFE2-.LFB2
 616 00d7 01       		.uleb128 0x1
 617 00d8 9C       		.byte	0x9c
 618 00d9 06       		.uleb128 0x6
 619 00da 21000000 		.4byte	.LASF19
 620 00de 01       		.byte	0x1
 621 00df E9       		.byte	0xe9
 622 00e0 00000000 		.4byte	.LFB3
 623 00e4 10000000 		.4byte	.LFE3-.LFB3
 624 00e8 01       		.uleb128 0x1
 625 00e9 9C       		.byte	0x9c
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 28


 626 00ea 07       		.uleb128 0x7
 627 00eb EC010000 		.4byte	.LASF20
 628 00ef 01       		.byte	0x1
 629 00f0 9301     		.2byte	0x193
 630 00f2 00000000 		.4byte	.LFB4
 631 00f6 0C000000 		.4byte	.LFE4-.LFB4
 632 00fa 01       		.uleb128 0x1
 633 00fb 9C       		.byte	0x9c
 634 00fc 0F010000 		.4byte	0x10f
 635 0100 08       		.uleb128 0x8
 636 0101 5A010000 		.4byte	.LASF22
 637 0105 01       		.byte	0x1
 638 0106 9301     		.2byte	0x193
 639 0108 77000000 		.4byte	0x77
 640 010c 01       		.uleb128 0x1
 641 010d 50       		.byte	0x50
 642 010e 00       		.byte	0
 643 010f 09       		.uleb128 0x9
 644 0110 59030000 		.4byte	.LASF28
 645 0114 01       		.byte	0x1
 646 0115 A901     		.2byte	0x1a9
 647 0117 77000000 		.4byte	0x77
 648 011b 00000000 		.4byte	.LFB5
 649 011f 14000000 		.4byte	.LFE5-.LFB5
 650 0123 01       		.uleb128 0x1
 651 0124 9C       		.byte	0x9c
 652 0125 07       		.uleb128 0x7
 653 0126 46000000 		.4byte	.LASF21
 654 012a 01       		.byte	0x1
 655 012b E201     		.2byte	0x1e2
 656 012d 00000000 		.4byte	.LFB7
 657 0131 0C000000 		.4byte	.LFE7-.LFB7
 658 0135 01       		.uleb128 0x1
 659 0136 9C       		.byte	0x9c
 660 0137 4A010000 		.4byte	0x14a
 661 013b 08       		.uleb128 0x8
 662 013c 2C000000 		.4byte	.LASF23
 663 0140 01       		.byte	0x1
 664 0141 E201     		.2byte	0x1e2
 665 0143 77000000 		.4byte	0x77
 666 0147 01       		.uleb128 0x1
 667 0148 50       		.byte	0x50
 668 0149 00       		.byte	0
 669 014a 07       		.uleb128 0x7
 670 014b 58000000 		.4byte	.LASF24
 671 014f 01       		.byte	0x1
 672 0150 0402     		.2byte	0x204
 673 0152 00000000 		.4byte	.LFB8
 674 0156 0C000000 		.4byte	.LFE8-.LFB8
 675 015a 01       		.uleb128 0x1
 676 015b 9C       		.byte	0x9c
 677 015c 6F010000 		.4byte	0x16f
 678 0160 08       		.uleb128 0x8
 679 0161 51030000 		.4byte	.LASF25
 680 0165 01       		.byte	0x1
 681 0166 0402     		.2byte	0x204
 682 0168 77000000 		.4byte	0x77
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 29


 683 016c 01       		.uleb128 0x1
 684 016d 50       		.byte	0x50
 685 016e 00       		.byte	0
 686 016f 07       		.uleb128 0x7
 687 0170 55020000 		.4byte	.LASF26
 688 0174 01       		.byte	0x1
 689 0175 AC02     		.2byte	0x2ac
 690 0177 00000000 		.4byte	.LFB9
 691 017b 0C000000 		.4byte	.LFE9-.LFB9
 692 017f 01       		.uleb128 0x1
 693 0180 9C       		.byte	0x9c
 694 0181 94010000 		.4byte	0x194
 695 0185 08       		.uleb128 0x8
 696 0186 03030000 		.4byte	.LASF27
 697 018a 01       		.byte	0x1
 698 018b AC02     		.2byte	0x2ac
 699 018d 6B000000 		.4byte	0x6b
 700 0191 01       		.uleb128 0x1
 701 0192 50       		.byte	0x50
 702 0193 00       		.byte	0
 703 0194 09       		.uleb128 0x9
 704 0195 FF010000 		.4byte	.LASF29
 705 0199 01       		.byte	0x1
 706 019a C702     		.2byte	0x2c7
 707 019c 6B000000 		.4byte	0x6b
 708 01a0 00000000 		.4byte	.LFB10
 709 01a4 0C000000 		.4byte	.LFE10-.LFB10
 710 01a8 01       		.uleb128 0x1
 711 01a9 9C       		.byte	0x9c
 712 01aa 0A       		.uleb128 0xa
 713 01ab 2A020000 		.4byte	.LASF46
 714 01af 01       		.byte	0x1
 715 01b0 E102     		.2byte	0x2e1
 716 01b2 6B000000 		.4byte	0x6b
 717 01b6 00000000 		.4byte	.LFB11
 718 01ba 0C000000 		.4byte	.LFE11-.LFB11
 719 01be 01       		.uleb128 0x1
 720 01bf 9C       		.byte	0x9c
 721 01c0 D3010000 		.4byte	0x1d3
 722 01c4 0B       		.uleb128 0xb
 723 01c5 14000000 		.4byte	.LASF35
 724 01c9 01       		.byte	0x1
 725 01ca E302     		.2byte	0x2e3
 726 01cc 6B000000 		.4byte	0x6b
 727 01d0 01       		.uleb128 0x1
 728 01d1 50       		.byte	0x50
 729 01d2 00       		.byte	0
 730 01d3 07       		.uleb128 0x7
 731 01d4 69010000 		.4byte	.LASF30
 732 01d8 01       		.byte	0x1
 733 01d9 FD02     		.2byte	0x2fd
 734 01db 00000000 		.4byte	.LFB12
 735 01df 0C000000 		.4byte	.LFE12-.LFB12
 736 01e3 01       		.uleb128 0x1
 737 01e4 9C       		.byte	0x9c
 738 01e5 F8010000 		.4byte	0x1f8
 739 01e9 08       		.uleb128 0x8
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 30


 740 01ea 44010000 		.4byte	.LASF31
 741 01ee 01       		.byte	0x1
 742 01ef FD02     		.2byte	0x2fd
 743 01f1 6B000000 		.4byte	0x6b
 744 01f5 01       		.uleb128 0x1
 745 01f6 50       		.byte	0x50
 746 01f7 00       		.byte	0
 747 01f8 09       		.uleb128 0x9
 748 01f9 BB020000 		.4byte	.LASF32
 749 01fd 01       		.byte	0x1
 750 01fe 1603     		.2byte	0x316
 751 0200 77000000 		.4byte	0x77
 752 0204 00000000 		.4byte	.LFB13
 753 0208 0C000000 		.4byte	.LFE13-.LFB13
 754 020c 01       		.uleb128 0x1
 755 020d 9C       		.byte	0x9c
 756 020e 07       		.uleb128 0x7
 757 020f 2E010000 		.4byte	.LASF33
 758 0213 01       		.byte	0x1
 759 0214 C501     		.2byte	0x1c5
 760 0216 00000000 		.4byte	.LFB6
 761 021a 14000000 		.4byte	.LFE6-.LFB6
 762 021e 01       		.uleb128 0x1
 763 021f 9C       		.byte	0x9c
 764 0220 37020000 		.4byte	0x237
 765 0224 0C       		.uleb128 0xc
 766 0225 08000000 		.4byte	.LVL6
 767 0229 F8010000 		.4byte	0x1f8
 768 022d 0C       		.uleb128 0xc
 769 022e 0C000000 		.4byte	.LVL7
 770 0232 94010000 		.4byte	0x194
 771 0236 00       		.byte	0
 772 0237 0D       		.uleb128 0xd
 773 0238 11030000 		.4byte	.LASF34
 774 023c 01       		.byte	0x1
 775 023d 54       		.byte	0x54
 776 023e 00000000 		.4byte	.LFB1
 777 0242 60000000 		.4byte	.LFE1-.LFB1
 778 0246 01       		.uleb128 0x1
 779 0247 9C       		.byte	0x9c
 780 0248 D8020000 		.4byte	0x2d8
 781 024c 0E       		.uleb128 0xe
 782 024d 26030000 		.4byte	.LASF36
 783 0251 01       		.byte	0x1
 784 0252 57       		.byte	0x57
 785 0253 6B000000 		.4byte	0x6b
 786 0257 00000000 		.4byte	.LLST0
 787 025b 0E       		.uleb128 0xe
 788 025c 8B010000 		.4byte	.LASF37
 789 0260 01       		.byte	0x1
 790 0261 5D       		.byte	0x5d
 791 0262 6B000000 		.4byte	0x6b
 792 0266 13000000 		.4byte	.LLST1
 793 026a 0F       		.uleb128 0xf
 794 026b 2C000000 		.4byte	.LVL10
 795 026f EA000000 		.4byte	0xea
 796 0273 7F020000 		.4byte	0x27f
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 31


 797 0277 10       		.uleb128 0x10
 798 0278 01       		.uleb128 0x1
 799 0279 50       		.byte	0x50
 800 027a 03       		.uleb128 0x3
 801 027b 0A       		.byte	0xa
 802 027c 0010     		.2byte	0x1000
 803 027e 00       		.byte	0
 804 027f 0F       		.uleb128 0xf
 805 0280 34000000 		.4byte	.LVL11
 806 0284 25010000 		.4byte	0x125
 807 0288 94020000 		.4byte	0x294
 808 028c 10       		.uleb128 0x10
 809 028d 01       		.uleb128 0x1
 810 028e 50       		.byte	0x50
 811 028f 03       		.uleb128 0x3
 812 0290 0A       		.byte	0xa
 813 0291 0010     		.2byte	0x1000
 814 0293 00       		.byte	0
 815 0294 0F       		.uleb128 0xf
 816 0295 3C000000 		.4byte	.LVL12
 817 0299 4A010000 		.4byte	0x14a
 818 029d A9020000 		.4byte	0x2a9
 819 02a1 10       		.uleb128 0x10
 820 02a2 01       		.uleb128 0x1
 821 02a3 50       		.byte	0x50
 822 02a4 03       		.uleb128 0x3
 823 02a5 0A       		.byte	0xa
 824 02a6 0002     		.2byte	0x200
 825 02a8 00       		.byte	0
 826 02a9 0F       		.uleb128 0xf
 827 02aa 42000000 		.4byte	.LVL13
 828 02ae 6F010000 		.4byte	0x16f
 829 02b2 BC020000 		.4byte	0x2bc
 830 02b6 10       		.uleb128 0x10
 831 02b7 01       		.uleb128 0x1
 832 02b8 50       		.byte	0x50
 833 02b9 01       		.uleb128 0x1
 834 02ba 30       		.byte	0x30
 835 02bb 00       		.byte	0
 836 02bc 0C       		.uleb128 0xc
 837 02bd 46000000 		.4byte	.LVL14
 838 02c1 3D030000 		.4byte	0x33d
 839 02c5 0C       		.uleb128 0xc
 840 02c6 52000000 		.4byte	.LVL15
 841 02ca 48030000 		.4byte	0x348
 842 02ce 0C       		.uleb128 0xc
 843 02cf 56000000 		.4byte	.LVL16
 844 02d3 0E020000 		.4byte	0x20e
 845 02d7 00       		.byte	0
 846 02d8 0D       		.uleb128 0xd
 847 02d9 8F000000 		.4byte	.LASF38
 848 02dd 01       		.byte	0x1
 849 02de 37       		.byte	0x37
 850 02df 00000000 		.4byte	.LFB0
 851 02e3 1C000000 		.4byte	.LFE0-.LFB0
 852 02e7 01       		.uleb128 0x1
 853 02e8 9C       		.byte	0x9c
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 32


 854 02e9 00030000 		.4byte	0x300
 855 02ed 0C       		.uleb128 0xc
 856 02ee 0C000000 		.4byte	.LVL17
 857 02f2 37020000 		.4byte	0x237
 858 02f6 0C       		.uleb128 0xc
 859 02f7 16000000 		.4byte	.LVL18
 860 02fb C8000000 		.4byte	0xc8
 861 02ff 00       		.byte	0
 862 0300 09       		.uleb128 0x9
 863 0301 18020000 		.4byte	.LASF39
 864 0305 01       		.byte	0x1
 865 0306 3003     		.2byte	0x330
 866 0308 77000000 		.4byte	0x77
 867 030c 00000000 		.4byte	.LFB14
 868 0310 0C000000 		.4byte	.LFE14-.LFB14
 869 0314 01       		.uleb128 0x1
 870 0315 9C       		.byte	0x9c
 871 0316 09       		.uleb128 0x9
 872 0317 44020000 		.4byte	.LASF40
 873 031b 01       		.byte	0x1
 874 031c 7403     		.2byte	0x374
 875 031e 77000000 		.4byte	0x77
 876 0322 00000000 		.4byte	.LFB15
 877 0326 0C000000 		.4byte	.LFE15-.LFB15
 878 032a 01       		.uleb128 0x1
 879 032b 9C       		.byte	0x9c
 880 032c 11       		.uleb128 0x11
 881 032d 06000000 		.4byte	.LASF47
 882 0331 01       		.byte	0x1
 883 0332 20       		.byte	0x20
 884 0333 6B000000 		.4byte	0x6b
 885 0337 05       		.uleb128 0x5
 886 0338 03       		.byte	0x3
 887 0339 00000000 		.4byte	Z_PWM_initVar
 888 033d 12       		.uleb128 0x12
 889 033e A0010000 		.4byte	.LASF41
 890 0342 A0010000 		.4byte	.LASF41
 891 0346 03       		.byte	0x3
 892 0347 7D       		.byte	0x7d
 893 0348 12       		.uleb128 0x12
 894 0349 D6010000 		.4byte	.LASF42
 895 034d D6010000 		.4byte	.LASF42
 896 0351 03       		.byte	0x3
 897 0352 7E       		.byte	0x7e
 898 0353 00       		.byte	0
 899              		.section	.debug_abbrev,"",%progbits
 900              	.Ldebug_abbrev0:
 901 0000 01       		.uleb128 0x1
 902 0001 11       		.uleb128 0x11
 903 0002 01       		.byte	0x1
 904 0003 25       		.uleb128 0x25
 905 0004 0E       		.uleb128 0xe
 906 0005 13       		.uleb128 0x13
 907 0006 0B       		.uleb128 0xb
 908 0007 03       		.uleb128 0x3
 909 0008 0E       		.uleb128 0xe
 910 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 33


 911 000a 0E       		.uleb128 0xe
 912 000b 55       		.uleb128 0x55
 913 000c 17       		.uleb128 0x17
 914 000d 11       		.uleb128 0x11
 915 000e 01       		.uleb128 0x1
 916 000f 10       		.uleb128 0x10
 917 0010 17       		.uleb128 0x17
 918 0011 00       		.byte	0
 919 0012 00       		.byte	0
 920 0013 02       		.uleb128 0x2
 921 0014 24       		.uleb128 0x24
 922 0015 00       		.byte	0
 923 0016 0B       		.uleb128 0xb
 924 0017 0B       		.uleb128 0xb
 925 0018 3E       		.uleb128 0x3e
 926 0019 0B       		.uleb128 0xb
 927 001a 03       		.uleb128 0x3
 928 001b 0E       		.uleb128 0xe
 929 001c 00       		.byte	0
 930 001d 00       		.byte	0
 931 001e 03       		.uleb128 0x3
 932 001f 24       		.uleb128 0x24
 933 0020 00       		.byte	0
 934 0021 0B       		.uleb128 0xb
 935 0022 0B       		.uleb128 0xb
 936 0023 3E       		.uleb128 0x3e
 937 0024 0B       		.uleb128 0xb
 938 0025 03       		.uleb128 0x3
 939 0026 08       		.uleb128 0x8
 940 0027 00       		.byte	0
 941 0028 00       		.byte	0
 942 0029 04       		.uleb128 0x4
 943 002a 16       		.uleb128 0x16
 944 002b 00       		.byte	0
 945 002c 03       		.uleb128 0x3
 946 002d 0E       		.uleb128 0xe
 947 002e 3A       		.uleb128 0x3a
 948 002f 0B       		.uleb128 0xb
 949 0030 3B       		.uleb128 0x3b
 950 0031 05       		.uleb128 0x5
 951 0032 49       		.uleb128 0x49
 952 0033 13       		.uleb128 0x13
 953 0034 00       		.byte	0
 954 0035 00       		.byte	0
 955 0036 05       		.uleb128 0x5
 956 0037 35       		.uleb128 0x35
 957 0038 00       		.byte	0
 958 0039 49       		.uleb128 0x49
 959 003a 13       		.uleb128 0x13
 960 003b 00       		.byte	0
 961 003c 00       		.byte	0
 962 003d 06       		.uleb128 0x6
 963 003e 2E       		.uleb128 0x2e
 964 003f 00       		.byte	0
 965 0040 3F       		.uleb128 0x3f
 966 0041 19       		.uleb128 0x19
 967 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 34


 968 0043 0E       		.uleb128 0xe
 969 0044 3A       		.uleb128 0x3a
 970 0045 0B       		.uleb128 0xb
 971 0046 3B       		.uleb128 0x3b
 972 0047 0B       		.uleb128 0xb
 973 0048 27       		.uleb128 0x27
 974 0049 19       		.uleb128 0x19
 975 004a 11       		.uleb128 0x11
 976 004b 01       		.uleb128 0x1
 977 004c 12       		.uleb128 0x12
 978 004d 06       		.uleb128 0x6
 979 004e 40       		.uleb128 0x40
 980 004f 18       		.uleb128 0x18
 981 0050 9742     		.uleb128 0x2117
 982 0052 19       		.uleb128 0x19
 983 0053 00       		.byte	0
 984 0054 00       		.byte	0
 985 0055 07       		.uleb128 0x7
 986 0056 2E       		.uleb128 0x2e
 987 0057 01       		.byte	0x1
 988 0058 3F       		.uleb128 0x3f
 989 0059 19       		.uleb128 0x19
 990 005a 03       		.uleb128 0x3
 991 005b 0E       		.uleb128 0xe
 992 005c 3A       		.uleb128 0x3a
 993 005d 0B       		.uleb128 0xb
 994 005e 3B       		.uleb128 0x3b
 995 005f 05       		.uleb128 0x5
 996 0060 27       		.uleb128 0x27
 997 0061 19       		.uleb128 0x19
 998 0062 11       		.uleb128 0x11
 999 0063 01       		.uleb128 0x1
 1000 0064 12       		.uleb128 0x12
 1001 0065 06       		.uleb128 0x6
 1002 0066 40       		.uleb128 0x40
 1003 0067 18       		.uleb128 0x18
 1004 0068 9742     		.uleb128 0x2117
 1005 006a 19       		.uleb128 0x19
 1006 006b 01       		.uleb128 0x1
 1007 006c 13       		.uleb128 0x13
 1008 006d 00       		.byte	0
 1009 006e 00       		.byte	0
 1010 006f 08       		.uleb128 0x8
 1011 0070 05       		.uleb128 0x5
 1012 0071 00       		.byte	0
 1013 0072 03       		.uleb128 0x3
 1014 0073 0E       		.uleb128 0xe
 1015 0074 3A       		.uleb128 0x3a
 1016 0075 0B       		.uleb128 0xb
 1017 0076 3B       		.uleb128 0x3b
 1018 0077 05       		.uleb128 0x5
 1019 0078 49       		.uleb128 0x49
 1020 0079 13       		.uleb128 0x13
 1021 007a 02       		.uleb128 0x2
 1022 007b 18       		.uleb128 0x18
 1023 007c 00       		.byte	0
 1024 007d 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 35


 1025 007e 09       		.uleb128 0x9
 1026 007f 2E       		.uleb128 0x2e
 1027 0080 00       		.byte	0
 1028 0081 3F       		.uleb128 0x3f
 1029 0082 19       		.uleb128 0x19
 1030 0083 03       		.uleb128 0x3
 1031 0084 0E       		.uleb128 0xe
 1032 0085 3A       		.uleb128 0x3a
 1033 0086 0B       		.uleb128 0xb
 1034 0087 3B       		.uleb128 0x3b
 1035 0088 05       		.uleb128 0x5
 1036 0089 27       		.uleb128 0x27
 1037 008a 19       		.uleb128 0x19
 1038 008b 49       		.uleb128 0x49
 1039 008c 13       		.uleb128 0x13
 1040 008d 11       		.uleb128 0x11
 1041 008e 01       		.uleb128 0x1
 1042 008f 12       		.uleb128 0x12
 1043 0090 06       		.uleb128 0x6
 1044 0091 40       		.uleb128 0x40
 1045 0092 18       		.uleb128 0x18
 1046 0093 9742     		.uleb128 0x2117
 1047 0095 19       		.uleb128 0x19
 1048 0096 00       		.byte	0
 1049 0097 00       		.byte	0
 1050 0098 0A       		.uleb128 0xa
 1051 0099 2E       		.uleb128 0x2e
 1052 009a 01       		.byte	0x1
 1053 009b 3F       		.uleb128 0x3f
 1054 009c 19       		.uleb128 0x19
 1055 009d 03       		.uleb128 0x3
 1056 009e 0E       		.uleb128 0xe
 1057 009f 3A       		.uleb128 0x3a
 1058 00a0 0B       		.uleb128 0xb
 1059 00a1 3B       		.uleb128 0x3b
 1060 00a2 05       		.uleb128 0x5
 1061 00a3 27       		.uleb128 0x27
 1062 00a4 19       		.uleb128 0x19
 1063 00a5 49       		.uleb128 0x49
 1064 00a6 13       		.uleb128 0x13
 1065 00a7 11       		.uleb128 0x11
 1066 00a8 01       		.uleb128 0x1
 1067 00a9 12       		.uleb128 0x12
 1068 00aa 06       		.uleb128 0x6
 1069 00ab 40       		.uleb128 0x40
 1070 00ac 18       		.uleb128 0x18
 1071 00ad 9742     		.uleb128 0x2117
 1072 00af 19       		.uleb128 0x19
 1073 00b0 01       		.uleb128 0x1
 1074 00b1 13       		.uleb128 0x13
 1075 00b2 00       		.byte	0
 1076 00b3 00       		.byte	0
 1077 00b4 0B       		.uleb128 0xb
 1078 00b5 34       		.uleb128 0x34
 1079 00b6 00       		.byte	0
 1080 00b7 03       		.uleb128 0x3
 1081 00b8 0E       		.uleb128 0xe
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 36


 1082 00b9 3A       		.uleb128 0x3a
 1083 00ba 0B       		.uleb128 0xb
 1084 00bb 3B       		.uleb128 0x3b
 1085 00bc 05       		.uleb128 0x5
 1086 00bd 49       		.uleb128 0x49
 1087 00be 13       		.uleb128 0x13
 1088 00bf 02       		.uleb128 0x2
 1089 00c0 18       		.uleb128 0x18
 1090 00c1 00       		.byte	0
 1091 00c2 00       		.byte	0
 1092 00c3 0C       		.uleb128 0xc
 1093 00c4 898201   		.uleb128 0x4109
 1094 00c7 00       		.byte	0
 1095 00c8 11       		.uleb128 0x11
 1096 00c9 01       		.uleb128 0x1
 1097 00ca 31       		.uleb128 0x31
 1098 00cb 13       		.uleb128 0x13
 1099 00cc 00       		.byte	0
 1100 00cd 00       		.byte	0
 1101 00ce 0D       		.uleb128 0xd
 1102 00cf 2E       		.uleb128 0x2e
 1103 00d0 01       		.byte	0x1
 1104 00d1 3F       		.uleb128 0x3f
 1105 00d2 19       		.uleb128 0x19
 1106 00d3 03       		.uleb128 0x3
 1107 00d4 0E       		.uleb128 0xe
 1108 00d5 3A       		.uleb128 0x3a
 1109 00d6 0B       		.uleb128 0xb
 1110 00d7 3B       		.uleb128 0x3b
 1111 00d8 0B       		.uleb128 0xb
 1112 00d9 27       		.uleb128 0x27
 1113 00da 19       		.uleb128 0x19
 1114 00db 11       		.uleb128 0x11
 1115 00dc 01       		.uleb128 0x1
 1116 00dd 12       		.uleb128 0x12
 1117 00de 06       		.uleb128 0x6
 1118 00df 40       		.uleb128 0x40
 1119 00e0 18       		.uleb128 0x18
 1120 00e1 9742     		.uleb128 0x2117
 1121 00e3 19       		.uleb128 0x19
 1122 00e4 01       		.uleb128 0x1
 1123 00e5 13       		.uleb128 0x13
 1124 00e6 00       		.byte	0
 1125 00e7 00       		.byte	0
 1126 00e8 0E       		.uleb128 0xe
 1127 00e9 34       		.uleb128 0x34
 1128 00ea 00       		.byte	0
 1129 00eb 03       		.uleb128 0x3
 1130 00ec 0E       		.uleb128 0xe
 1131 00ed 3A       		.uleb128 0x3a
 1132 00ee 0B       		.uleb128 0xb
 1133 00ef 3B       		.uleb128 0x3b
 1134 00f0 0B       		.uleb128 0xb
 1135 00f1 49       		.uleb128 0x49
 1136 00f2 13       		.uleb128 0x13
 1137 00f3 02       		.uleb128 0x2
 1138 00f4 17       		.uleb128 0x17
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 37


 1139 00f5 00       		.byte	0
 1140 00f6 00       		.byte	0
 1141 00f7 0F       		.uleb128 0xf
 1142 00f8 898201   		.uleb128 0x4109
 1143 00fb 01       		.byte	0x1
 1144 00fc 11       		.uleb128 0x11
 1145 00fd 01       		.uleb128 0x1
 1146 00fe 31       		.uleb128 0x31
 1147 00ff 13       		.uleb128 0x13
 1148 0100 01       		.uleb128 0x1
 1149 0101 13       		.uleb128 0x13
 1150 0102 00       		.byte	0
 1151 0103 00       		.byte	0
 1152 0104 10       		.uleb128 0x10
 1153 0105 8A8201   		.uleb128 0x410a
 1154 0108 00       		.byte	0
 1155 0109 02       		.uleb128 0x2
 1156 010a 18       		.uleb128 0x18
 1157 010b 9142     		.uleb128 0x2111
 1158 010d 18       		.uleb128 0x18
 1159 010e 00       		.byte	0
 1160 010f 00       		.byte	0
 1161 0110 11       		.uleb128 0x11
 1162 0111 34       		.uleb128 0x34
 1163 0112 00       		.byte	0
 1164 0113 03       		.uleb128 0x3
 1165 0114 0E       		.uleb128 0xe
 1166 0115 3A       		.uleb128 0x3a
 1167 0116 0B       		.uleb128 0xb
 1168 0117 3B       		.uleb128 0x3b
 1169 0118 0B       		.uleb128 0xb
 1170 0119 49       		.uleb128 0x49
 1171 011a 13       		.uleb128 0x13
 1172 011b 3F       		.uleb128 0x3f
 1173 011c 19       		.uleb128 0x19
 1174 011d 02       		.uleb128 0x2
 1175 011e 18       		.uleb128 0x18
 1176 011f 00       		.byte	0
 1177 0120 00       		.byte	0
 1178 0121 12       		.uleb128 0x12
 1179 0122 2E       		.uleb128 0x2e
 1180 0123 00       		.byte	0
 1181 0124 3F       		.uleb128 0x3f
 1182 0125 19       		.uleb128 0x19
 1183 0126 3C       		.uleb128 0x3c
 1184 0127 19       		.uleb128 0x19
 1185 0128 6E       		.uleb128 0x6e
 1186 0129 0E       		.uleb128 0xe
 1187 012a 03       		.uleb128 0x3
 1188 012b 0E       		.uleb128 0xe
 1189 012c 3A       		.uleb128 0x3a
 1190 012d 0B       		.uleb128 0xb
 1191 012e 3B       		.uleb128 0x3b
 1192 012f 0B       		.uleb128 0xb
 1193 0130 00       		.byte	0
 1194 0131 00       		.byte	0
 1195 0132 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 38


 1196              		.section	.debug_loc,"",%progbits
 1197              	.Ldebug_loc0:
 1198              	.LLST0:
 1199 0000 0A000000 		.4byte	.LVL8
 1200 0004 0E000000 		.4byte	.LVL9
 1201 0008 0100     		.2byte	0x1
 1202 000a 53       		.byte	0x53
 1203 000b 00000000 		.4byte	0
 1204 000f 00000000 		.4byte	0
 1205              	.LLST1:
 1206 0013 46000000 		.4byte	.LVL14
 1207 0017 51000000 		.4byte	.LVL15-1
 1208 001b 0100     		.2byte	0x1
 1209 001d 50       		.byte	0x50
 1210 001e 00000000 		.4byte	0
 1211 0022 00000000 		.4byte	0
 1212              		.section	.debug_aranges,"",%progbits
 1213 0000 94000000 		.4byte	0x94
 1214 0004 0200     		.2byte	0x2
 1215 0006 00000000 		.4byte	.Ldebug_info0
 1216 000a 04       		.byte	0x4
 1217 000b 00       		.byte	0
 1218 000c 0000     		.2byte	0
 1219 000e 0000     		.2byte	0
 1220 0010 00000000 		.4byte	.LFB2
 1221 0014 10000000 		.4byte	.LFE2-.LFB2
 1222 0018 00000000 		.4byte	.LFB3
 1223 001c 10000000 		.4byte	.LFE3-.LFB3
 1224 0020 00000000 		.4byte	.LFB4
 1225 0024 0C000000 		.4byte	.LFE4-.LFB4
 1226 0028 00000000 		.4byte	.LFB5
 1227 002c 14000000 		.4byte	.LFE5-.LFB5
 1228 0030 00000000 		.4byte	.LFB7
 1229 0034 0C000000 		.4byte	.LFE7-.LFB7
 1230 0038 00000000 		.4byte	.LFB8
 1231 003c 0C000000 		.4byte	.LFE8-.LFB8
 1232 0040 00000000 		.4byte	.LFB9
 1233 0044 0C000000 		.4byte	.LFE9-.LFB9
 1234 0048 00000000 		.4byte	.LFB10
 1235 004c 0C000000 		.4byte	.LFE10-.LFB10
 1236 0050 00000000 		.4byte	.LFB11
 1237 0054 0C000000 		.4byte	.LFE11-.LFB11
 1238 0058 00000000 		.4byte	.LFB12
 1239 005c 0C000000 		.4byte	.LFE12-.LFB12
 1240 0060 00000000 		.4byte	.LFB13
 1241 0064 0C000000 		.4byte	.LFE13-.LFB13
 1242 0068 00000000 		.4byte	.LFB6
 1243 006c 14000000 		.4byte	.LFE6-.LFB6
 1244 0070 00000000 		.4byte	.LFB1
 1245 0074 60000000 		.4byte	.LFE1-.LFB1
 1246 0078 00000000 		.4byte	.LFB0
 1247 007c 1C000000 		.4byte	.LFE0-.LFB0
 1248 0080 00000000 		.4byte	.LFB14
 1249 0084 0C000000 		.4byte	.LFE14-.LFB14
 1250 0088 00000000 		.4byte	.LFB15
 1251 008c 0C000000 		.4byte	.LFE15-.LFB15
 1252 0090 00000000 		.4byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 39


 1253 0094 00000000 		.4byte	0
 1254              		.section	.debug_ranges,"",%progbits
 1255              	.Ldebug_ranges0:
 1256 0000 00000000 		.4byte	.LFB2
 1257 0004 10000000 		.4byte	.LFE2
 1258 0008 00000000 		.4byte	.LFB3
 1259 000c 10000000 		.4byte	.LFE3
 1260 0010 00000000 		.4byte	.LFB4
 1261 0014 0C000000 		.4byte	.LFE4
 1262 0018 00000000 		.4byte	.LFB5
 1263 001c 14000000 		.4byte	.LFE5
 1264 0020 00000000 		.4byte	.LFB7
 1265 0024 0C000000 		.4byte	.LFE7
 1266 0028 00000000 		.4byte	.LFB8
 1267 002c 0C000000 		.4byte	.LFE8
 1268 0030 00000000 		.4byte	.LFB9
 1269 0034 0C000000 		.4byte	.LFE9
 1270 0038 00000000 		.4byte	.LFB10
 1271 003c 0C000000 		.4byte	.LFE10
 1272 0040 00000000 		.4byte	.LFB11
 1273 0044 0C000000 		.4byte	.LFE11
 1274 0048 00000000 		.4byte	.LFB12
 1275 004c 0C000000 		.4byte	.LFE12
 1276 0050 00000000 		.4byte	.LFB13
 1277 0054 0C000000 		.4byte	.LFE13
 1278 0058 00000000 		.4byte	.LFB6
 1279 005c 14000000 		.4byte	.LFE6
 1280 0060 00000000 		.4byte	.LFB1
 1281 0064 60000000 		.4byte	.LFE1
 1282 0068 00000000 		.4byte	.LFB0
 1283 006c 1C000000 		.4byte	.LFE0
 1284 0070 00000000 		.4byte	.LFB14
 1285 0074 0C000000 		.4byte	.LFE14
 1286 0078 00000000 		.4byte	.LFB15
 1287 007c 0C000000 		.4byte	.LFE15
 1288 0080 00000000 		.4byte	0
 1289 0084 00000000 		.4byte	0
 1290              		.section	.debug_line,"",%progbits
 1291              	.Ldebug_line0:
 1292 0000 84010000 		.section	.debug_str,"MS",%progbits,1
 1292      02004D00 
 1292      00000201 
 1292      FB0E0D00 
 1292      01010101 
 1293              	.LASF15:
 1294 0000 72656731 		.ascii	"reg16\000"
 1294      3600
 1295              	.LASF47:
 1296 0006 5A5F5057 		.ascii	"Z_PWM_initVar\000"
 1296      4D5F696E 
 1296      69745661 
 1296      7200
 1297              	.LASF35:
 1298 0014 72657375 		.ascii	"result\000"
 1298      6C7400
 1299              	.LASF11:
 1300 001b 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 40


 1300      7400
 1301              	.LASF19:
 1302 0021 5A5F5057 		.ascii	"Z_PWM_Stop\000"
 1302      4D5F5374 
 1302      6F7000
 1303              	.LASF23:
 1304 002c 70657269 		.ascii	"period\000"
 1304      6F6400
 1305              	.LASF3:
 1306 0033 73686F72 		.ascii	"short unsigned int\000"
 1306      7420756E 
 1306      7369676E 
 1306      65642069 
 1306      6E7400
 1307              	.LASF21:
 1308 0046 5A5F5057 		.ascii	"Z_PWM_WritePeriod\000"
 1308      4D5F5772 
 1308      69746550 
 1308      6572696F 
 1308      6400
 1309              	.LASF24:
 1310 0058 5A5F5057 		.ascii	"Z_PWM_WriteCompare\000"
 1310      4D5F5772 
 1310      69746543 
 1310      6F6D7061 
 1310      726500
 1311              	.LASF18:
 1312 006b 5A5F5057 		.ascii	"Z_PWM_Enable\000"
 1312      4D5F456E 
 1312      61626C65 
 1312      00
 1313              	.LASF7:
 1314 0078 6C6F6E67 		.ascii	"long long unsigned int\000"
 1314      206C6F6E 
 1314      6720756E 
 1314      7369676E 
 1314      65642069 
 1315              	.LASF38:
 1316 008f 5A5F5057 		.ascii	"Z_PWM_Start\000"
 1316      4D5F5374 
 1316      61727400 
 1317              	.LASF43:
 1318 009b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1318      43313120 
 1318      352E342E 
 1318      31203230 
 1318      31363036 
 1319 00ce 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1319      20726576 
 1319      6973696F 
 1319      6E203233 
 1319      37373135 
 1320 0101 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1320      66756E63 
 1320      74696F6E 
 1320      2D736563 
 1320      74696F6E 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 41


 1321              	.LASF14:
 1322 0129 72656738 		.ascii	"reg8\000"
 1322      00
 1323              	.LASF33:
 1324 012e 5A5F5057 		.ascii	"Z_PWM_ClearFIFO\000"
 1324      4D5F436C 
 1324      65617246 
 1324      49464F00 
 1325              	.LASF9:
 1326 013e 75696E74 		.ascii	"uint8\000"
 1326      3800
 1327              	.LASF31:
 1328 0144 636F6E74 		.ascii	"control\000"
 1328      726F6C00 
 1329              	.LASF1:
 1330 014c 756E7369 		.ascii	"unsigned char\000"
 1330      676E6564 
 1330      20636861 
 1330      7200
 1331              	.LASF22:
 1332 015a 636F756E 		.ascii	"counter\000"
 1332      74657200 
 1333              	.LASF12:
 1334 0162 646F7562 		.ascii	"double\000"
 1334      6C6500
 1335              	.LASF30:
 1336 0169 5A5F5057 		.ascii	"Z_PWM_WriteControlRegister\000"
 1336      4D5F5772 
 1336      69746543 
 1336      6F6E7472 
 1336      6F6C5265 
 1337              	.LASF10:
 1338 0184 75696E74 		.ascii	"uint16\000"
 1338      313600
 1339              	.LASF37:
 1340 018b 5A5F5057 		.ascii	"Z_PWM_interruptState\000"
 1340      4D5F696E 
 1340      74657272 
 1340      75707453 
 1340      74617465 
 1341              	.LASF41:
 1342 01a0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1342      74657243 
 1342      72697469 
 1342      63616C53 
 1342      65637469 
 1343              	.LASF5:
 1344 01b7 6C6F6E67 		.ascii	"long unsigned int\000"
 1344      20756E73 
 1344      69676E65 
 1344      6420696E 
 1344      7400
 1345              	.LASF8:
 1346 01c9 756E7369 		.ascii	"unsigned int\000"
 1346      676E6564 
 1346      20696E74 
 1346      00
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 42


 1347              	.LASF42:
 1348 01d6 43794578 		.ascii	"CyExitCriticalSection\000"
 1348      69744372 
 1348      69746963 
 1348      616C5365 
 1348      6374696F 
 1349              	.LASF20:
 1350 01ec 5A5F5057 		.ascii	"Z_PWM_WriteCounter\000"
 1350      4D5F5772 
 1350      69746543 
 1350      6F756E74 
 1350      657200
 1351              	.LASF29:
 1352 01ff 5A5F5057 		.ascii	"Z_PWM_ReadStatusRegister\000"
 1352      4D5F5265 
 1352      61645374 
 1352      61747573 
 1352      52656769 
 1353              	.LASF39:
 1354 0218 5A5F5057 		.ascii	"Z_PWM_ReadCompare\000"
 1354      4D5F5265 
 1354      6164436F 
 1354      6D706172 
 1354      6500
 1355              	.LASF46:
 1356 022a 5A5F5057 		.ascii	"Z_PWM_ReadControlRegister\000"
 1356      4D5F5265 
 1356      6164436F 
 1356      6E74726F 
 1356      6C526567 
 1357              	.LASF40:
 1358 0244 5A5F5057 		.ascii	"Z_PWM_ReadPeriod\000"
 1358      4D5F5265 
 1358      61645065 
 1358      72696F64 
 1358      00
 1359              	.LASF26:
 1360 0255 5A5F5057 		.ascii	"Z_PWM_SetInterruptMode\000"
 1360      4D5F5365 
 1360      74496E74 
 1360      65727275 
 1360      70744D6F 
 1361              	.LASF45:
 1362 026c 433A5C55 		.ascii	"C:\\Users\\Caleb Cotter\\Documents\\GitHub\\3HC\\3H"
 1362      73657273 
 1362      5C43616C 
 1362      65622043 
 1362      6F747465 
 1363 0299 435F4669 		.ascii	"C_Firmware\\3HC_Firmware_0_1.cydsn\000"
 1363      726D7761 
 1363      72655C33 
 1363      48435F46 
 1363      69726D77 
 1364              	.LASF32:
 1365 02bb 5A5F5057 		.ascii	"Z_PWM_ReadCapture\000"
 1365      4D5F5265 
 1365      61644361 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 43


 1365      70747572 
 1365      6500
 1366              	.LASF17:
 1367 02cd 73697A65 		.ascii	"sizetype\000"
 1367      74797065 
 1367      00
 1368              	.LASF6:
 1369 02d6 6C6F6E67 		.ascii	"long long int\000"
 1369      206C6F6E 
 1369      6720696E 
 1369      7400
 1370              	.LASF44:
 1371 02e4 47656E65 		.ascii	"Generated_Source\\PSoC5\\Z_PWM.c\000"
 1371      72617465 
 1371      645F536F 
 1371      75726365 
 1371      5C50536F 
 1372              	.LASF27:
 1373 0303 696E7465 		.ascii	"interruptMode\000"
 1373      72727570 
 1373      744D6F64 
 1373      6500
 1374              	.LASF34:
 1375 0311 5A5F5057 		.ascii	"Z_PWM_Init\000"
 1375      4D5F496E 
 1375      697400
 1376              	.LASF2:
 1377 031c 73686F72 		.ascii	"short int\000"
 1377      7420696E 
 1377      7400
 1378              	.LASF36:
 1379 0326 6374726C 		.ascii	"ctrl\000"
 1379      00
 1380              	.LASF4:
 1381 032b 6C6F6E67 		.ascii	"long int\000"
 1381      20696E74 
 1381      00
 1382              	.LASF13:
 1383 0334 63686172 		.ascii	"char\000"
 1383      00
 1384              	.LASF16:
 1385 0339 6C6F6E67 		.ascii	"long double\000"
 1385      20646F75 
 1385      626C6500 
 1386              	.LASF0:
 1387 0345 7369676E 		.ascii	"signed char\000"
 1387      65642063 
 1387      68617200 
 1388              	.LASF25:
 1389 0351 636F6D70 		.ascii	"compare\000"
 1389      61726500 
 1390              	.LASF28:
 1391 0359 5A5F5057 		.ascii	"Z_PWM_ReadCounter\000"
 1391      4D5F5265 
 1391      6164436F 
 1391      756E7465 
 1391      7200
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccUsvmoJ.s 			page 44


 1392              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
