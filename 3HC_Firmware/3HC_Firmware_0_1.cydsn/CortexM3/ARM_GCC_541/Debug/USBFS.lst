ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_Init, %function
  25              	USBFS_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS.c"
   1:Generated_Source\PSoC5/USBFS.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS.c **** * \file USBFS.c
   3:Generated_Source\PSoC5/USBFS.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS.c **** *
   5:Generated_Source\PSoC5/USBFS.c **** * \brief
   6:Generated_Source\PSoC5/USBFS.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS.c **** *
   8:Generated_Source\PSoC5/USBFS.c **** * Note:
   9:Generated_Source\PSoC5/USBFS.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS.c **** *
  13:Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS.c **** 
  21:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_pvt.h"
  22:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_cydmac.h"
  23:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_hid.h"
  24:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_Dp.h"
  25:Generated_Source\PSoC5/USBFS.c **** 
  26:Generated_Source\PSoC5/USBFS.c **** 
  27:Generated_Source\PSoC5/USBFS.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 2


  31:Generated_Source\PSoC5/USBFS.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS.c **** * functions.
  39:Generated_Source\PSoC5/USBFS.c **** */
  40:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS.c **** 
  42:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS.c ****         static void USBFS_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS.c **** 
  46:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_DmaChan[USBFS_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS.c ****         {
  49:Generated_Source\PSoC5/USBFS.c ****             0u,
  50:Generated_Source\PSoC5/USBFS.c ****             (uint8) USBFS_ep1_dma_CHANNEL,
  51:Generated_Source\PSoC5/USBFS.c ****             (uint8) USBFS_ep2_dma_CHANNEL,
  52:Generated_Source\PSoC5/USBFS.c ****             0u,
  53:Generated_Source\PSoC5/USBFS.c ****             0u,
  54:Generated_Source\PSoC5/USBFS.c ****             0u,
  55:Generated_Source\PSoC5/USBFS.c ****             0u,
  56:Generated_Source\PSoC5/USBFS.c ****             0u,
  57:Generated_Source\PSoC5/USBFS.c ****             0u,
  58:Generated_Source\PSoC5/USBFS.c ****         };        
  59:Generated_Source\PSoC5/USBFS.c ****     #else
  60:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaChan[USBFS_MAX_EP];
  62:Generated_Source\PSoC5/USBFS.c ****         
  63:Generated_Source\PSoC5/USBFS.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaTd[USBFS_MAX_EP];
  65:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS.c **** 
  68:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCnt   [USBFS_MAX_EP];
  72:Generated_Source\PSoC5/USBFS.c ****     
  73:Generated_Source\PSoC5/USBFS.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpLastBurstEl[USBFS_MAX_EP];
  75:Generated_Source\PSoC5/USBFS.c **** 
  76:Generated_Source\PSoC5/USBFS.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCntBackup  [USBFS_MAX_EP];
  78:Generated_Source\PSoC5/USBFS.c ****     uint32 USBFS_DmaEpBufferAddrBackup[USBFS_MAX_EP];
  79:Generated_Source\PSoC5/USBFS.c ****      
  80:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaReqOut[USBFS_MAX_EP] =
  82:Generated_Source\PSoC5/USBFS.c ****     {
  83:Generated_Source\PSoC5/USBFS.c ****         0u,
  84:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBFS.c ****         0u,
  87:Generated_Source\PSoC5/USBFS.c ****         0u,
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 3


  88:Generated_Source\PSoC5/USBFS.c ****         0u,
  89:Generated_Source\PSoC5/USBFS.c ****         0u,
  90:Generated_Source\PSoC5/USBFS.c ****         0u,
  91:Generated_Source\PSoC5/USBFS.c ****         0u,
  92:Generated_Source\PSoC5/USBFS.c ****     };
  93:Generated_Source\PSoC5/USBFS.c **** 
  94:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaBurstEndOut[USBFS_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS.c ****     {
  97:Generated_Source\PSoC5/USBFS.c ****         0u,
  98:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS.c ****     };
 107:Generated_Source\PSoC5/USBFS.c ****     
 108:Generated_Source\PSoC5/USBFS.c **** #else
 109:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS.c ****         static uint8 clearInDataRdyStatus = USBFS_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaNextTd[USBFS_MAX_EP];
 112:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_epX_TD_TERMOUT_EN[USBFS_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS.c ****         {
 114:Generated_Source\PSoC5/USBFS.c ****             0u,
 115:Generated_Source\PSoC5/USBFS.c ****             USBFS_ep1__TD_TERMOUT_EN,
 116:Generated_Source\PSoC5/USBFS.c ****             USBFS_ep2__TD_TERMOUT_EN,
 117:Generated_Source\PSoC5/USBFS.c ****             0u,
 118:Generated_Source\PSoC5/USBFS.c ****             0u,
 119:Generated_Source\PSoC5/USBFS.c ****             0u,
 120:Generated_Source\PSoC5/USBFS.c ****             0u,
 121:Generated_Source\PSoC5/USBFS.c ****             0u,
 122:Generated_Source\PSoC5/USBFS.c ****             0u,
 123:Generated_Source\PSoC5/USBFS.c ****         };
 124:Generated_Source\PSoC5/USBFS.c **** 
 125:Generated_Source\PSoC5/USBFS.c ****         volatile uint16 USBFS_inLength[USBFS_MAX_EP];
 126:Generated_Source\PSoC5/USBFS.c ****         const uint8 *USBFS_inDataPointer[USBFS_MAX_EP];
 127:Generated_Source\PSoC5/USBFS.c ****         volatile uint8 USBFS_inBufFull[USBFS_MAX_EP];
 128:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS.c **** 
 132:Generated_Source\PSoC5/USBFS.c **** 
 133:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Start
 135:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS.c **** *
 137:Generated_Source\PSoC5/USBFS.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBFS.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS.c **** *
 142:Generated_Source\PSoC5/USBFS.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 4


 145:Generated_Source\PSoC5/USBFS.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS.c **** *
 149:Generated_Source\PSoC5/USBFS.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS.c **** *
 153:Generated_Source\PSoC5/USBFS.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS.c **** *
 164:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS.c **** *
 167:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS.c **** *
 170:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_initVar
 178:Generated_Source\PSoC5/USBFS.c **** *
 179:Generated_Source\PSoC5/USBFS.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS.c **** *
 182:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS.c **** *  No.
 184:Generated_Source\PSoC5/USBFS.c **** *
 185:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS.c **** {
 188:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 189:Generated_Source\PSoC5/USBFS.c ****     {
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_Init();
 191:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 192:Generated_Source\PSoC5/USBFS.c ****     }
 193:Generated_Source\PSoC5/USBFS.c **** 
 194:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBFS.c **** }
 196:Generated_Source\PSoC5/USBFS.c **** 
 197:Generated_Source\PSoC5/USBFS.c **** 
 198:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Init
 200:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 5


 202:Generated_Source\PSoC5/USBFS.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS.c **** * USBFS_Init() because the USBFS_Start() routine calls
 205:Generated_Source\PSoC5/USBFS.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS.c **** *
 207:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS.c **** *  No.
 209:Generated_Source\PSoC5/USBFS.c **** *
 210:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS.c **** void USBFS_Init(void) 
 212:Generated_Source\PSoC5/USBFS.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS.c **** 
 217:Generated_Source\PSoC5/USBFS.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS.c ****     * USBFS_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS.c ****     */
 220:Generated_Source\PSoC5/USBFS.c **** 
 221:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= ~ (uint32) USBFS_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS.c **** 
 224:Generated_Source\PSoC5/USBFS.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS.c ****     USBFS_BUS_RST_CNT_REG = USBFS_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS.c **** 
 227:Generated_Source\PSoC5/USBFS.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS.c ****     */
 230:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG = USBFS_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS.c **** 
 232:Generated_Source\PSoC5/USBFS.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG |= USBFS_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS.c **** 
 235:Generated_Source\PSoC5/USBFS.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS.c **** 
 240:Generated_Source\PSoC5/USBFS.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS.c **** 
 243:Generated_Source\PSoC5/USBFS.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_LVL_SEL_REG = USBFS_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS.c **** 
 246:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 6


 247:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG = USBFS_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS.c **** 
 249:Generated_Source\PSoC5/USBFS.c **** #else
 250:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0546     		mov	r5, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBFS.c **** 
 252:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS.c **** 
 256:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 404A     		ldr	r2, .L5
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBFS.c **** 
 261:Generated_Source\PSoC5/USBFS.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0127     		movs	r7, #1
  57 001e 3C4B     		ldr	r3, .L5+4
  58 0020 1F70     		strb	r7, [r3]
 263:Generated_Source\PSoC5/USBFS.c **** 
 264:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0226     		movs	r6, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1E70     		strb	r6, [r3]
 265:Generated_Source\PSoC5/USBFS.c **** 
 266:Generated_Source\PSoC5/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG &= (uint8) ~USBFS_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 7


 271:Generated_Source\PSoC5/USBFS.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS.c ****     */
 274:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG &= (uint8) ~(USBFS_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 354C     		ldr	r4, .L5+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBFS.c ****                                                  USBFS_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS.c **** 
 277:Generated_Source\PSoC5/USBFS.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~USBFS_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 344A     		ldr	r2, .L5+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBFS.c **** 
 280:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3B43     		orrs	r3, r3, r7
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBFS.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3846     		mov	r0, r7
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBFS.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG &= (uint8) ~USBFS_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2E4B     		ldr	r3, .L5+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBFS.c **** 
 290:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 3343     		orrs	r3, r3, r6
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 8


 108              		.loc 1 292 0
 109 007a 3046     		mov	r0, r6
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBFS.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBFS.c **** 
 296:Generated_Source\PSoC5/USBFS.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 254A     		ldr	r2, .L5+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 123              	.LVL6:
 299:Generated_Source\PSoC5/USBFS.c **** 
 300:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_EP; ++i)
 124              		.loc 1 302 0
 125 0092 04E0     		b	.L2
 126              	.LVL7:
 127              	.L3:
 303:Generated_Source\PSoC5/USBFS.c ****     {
 304:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaTd[i] = DMA_INVALID_TD;
 128              		.loc 1 304 0 discriminator 3
 129 0094 FF21     		movs	r1, #255
 130 0096 234A     		ldr	r2, .L5+24
 131 0098 D154     		strb	r1, [r2, r3]
 302:Generated_Source\PSoC5/USBFS.c ****     {
 132              		.loc 1 302 0 discriminator 3
 133 009a 0133     		adds	r3, r3, #1
 134              	.LVL8:
 135 009c 9BB2     		uxth	r3, r3
 136              	.LVL9:
 137              	.L2:
 302:Generated_Source\PSoC5/USBFS.c ****     {
 138              		.loc 1 302 0 is_stmt 0 discriminator 1
 139 009e 082B     		cmp	r3, #8
 140 00a0 F8D9     		bls	.L3
 305:Generated_Source\PSoC5/USBFS.c **** 
 306:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS.c ****     }
 310:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS.c **** 
 312:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 141              		.loc 1 312 0 is_stmt 1
 142 00a2 2846     		mov	r0, r5
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 9


 143 00a4 FFF7FEFF 		bl	CyExitCriticalSection
 144              	.LVL10:
 313:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS.c **** 
 315:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_HI_VECT_NUM,  USBFS_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_HI_VECT_NUM, &USBFS_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS.c **** 
 321:Generated_Source\PSoC5/USBFS.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_LO_VECT_NUM,  USBFS_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_LO_VECT_NUM, &USBFS_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS.c **** 
 325:Generated_Source\PSoC5/USBFS.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_MED_VECT_NUM,  USBFS_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_MED_VECT_NUM, &USBFS_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS.c **** 
 329:Generated_Source\PSoC5/USBFS.c **** #else
 330:Generated_Source\PSoC5/USBFS.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 145              		.loc 1 331 0
 146 00a8 0721     		movs	r1, #7
 147 00aa 1720     		movs	r0, #23
 148 00ac FFF7FEFF 		bl	CyIntSetPriority
 149              	.LVL11:
 332:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   &USBFS_BUS_RESET_ISR);
 150              		.loc 1 332 0
 151 00b0 1D49     		ldr	r1, .L5+28
 152 00b2 1720     		movs	r0, #23
 153 00b4 FFF7FEFF 		bl	CyIntSetVector
 154              	.LVL12:
 333:Generated_Source\PSoC5/USBFS.c **** 
 334:Generated_Source\PSoC5/USBFS.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 155              		.loc 1 335 0
 156 00b8 0721     		movs	r1, #7
 157 00ba 1820     		movs	r0, #24
 158 00bc FFF7FEFF 		bl	CyIntSetPriority
 159              	.LVL13:
 336:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_EP_0_VECT_NUM,   &USBFS_EP_0_ISR);
 160              		.loc 1 336 0
 161 00c0 1A49     		ldr	r1, .L5+32
 162 00c2 1820     		movs	r0, #24
 163 00c4 FFF7FEFF 		bl	CyIntSetVector
 164              	.LVL14:
 337:Generated_Source\PSoC5/USBFS.c **** 
 338:Generated_Source\PSoC5/USBFS.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_SOF_VECT_NUM,  USBFS_SOF_PRIOR);
 341:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_SOF_VECT_NUM, &USBFS_SOF_ISR);
 342:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS.c **** 
 344:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_1_VECT_NUM,  USBFS_EP_1_PRIOR);
 165              		.loc 1 346 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 10


 166 00c8 0721     		movs	r1, #7
 167 00ca 0520     		movs	r0, #5
 168 00cc FFF7FEFF 		bl	CyIntSetPriority
 169              	.LVL15:
 347:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_1_VECT_NUM,  &USBFS_EP_1_ISR);
 170              		.loc 1 347 0
 171 00d0 1749     		ldr	r1, .L5+36
 172 00d2 0520     		movs	r0, #5
 173 00d4 FFF7FEFF 		bl	CyIntSetVector
 174              	.LVL16:
 348:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS.c **** 
 350:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_2_VECT_NUM,  USBFS_EP_2_PRIOR);
 175              		.loc 1 352 0
 176 00d8 0721     		movs	r1, #7
 177 00da 0620     		movs	r0, #6
 178 00dc FFF7FEFF 		bl	CyIntSetPriority
 179              	.LVL17:
 353:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_2_VECT_NUM, &USBFS_EP_2_ISR);
 180              		.loc 1 353 0
 181 00e0 1449     		ldr	r1, .L5+40
 182 00e2 0620     		movs	r0, #6
 183 00e4 FFF7FEFF 		bl	CyIntSetVector
 184              	.LVL18:
 354:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS.c **** 
 356:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_3_VECT_NUM,  USBFS_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_3_VECT_NUM, &USBFS_EP_3_ISR);
 360:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS.c **** 
 362:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_4_VECT_NUM,  USBFS_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_4_VECT_NUM, &USBFS_EP_4_ISR);
 366:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS.c **** 
 368:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_5_VECT_NUM,  USBFS_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_5_VECT_NUM, &USBFS_EP_5_ISR);
 372:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS.c **** 
 374:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_6_VECT_NUM,  USBFS_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_6_VECT_NUM, &USBFS_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS.c **** 
 380:Generated_Source\PSoC5/USBFS.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_7_VECT_NUM,  USBFS_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_7_VECT_NUM, &USBFS_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 11


 385:Generated_Source\PSoC5/USBFS.c **** 
 386:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_8_VECT_NUM,  USBFS_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_8_VECT_NUM, &USBFS_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS.c **** 
 392:Generated_Source\PSoC5/USBFS.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_ARB_VECT_NUM,  USBFS_ARB_PRIOR);
 185              		.loc 1 394 0
 186 00e8 0021     		movs	r1, #0
 187 00ea 1620     		movs	r0, #22
 188 00ec FFF7FEFF 		bl	CyIntSetPriority
 189              	.LVL19:
 395:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_ARB_VECT_NUM, &USBFS_ARB_ISR);
 190              		.loc 1 395 0
 191 00f0 1149     		ldr	r1, .L5+44
 192 00f2 1620     		movs	r0, #22
 193 00f4 FFF7FEFF 		bl	CyIntSetVector
 194              	.LVL20:
 396:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS.c **** 
 399:Generated_Source\PSoC5/USBFS.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_DP_INTC_VECT_NUM,  USBFS_DP_INTC_PRIORITY);
 195              		.loc 1 401 0
 196 00f8 0721     		movs	r1, #7
 197 00fa 0C20     		movs	r0, #12
 198 00fc FFF7FEFF 		bl	CyIntSetPriority
 199              	.LVL21:
 402:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_DP_INTC_VECT_NUM, &USBFS_DP_ISR);
 200              		.loc 1 402 0
 201 0100 0E49     		ldr	r1, .L5+48
 202 0102 0C20     		movs	r0, #12
 203 0104 FFF7FEFF 		bl	CyIntSetVector
 204              	.LVL22:
 205 0108 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 206              	.LVL23:
 207              	.L6:
 208 010a 00BF     		.align	2
 209              	.L5:
 210 010c A5430040 		.word	1073759141
 211 0110 9D600040 		.word	1073766557
 212 0114 94430040 		.word	1073759124
 213 0118 12600040 		.word	1073766418
 214 011c F8510040 		.word	1073762808
 215 0120 84600040 		.word	1073766532
 216 0124 00000000 		.word	USBFS_DmaTd
 217 0128 00000000 		.word	USBFS_BUS_RESET_ISR
 218 012c 00000000 		.word	USBFS_EP_0_ISR
 219 0130 00000000 		.word	USBFS_EP_1_ISR
 220 0134 00000000 		.word	USBFS_EP_2_ISR
 221 0138 00000000 		.word	USBFS_ARB_ISR
 222 013c 00000000 		.word	USBFS_DP_ISR
 223              		.cfi_endproc
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 12


 224              	.LFE1:
 225              		.size	USBFS_Init, .-USBFS_Init
 226              		.section	.text.USBFS_InitComponent,"ax",%progbits
 227              		.align	2
 228              		.global	USBFS_InitComponent
 229              		.thumb
 230              		.thumb_func
 231              		.type	USBFS_InitComponent, %function
 232              	USBFS_InitComponent:
 233              	.LFB2:
 403:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS.c **** 
 405:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitEpDma();
 408:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBFS.c **** }
 410:Generated_Source\PSoC5/USBFS.c **** 
 411:Generated_Source\PSoC5/USBFS.c **** 
 412:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_InitComponent
 414:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS.c **** *
 416:Generated_Source\PSoC5/USBFS.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS.c **** *
 419:Generated_Source\PSoC5/USBFS.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS.c **** *   field.
 424:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS.c **** *
 430:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS.c **** *
 433:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS.c **** *
 436:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS.c **** *
 443:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_device
 445:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_transferState
 446:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 447:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
 448:Generated_Source\PSoC5/USBFS.c **** *
 449:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceAddress - Contains the current device address. This
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 13


 450:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS.c **** *
 454:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBFS.c **** *
 456:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS.c **** *  No.
 458:Generated_Source\PSoC5/USBFS.c **** *
 459:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS.c **** {
 234              		.loc 1 461 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              	.LVL24:
 239 0000 10B5     		push	{r4, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
 462:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS.c ****     */
 466:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS.c **** 
 469:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBFS.c ****     {
 471:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBFS.c ****     }
 473:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS.c **** 
 475:Generated_Source\PSoC5/USBFS.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS.c ****     USBFS_device = device;
 243              		.loc 1 476 0
 244 0002 234B     		ldr	r3, .L14
 245 0004 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBFS.c **** 
 478:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 246              		.loc 1 479 0
 247 0006 0023     		movs	r3, #0
 248 0008 224A     		ldr	r2, .L14+4
 249 000a 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 250              		.loc 1 480 0
 251 000c 224A     		ldr	r2, .L14+8
 252 000e 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 253              		.loc 1 481 0
 254 0010 224A     		ldr	r2, .L14+12
 255 0012 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 256              		.loc 1 482 0
 257 0014 224A     		ldr	r2, .L14+16
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 14


 258 0016 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 259              		.loc 1 483 0
 260 0018 224A     		ldr	r2, .L14+20
 261 001a 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 262              		.loc 1 484 0
 263 001c 224A     		ldr	r2, .L14+24
 264 001e 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 265              		.loc 1 485 0
 266 0020 224A     		ldr	r2, .L14+28
 267 0022 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBFS.c **** 
 487:Generated_Source\PSoC5/USBFS.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS.c **** #else
 493:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 268              		.loc 1 493 0
 269 0024 224B     		ldr	r3, .L14+32
 270 0026 4FF40002 		mov	r2, #8388608
 271 002a 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
 272              		.loc 1 494 0
 273 002c 4FF08072 		mov	r2, #16777216
 274 0030 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBFS.c **** 
 496:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 498:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS.c **** 
 500:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 275              		.loc 1 501 0
 276 0032 2022     		movs	r2, #32
 277 0034 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS.c **** 
 504:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
 278              		.loc 1 505 0
 279 0036 4020     		movs	r0, #64
 280              	.LVL25:
 281 0038 1860     		str	r0, [r3]
 506:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS.c **** 
 508:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS.c **** 
 512:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 15


 516:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS.c **** 
 520:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS.c **** 
 524:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS.c **** 
 528:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS.c **** 
 533:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_INT_EN_REG = USBFS_DEFAULT_ARB_INT_EN;
 282              		.loc 1 535 0
 283 003a 0324     		movs	r4, #3
 284 003c 1D48     		ldr	r0, .L14+36
 285 003e 0470     		strb	r4, [r0]
 536:Generated_Source\PSoC5/USBFS.c **** 
 537:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 286              		.loc 1 538 0
 287 0040 4FF48000 		mov	r0, #4194304
 288 0044 1860     		str	r0, [r3]
 539:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS.c **** #endif   /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBFS.c **** 
 542:Generated_Source\PSoC5/USBFS.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_CFG_REG = USBFS_DEFAULT_ARB_CFG;
 289              		.loc 1 545 0
 290 0046 1C4B     		ldr	r3, .L14+40
 291 0048 1A70     		strb	r2, [r3]
 546:Generated_Source\PSoC5/USBFS.c **** 
 547:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS.c **** 
 551:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS.c **** 
 557:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS.c ****         #else
 562:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_DMA_AUTO_OPT == 0u)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 16


 563:Generated_Source\PSoC5/USBFS.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP_DMA_Done_isr_StartEx(&USBFS_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS.c **** 
 572:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS.c ****     switch(mode)
 292              		.loc 1 573 0
 293 004a 11B1     		cbz	r1, .L9
 294 004c 0129     		cmp	r1, #1
 295 004e 06D0     		beq	.L10
 296 0050 0BE0     		b	.L12
 297              	.L9:
 574:Generated_Source\PSoC5/USBFS.c ****     {
 575:Generated_Source\PSoC5/USBFS.c ****     case USBFS_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 298              		.loc 1 577 0
 299 0052 1A4A     		ldr	r2, .L14+44
 300 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 301 0056 03F0FE03 		and	r3, r3, #254
 302 005a 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBFS.c ****         break;
 303              		.loc 1 578 0
 304 005c 0AE0     		b	.L11
 305              	.L10:
 579:Generated_Source\PSoC5/USBFS.c **** 
 580:Generated_Source\PSoC5/USBFS.c ****     case USBFS_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 306              		.loc 1 582 0
 307 005e 174A     		ldr	r2, .L14+44
 308 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 309 0062 43F00103 		orr	r3, r3, #1
 310 0066 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBFS.c ****         break;
 311              		.loc 1 583 0
 312 0068 04E0     		b	.L11
 313              	.L12:
 584:Generated_Source\PSoC5/USBFS.c **** 
 585:Generated_Source\PSoC5/USBFS.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_VDDD_MV < USBFS_3500MV)
 587:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS.c ****     #else
 590:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 314              		.loc 1 591 0
 315 006a 144A     		ldr	r2, .L14+44
 316 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 317 006e 43F00103 		orr	r3, r3, #1
 318 0072 1370     		strb	r3, [r2]
 319              	.L11:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 17


 592:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_VDDD_MV < USBFS_3500MV) */
 593:Generated_Source\PSoC5/USBFS.c ****         break;
 594:Generated_Source\PSoC5/USBFS.c ****     }
 595:Generated_Source\PSoC5/USBFS.c **** 
 596:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG &= (uint32) ~USBFS_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBFS.c **** 
 600:Generated_Source\PSoC5/USBFS.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CNT_REG = USBFS_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS.c **** 
 603:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS.c **** 
 606:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS.c ****         if (NULL != USBFS_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS.c ****         {
 609:Generated_Source\PSoC5/USBFS.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS.c ****             */
 612:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG = (USBFS_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS.c ****                                              USBFS_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBFS.c ****         }
 615:Generated_Source\PSoC5/USBFS.c ****         else
 616:Generated_Source\PSoC5/USBFS.c ****         {
 617:Generated_Source\PSoC5/USBFS.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG &= (uint32) ~USBFS_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS.c ****         }
 620:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS.c **** 
 622:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS.c **** 
 625:Generated_Source\PSoC5/USBFS.c **** #else
 626:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 320              		.loc 1 627 0
 321 0074 0322     		movs	r2, #3
 322 0076 124B     		ldr	r3, .L14+48
 323 0078 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS.c **** 
 629:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 324              		.loc 1 630 0
 325 007a 8022     		movs	r2, #128
 326 007c 203B     		subs	r3, r3, #32
 327 007e 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBFS.c ****     CyDelayCycles(USBFS_WAIT_CR0_REG_STABILITY);
 328              		.loc 1 631 0
 329 0080 0120     		movs	r0, #1
 330 0082 FFF7FEFF 		bl	CyDelayCycles
 331              	.LVL26:
 632:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS.c **** 
 634:Generated_Source\PSoC5/USBFS.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG = USBFS_USBIO_CR1_USBPUEN;
 332              		.loc 1 635 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 18


 333 0086 0422     		movs	r2, #4
 334 0088 0E4B     		ldr	r3, .L14+52
 335 008a 1A70     		strb	r2, [r3]
 336 008c 10BD     		pop	{r4, pc}
 337              	.L15:
 338 008e 00BF     		.align	2
 339              	.L14:
 340 0090 00000000 		.word	USBFS_device
 341 0094 00000000 		.word	USBFS_transferState
 342 0098 00000000 		.word	USBFS_configurationChanged
 343 009c 00000000 		.word	USBFS_configuration
 344 00a0 00000000 		.word	USBFS_interfaceNumber
 345 00a4 00000000 		.word	USBFS_deviceAddress
 346 00a8 00000000 		.word	USBFS_deviceStatus
 347 00ac 00000000 		.word	USBFS_lastPacketSize
 348 00b0 00E100E0 		.word	-536813312
 349 00b4 9E600040 		.word	1073766558
 350 00b8 9C600040 		.word	1073766556
 351 00bc 09600040 		.word	1073766409
 352 00c0 28600040 		.word	1073766440
 353 00c4 12600040 		.word	1073766418
 354              		.cfi_endproc
 355              	.LFE2:
 356              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 357              		.section	.text.USBFS_Start,"ax",%progbits
 358              		.align	2
 359              		.global	USBFS_Start
 360              		.thumb
 361              		.thumb_func
 362              		.type	USBFS_Start, %function
 363              	USBFS_Start:
 364              	.LFB0:
 187:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 365              		.loc 1 187 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL27:
 370 0000 38B5     		push	{r3, r4, r5, lr}
 371              		.cfi_def_cfa_offset 16
 372              		.cfi_offset 3, -16
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 5, -8
 375              		.cfi_offset 14, -4
 376 0002 0446     		mov	r4, r0
 377 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBFS.c ****     {
 378              		.loc 1 188 0
 379 0006 064B     		ldr	r3, .L19
 380 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 382              		.loc 1 190 0
 383 000c FFF7FEFF 		bl	USBFS_Init
 384              	.LVL28:
 191:Generated_Source\PSoC5/USBFS.c ****     }
 385              		.loc 1 191 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 19


 386 0010 0122     		movs	r2, #1
 387 0012 034B     		ldr	r3, .L19
 388 0014 1A70     		strb	r2, [r3]
 389              	.L17:
 194:Generated_Source\PSoC5/USBFS.c **** }
 390              		.loc 1 194 0
 391 0016 2946     		mov	r1, r5
 392 0018 2046     		mov	r0, r4
 393 001a FFF7FEFF 		bl	USBFS_InitComponent
 394              	.LVL29:
 395 001e 38BD     		pop	{r3, r4, r5, pc}
 396              	.L20:
 397              		.align	2
 398              	.L19:
 399 0020 00000000 		.word	.LANCHOR0
 400              		.cfi_endproc
 401              	.LFE0:
 402              		.size	USBFS_Start, .-USBFS_Start
 403              		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 404              		.align	2
 405              		.global	USBFS_ReInitComponent
 406              		.thumb
 407              		.thumb_func
 408              		.type	USBFS_ReInitComponent, %function
 409              	USBFS_ReInitComponent:
 410              	.LFB3:
 636:Generated_Source\PSoC5/USBFS.c **** }
 637:Generated_Source\PSoC5/USBFS.c **** 
 638:Generated_Source\PSoC5/USBFS.c **** 
 639:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReInitComponent
 641:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS.c **** *
 643:Generated_Source\PSoC5/USBFS.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBFS.c **** *
 646:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS.c **** *   USBFS_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 20


 667:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS.c **** *  No.
 669:Generated_Source\PSoC5/USBFS.c **** *
 670:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS.c **** void USBFS_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS.c **** {
 411              		.loc 1 672 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 673:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS.c ****     */
 676:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS.c **** 
 679:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBFS.c ****     {
 681:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBFS.c ****     }
 683:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS.c **** 
 685:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 416              		.loc 1 686 0
 417 0000 0023     		movs	r3, #0
 418 0002 0A4A     		ldr	r2, .L22
 419 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 420              		.loc 1 687 0
 421 0006 0A4A     		ldr	r2, .L22+4
 422 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 423              		.loc 1 688 0
 424 000a 0A4A     		ldr	r2, .L22+8
 425 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 426              		.loc 1 689 0
 427 000e 0A4A     		ldr	r2, .L22+12
 428 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 429              		.loc 1 690 0
 430 0012 0A4A     		ldr	r2, .L22+16
 431 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 432              		.loc 1 691 0
 433 0016 0A4A     		ldr	r2, .L22+20
 434 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 435              		.loc 1 692 0
 436 001a 0A4A     		ldr	r2, .L22+24
 437 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBFS.c **** 
 694:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 21


 697:Generated_Source\PSoC5/USBFS.c **** #else
 698:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 438              		.loc 1 699 0
 439 001e 0322     		movs	r2, #3
 440 0020 094B     		ldr	r3, .L22+28
 441 0022 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS.c **** 
 702:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 442              		.loc 1 703 0
 443 0024 8022     		movs	r2, #128
 444 0026 203B     		subs	r3, r3, #32
 445 0028 1A70     		strb	r2, [r3]
 446 002a 7047     		bx	lr
 447              	.L23:
 448              		.align	2
 449              	.L22:
 450 002c 00000000 		.word	USBFS_transferState
 451 0030 00000000 		.word	USBFS_configurationChanged
 452 0034 00000000 		.word	USBFS_configuration
 453 0038 00000000 		.word	USBFS_interfaceNumber
 454 003c 00000000 		.word	USBFS_deviceAddress
 455 0040 00000000 		.word	USBFS_deviceStatus
 456 0044 00000000 		.word	USBFS_lastPacketSize
 457 0048 28600040 		.word	1073766440
 458              		.cfi_endproc
 459              	.LFE3:
 460              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 461              		.section	.text.USBFS_CheckActivity,"ax",%progbits
 462              		.align	2
 463              		.global	USBFS_CheckActivity
 464              		.thumb
 465              		.thumb_func
 466              		.type	USBFS_CheckActivity, %function
 467              	USBFS_CheckActivity:
 468              	.LFB5:
 704:Generated_Source\PSoC5/USBFS.c **** }
 705:Generated_Source\PSoC5/USBFS.c **** 
 706:Generated_Source\PSoC5/USBFS.c **** 
 707:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Stop
 709:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS.c **** *
 711:Generated_Source\PSoC5/USBFS.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS.c **** *
 714:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 716:Generated_Source\PSoC5/USBFS.c **** *
 717:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS.c **** *
 722:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 22


 723:Generated_Source\PSoC5/USBFS.c **** *
 724:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configurationChanged
 725:Generated_Source\PSoC5/USBFS.c **** *
 726:Generated_Source\PSoC5/USBFS.c **** *   USBFS_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS.c **** *
 728:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS.c **** void USBFS_Stop(void) 
 730:Generated_Source\PSoC5/USBFS.c **** {
 731:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS.c **** 
 733:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS.c ****     USBFS_Stop_DMA(USBFS_MAX_EP);
 736:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS.c **** 
 738:Generated_Source\PSoC5/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 739:Generated_Source\PSoC5/USBFS.c **** 
 740:Generated_Source\PSoC5/USBFS.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG &= (uint8) ~USBFS_CR0_ENABLE;
 742:Generated_Source\PSoC5/USBFS.c **** 
 743:Generated_Source\PSoC5/USBFS.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~ USBFS_USBIO_CR1_USBPUEN;
 745:Generated_Source\PSoC5/USBFS.c **** 
 746:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS.c **** #else
 750:Generated_Source\PSoC5/USBFS.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG  &= (uint8) ~USBFS_PM_ACT_EN_FSUSB;
 752:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8) ~USBFS_PM_STBY_EN_FSUSB;
 753:Generated_Source\PSoC5/USBFS.c **** 
 754:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG |= (uint8) USBFS_DM_MASK;
 757:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG |= (uint8) USBFS_DP_MASK;
 758:Generated_Source\PSoC5/USBFS.c **** 
 759:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS.c **** 
 761:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 762:Generated_Source\PSoC5/USBFS.c **** 
 763:Generated_Source\PSoC5/USBFS.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS.c **** #else
 769:Generated_Source\PSoC5/USBFS.c **** 
 770:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 771:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 772:Generated_Source\PSoC5/USBFS.c **** 
 773:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 775:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBFS.c **** 
 777:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 779:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 23


 780:Generated_Source\PSoC5/USBFS.c **** 
 781:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 783:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS.c **** 
 785:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS.c **** 
 789:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS.c **** 
 793:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS.c **** 
 797:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS.c **** 
 801:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS.c **** 
 805:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS.c **** 
 809:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS.c ****         (void) USBFS_Dp_ClearInterrupt();
 812:Generated_Source\PSoC5/USBFS.c ****         CyIntClearPending(USBFS_DP_INTC_VECT_NUM);
 813:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS.c **** 
 815:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS.c **** 
 817:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 819:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 820:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 821:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 822:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 823:Generated_Source\PSoC5/USBFS.c **** 
 824:Generated_Source\PSoC5/USBFS.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS.c ****     USBFS_initVar = 0u;
 826:Generated_Source\PSoC5/USBFS.c **** }
 827:Generated_Source\PSoC5/USBFS.c **** 
 828:Generated_Source\PSoC5/USBFS.c **** 
 829:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_CheckActivity
 831:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS.c **** *
 833:Generated_Source\PSoC5/USBFS.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS.c **** *  application should use this function to determine if the USB suspend
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 24


 837:Generated_Source\PSoC5/USBFS.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS.c **** *
 839:Generated_Source\PSoC5/USBFS.c **** *
 840:Generated_Source\PSoC5/USBFS.c **** * \return
 841:Generated_Source\PSoC5/USBFS.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS.c **** *
 847:Generated_Source\PSoC5/USBFS.c **** *
 848:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS.c **** {
 469              		.loc 1 850 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBFS.c ****     uint8 cr1Reg = USBFS_CR1_REG;
 474              		.loc 1 851 0
 475 0000 064A     		ldr	r2, .L26
 476 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 477 0004 DBB2     		uxtb	r3, r3
 478              	.LVL30:
 852:Generated_Source\PSoC5/USBFS.c **** 
 853:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = (cr1Reg & (uint8) ~USBFS_CR1_BUS_ACTIVITY);
 479              		.loc 1 854 0
 480 0006 03F0FB01 		and	r1, r3, #251
 481 000a 1170     		strb	r1, [r2]
 482 000c 03F00403 		and	r3, r3, #4
 483              	.LVL31:
 855:Generated_Source\PSoC5/USBFS.c **** 
 856:Generated_Source\PSoC5/USBFS.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS.c ****     return ((0u != (cr1Reg & USBFS_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 484              		.loc 1 857 0
 485 0010 03F0FF00 		and	r0, r3, #255
 486 0014 03B1     		cbz	r3, .L25
 487 0016 0120     		movs	r0, #1
 488              	.L25:
 858:Generated_Source\PSoC5/USBFS.c **** }
 489              		.loc 1 858 0 discriminator 4
 490 0018 7047     		bx	lr
 491              	.L27:
 492 001a 00BF     		.align	2
 493              	.L26:
 494 001c 09600040 		.word	1073766409
 495              		.cfi_endproc
 496              	.LFE5:
 497              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 498              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 499              		.align	2
 500              		.global	USBFS_GetConfiguration
 501              		.thumb
 502              		.thumb_func
 503              		.type	USBFS_GetConfiguration, %function
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 25


 504              	USBFS_GetConfiguration:
 505              	.LFB6:
 859:Generated_Source\PSoC5/USBFS.c **** 
 860:Generated_Source\PSoC5/USBFS.c **** 
 861:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetConfiguration
 863:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS.c **** *
 865:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS.c **** *
 867:Generated_Source\PSoC5/USBFS.c **** * \return
 868:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS.c **** *
 871:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS.c **** {
 506              		.loc 1 873 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_configuration);
 511              		.loc 1 874 0
 512 0000 014B     		ldr	r3, .L29
 513 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBFS.c **** }
 514              		.loc 1 875 0
 515 0004 7047     		bx	lr
 516              	.L30:
 517 0006 00BF     		.align	2
 518              	.L29:
 519 0008 00000000 		.word	USBFS_configuration
 520              		.cfi_endproc
 521              	.LFE6:
 522              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 523              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
 524              		.align	2
 525              		.global	USBFS_IsConfigurationChanged
 526              		.thumb
 527              		.thumb_func
 528              		.type	USBFS_IsConfigurationChanged, %function
 529              	USBFS_IsConfigurationChanged:
 530              	.LFB7:
 876:Generated_Source\PSoC5/USBFS.c **** 
 877:Generated_Source\PSoC5/USBFS.c **** 
 878:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS.c **** *
 882:Generated_Source\PSoC5/USBFS.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS.c **** *
 888:Generated_Source\PSoC5/USBFS.c **** * \return
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 26


 889:Generated_Source\PSoC5/USBFS.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS.c **** *
 892:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS.c **** *
 894:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS.c **** *
 897:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS.c **** {
 531              		.loc 1 899 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL32:
 900:Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBFS.c **** 
 902:Generated_Source\PSoC5/USBFS.c ****     if (USBFS_configurationChanged != 0u)
 537              		.loc 1 902 0
 538 0000 064B     		ldr	r3, .L34
 539 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 540 0004 13F0FF0F 		tst	r3, #255
 541 0008 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USBFS.c ****     {
 904:Generated_Source\PSoC5/USBFS.c ****         res = USBFS_configurationChanged;
 542              		.loc 1 904 0
 543 000a 044B     		ldr	r3, .L34
 544 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 545 000e C0B2     		uxtb	r0, r0
 546              	.LVL33:
 905:Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 547              		.loc 1 905 0
 548 0010 0022     		movs	r2, #0
 549 0012 1A70     		strb	r2, [r3]
 550 0014 7047     		bx	lr
 551              	.LVL34:
 552              	.L33:
 900:Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 553              		.loc 1 900 0
 554 0016 0020     		movs	r0, #0
 555              	.LVL35:
 906:Generated_Source\PSoC5/USBFS.c ****     }
 907:Generated_Source\PSoC5/USBFS.c **** 
 908:Generated_Source\PSoC5/USBFS.c ****     return (res);
 909:Generated_Source\PSoC5/USBFS.c **** }
 556              		.loc 1 909 0
 557 0018 7047     		bx	lr
 558              	.L35:
 559 001a 00BF     		.align	2
 560              	.L34:
 561 001c 00000000 		.word	USBFS_configurationChanged
 562              		.cfi_endproc
 563              	.LFE7:
 564              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 565              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 27


 566              		.align	2
 567              		.global	USBFS_GetInterfaceSetting
 568              		.thumb
 569              		.thumb_func
 570              		.type	USBFS_GetInterfaceSetting, %function
 571              	USBFS_GetInterfaceSetting:
 572              	.LFB8:
 910:Generated_Source\PSoC5/USBFS.c **** 
 911:Generated_Source\PSoC5/USBFS.c **** 
 912:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS.c **** *
 916:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS.c **** *
 920:Generated_Source\PSoC5/USBFS.c **** *  \param
 921:Generated_Source\PSoC5/USBFS.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS.c **** *
 923:Generated_Source\PSoC5/USBFS.c **** * \return
 924:Generated_Source\PSoC5/USBFS.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS.c **** *
 926:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS.c ****                                                     
 929:Generated_Source\PSoC5/USBFS.c **** {
 573              		.loc 1 929 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL36:
 930:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_interfaceSetting[interfaceNumber]);
 579              		.loc 1 930 0
 580 0000 014B     		ldr	r3, .L37
 581 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 582              	.LVL37:
 931:Generated_Source\PSoC5/USBFS.c **** }
 583              		.loc 1 931 0
 584 0004 7047     		bx	lr
 585              	.L38:
 586 0006 00BF     		.align	2
 587              	.L37:
 588 0008 00000000 		.word	USBFS_interfaceSetting
 589              		.cfi_endproc
 590              	.LFE8:
 591              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 592              		.section	.text.USBFS_GetEPState,"ax",%progbits
 593              		.align	2
 594              		.global	USBFS_GetEPState
 595              		.thumb
 596              		.thumb_func
 597              		.type	USBFS_GetEPState, %function
 598              	USBFS_GetEPState:
 599              	.LFB9:
 932:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 28


 933:Generated_Source\PSoC5/USBFS.c **** 
 934:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPState
 936:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS.c **** *
 938:Generated_Source\PSoC5/USBFS.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS.c **** *
 940:Generated_Source\PSoC5/USBFS.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS.c **** *
 942:Generated_Source\PSoC5/USBFS.c **** * \return
 943:Generated_Source\PSoC5/USBFS.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS.c **** *
 948:Generated_Source\PSoC5/USBFS.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS.c **** *
 958:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS.c **** {
 600              		.loc 1 960 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605              	.LVL38:
 961:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_EP[epNumber].apiEpState);
 606              		.loc 1 961 0
 607 0000 00EB4000 		add	r0, r0, r0, lsl #1
 608              	.LVL39:
 609 0004 8300     		lsls	r3, r0, #2
 610 0006 024A     		ldr	r2, .L40
 611 0008 1344     		add	r3, r3, r2
 612 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBFS.c **** }
 613              		.loc 1 962 0
 614 000c 7047     		bx	lr
 615              	.L41:
 616 000e 00BF     		.align	2
 617              	.L40:
 618 0010 00000000 		.word	USBFS_EP
 619              		.cfi_endproc
 620              	.LFE9:
 621              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 622              		.section	.text.USBFS_GetEPCount,"ax",%progbits
 623              		.align	2
 624              		.global	USBFS_GetEPCount
 625              		.thumb
 626              		.thumb_func
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 29


 627              		.type	USBFS_GetEPCount, %function
 628              	USBFS_GetEPCount:
 629              	.LFB10:
 963:Generated_Source\PSoC5/USBFS.c **** 
 964:Generated_Source\PSoC5/USBFS.c **** 
 965:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPCount
 967:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBFS.c **** *
 969:Generated_Source\PSoC5/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS.c **** *
 974:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS.c **** *
 977:Generated_Source\PSoC5/USBFS.c **** * \return
 978:Generated_Source\PSoC5/USBFS.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS.c **** *
 981:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS.c **** {
 630              		.loc 1 983 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL40:
 984:Generated_Source\PSoC5/USBFS.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBFS.c **** 
 986:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 636              		.loc 1 986 0
 637 0000 431E     		subs	r3, r0, #1
 638 0002 DBB2     		uxtb	r3, r3
 639 0004 072B     		cmp	r3, #7
 640 0006 0BD8     		bhi	.L44
 987:Generated_Source\PSoC5/USBFS.c ****     {
 988:Generated_Source\PSoC5/USBFS.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_EPX_CNT0_MASK;
 641              		.loc 1 989 0
 642 0008 064B     		ldr	r3, .L45
 643 000a 0001     		lsls	r0, r0, #4
 644              	.LVL41:
 645 000c 1A18     		adds	r2, r3, r0
 646 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 647 0010 00F00F00 		and	r0, r0, #15
 648              	.LVL42:
 990:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 649              		.loc 1 990 0
 650 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 652              	.LVL43:
 991:Generated_Source\PSoC5/USBFS.c ****         cntr -= USBFS_EPX_CNTX_CRC_COUNT;
 653              		.loc 1 991 0
 654 001a 0238     		subs	r0, r0, #2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 30


 655              	.LVL44:
 656 001c 80B2     		uxth	r0, r0
 657              	.LVL45:
 658 001e 7047     		bx	lr
 659              	.LVL46:
 660              	.L44:
 984:Generated_Source\PSoC5/USBFS.c **** 
 661              		.loc 1 984 0
 662 0020 0020     		movs	r0, #0
 663              	.LVL47:
 992:Generated_Source\PSoC5/USBFS.c ****     }
 993:Generated_Source\PSoC5/USBFS.c **** 
 994:Generated_Source\PSoC5/USBFS.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBFS.c **** }
 664              		.loc 1 995 0
 665 0022 7047     		bx	lr
 666              	.L46:
 667              		.align	2
 668              	.L45:
 669 0024 FC5F0040 		.word	1073766396
 670              		.cfi_endproc
 671              	.LFE10:
 672              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 673              		.section	.text.USBFS_InitEP_DMA,"ax",%progbits
 674              		.align	2
 675              		.global	USBFS_InitEP_DMA
 676              		.thumb
 677              		.thumb_func
 678              		.type	USBFS_InitEP_DMA, %function
 679              	USBFS_InitEP_DMA:
 680              	.LFB11:
 996:Generated_Source\PSoC5/USBFS.c **** 
 997:Generated_Source\PSoC5/USBFS.c **** 
 998:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEpDma
1002:Generated_Source\PSoC5/USBFS.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS.c ****     *
1004:Generated_Source\PSoC5/USBFS.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS.c ****     *
1007:Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS.c ****     static void USBFS_InitEpDma(void)
1009:Generated_Source\PSoC5/USBFS.c ****     {
1010:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep1_dma_CHANNEL] = USBFS_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS.c **** 
1014:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep2_dma_CHANNEL] = USBFS_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS.c **** 
1018:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep3_dma_CHANNEL] = USBFS_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 31


1022:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep4_dma_CHANNEL] = USBFS_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS.c **** 
1026:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep5_dma_CHANNEL] = USBFS_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS.c **** 
1030:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep6_dma_CHANNEL] = USBFS_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS.c **** 
1034:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep7_dma_CHANNEL] = USBFS_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS.c **** 
1038:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep8_dma_CHANNEL] = USBFS_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS.c **** 
1042:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBFS.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep1_dma_SetInterruptCallback(&USBFS_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS.c **** 
1048:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep2_dma_SetInterruptCallback(&USBFS_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS.c **** 
1052:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep3_dma_SetInterruptCallback(&USBFS_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS.c **** 
1056:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep4_dma_SetInterruptCallback(&USBFS_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS.c **** 
1060:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep5_dma_SetInterruptCallback(&USBFS_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS.c **** 
1064:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep6_dma_SetInterruptCallback(&USBFS_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS.c **** 
1068:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep7_dma_SetInterruptCallback(&USBFS_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS.c **** 
1072:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep8_dma_SetInterruptCallback(&USBFS_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS.c ****     }
1077:Generated_Source\PSoC5/USBFS.c **** #else
1078:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 32


1079:Generated_Source\PSoC5/USBFS.c **** 
1080:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS.c ****     *
1084:Generated_Source\PSoC5/USBFS.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_LoadInEP() or USBFS_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS.c ****     *
1089:Generated_Source\PSoC5/USBFS.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS.c ****     *
1091:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS.c ****     *
1095:Generated_Source\PSoC5/USBFS.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS.c ****     *
1097:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS.c ****                                                                     
1100:Generated_Source\PSoC5/USBFS.c ****     {
 681              		.loc 1 1100 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL48:
 686 0000 10B5     		push	{r4, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 4, -8
 689              		.cfi_offset 14, -4
 690 0002 0446     		mov	r4, r0
1101:Generated_Source\PSoC5/USBFS.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS.c **** 
1104:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS.c ****     #else
1109:Generated_Source\PSoC5/USBFS.c ****         if ((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u)
 691              		.loc 1 1109 0
 692 0004 00EB4003 		add	r3, r0, r0, lsl #1
 693 0008 9800     		lsls	r0, r3, #2
 694              	.LVL49:
 695 000a 144B     		ldr	r3, .L55
 696 000c 1844     		add	r0, r0, r3
 697 000e 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 698 0010 13F0800F 		tst	r3, #128
 699 0014 03D0     		beq	.L48
1110:Generated_Source\PSoC5/USBFS.c ****         {
1111:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS.c ****             src = HI16(pData);
 700              		.loc 1 1112 0
 701 0016 0A0C     		lsrs	r2, r1, #16
 702              	.LVL50:
1113:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 33


 703              		.loc 1 1113 0
 704 0018 4FF48043 		mov	r3, #16384
 705 001c 02E0     		b	.L49
 706              	.LVL51:
 707              	.L48:
1114:Generated_Source\PSoC5/USBFS.c ****         }
1115:Generated_Source\PSoC5/USBFS.c ****         else
1116:Generated_Source\PSoC5/USBFS.c ****         {
1117:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(pData);
 708              		.loc 1 1119 0
 709 001e 0B0C     		lsrs	r3, r1, #16
 710              	.LVL52:
1118:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(pData);
 711              		.loc 1 1118 0
 712 0020 4FF48042 		mov	r2, #16384
 713              	.LVL53:
 714              	.L49:
1120:Generated_Source\PSoC5/USBFS.c ****         }
1121:Generated_Source\PSoC5/USBFS.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS.c **** 
1123:Generated_Source\PSoC5/USBFS.c ****         switch(epNumber)
 715              		.loc 1 1123 0
 716 0024 012C     		cmp	r4, #1
 717 0026 02D0     		beq	.L51
 718 0028 022C     		cmp	r4, #2
 719 002a 07D0     		beq	.L52
 720 002c 0CE0     		b	.L50
 721              	.L51:
1124:Generated_Source\PSoC5/USBFS.c ****         {
1125:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP1:
1127:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
 722              		.loc 1 1127 0
 723 002e 0021     		movs	r1, #0
 724              	.LVL54:
 725 0030 0846     		mov	r0, r1
 726 0032 FFF7FEFF 		bl	USBFS_ep1_DmaInitialize
 727              	.LVL55:
 728 0036 0A4B     		ldr	r3, .L55+4
 729 0038 1855     		strb	r0, [r3, r4]
1128:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1129:Generated_Source\PSoC5/USBFS.c ****             break;
 730              		.loc 1 1129 0
 731 003a 05E0     		b	.L50
 732              	.LVL56:
 733              	.L52:
1130:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS.c **** 
1132:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP2:
1134:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
 734              		.loc 1 1134 0
 735 003c 0021     		movs	r1, #0
 736              	.LVL57:
 737 003e 0846     		mov	r0, r1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 34


 738 0040 FFF7FEFF 		bl	USBFS_ep2_DmaInitialize
 739              	.LVL58:
 740 0044 064B     		ldr	r3, .L55+4
 741 0046 1855     		strb	r0, [r3, r4]
 742              	.L50:
1135:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1136:Generated_Source\PSoC5/USBFS.c ****             break;
1137:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS.c **** 
1139:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP3:
1141:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1143:Generated_Source\PSoC5/USBFS.c ****             break;
1144:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS.c **** 
1146:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP4:
1148:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1150:Generated_Source\PSoC5/USBFS.c ****             break;
1151:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS.c **** 
1153:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP5:
1155:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1157:Generated_Source\PSoC5/USBFS.c ****             break;
1158:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS.c **** 
1160:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP6:
1162:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1164:Generated_Source\PSoC5/USBFS.c ****             break;
1165:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS.c **** 
1167:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP7:
1169:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1171:Generated_Source\PSoC5/USBFS.c ****             break;
1172:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS.c **** 
1174:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP8:
1176:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1178:Generated_Source\PSoC5/USBFS.c ****             break;
1179:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBFS.c **** 
1181:Generated_Source\PSoC5/USBFS.c ****         default:
1182:Generated_Source\PSoC5/USBFS.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS.c ****             break;
1184:Generated_Source\PSoC5/USBFS.c ****         }
1185:Generated_Source\PSoC5/USBFS.c **** 
1186:Generated_Source\PSoC5/USBFS.c ****         if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 35


 743              		.loc 1 1186 0
 744 0048 631E     		subs	r3, r4, #1
 745 004a DBB2     		uxtb	r3, r3
 746 004c 072B     		cmp	r3, #7
 747 004e 03D8     		bhi	.L47
1187:Generated_Source\PSoC5/USBFS.c ****         {
1188:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
 748              		.loc 1 1188 0
 749 0050 FFF7FEFF 		bl	CyDmaTdAllocate
 750              	.LVL59:
 751 0054 034B     		ldr	r3, .L55+8
 752 0056 1855     		strb	r0, [r3, r4]
 753              	.L47:
 754 0058 10BD     		pop	{r4, pc}
 755              	.L56:
 756 005a 00BF     		.align	2
 757              	.L55:
 758 005c 00000000 		.word	USBFS_EP
 759 0060 00000000 		.word	USBFS_DmaChan
 760 0064 00000000 		.word	USBFS_DmaTd
 761              		.cfi_endproc
 762              	.LFE11:
 763              		.size	USBFS_InitEP_DMA, .-USBFS_InitEP_DMA
 764              		.section	.text.USBFS_Stop_DMA,"ax",%progbits
 765              		.align	2
 766              		.global	USBFS_Stop_DMA
 767              		.thumb
 768              		.thumb_func
 769              		.type	USBFS_Stop_DMA, %function
 770              	USBFS_Stop_DMA:
 771              	.LFB12:
1189:Generated_Source\PSoC5/USBFS.c **** 
1190:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS.c ****         }
1194:Generated_Source\PSoC5/USBFS.c ****     }
1195:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS.c **** 
1197:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_Stop_DMA
1199:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS.c ****     *  
1201:Generated_Source\PSoC5/USBFS.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS.c ****     *  to trigger DMA re-configuration when USBFS_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS.c ****     *  
1207:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS.c ****     *
1212:Generated_Source\PSoC5/USBFS.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS.c ****     *  No.
1214:Generated_Source\PSoC5/USBFS.c ****     *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 36


1215:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS.c ****     {
 772              		.loc 1 1217 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL60:
 777 0000 70B5     		push	{r4, r5, r6, lr}
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 4, -16
 780              		.cfi_offset 5, -12
 781              		.cfi_offset 6, -8
 782              		.cfi_offset 14, -4
 783 0002 0646     		mov	r6, r0
1218:Generated_Source\PSoC5/USBFS.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS.c **** 
1220:Generated_Source\PSoC5/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
 784              		.loc 1 1220 0
 785 0004 0828     		cmp	r0, #8
 786 0006 01D9     		bls	.L62
 787 0008 0124     		movs	r4, #1
 788 000a 00E0     		b	.L61
 789              	.L62:
 790 000c 0446     		mov	r4, r0
 791              	.LVL61:
 792              	.L61:
1221:Generated_Source\PSoC5/USBFS.c **** 
1222:Generated_Source\PSoC5/USBFS.c ****         do
1223:Generated_Source\PSoC5/USBFS.c ****         {
1224:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS.c ****             if (0u != USBFS_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS.c ****             {
1227:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(USBFS_DmaChan[i]);
1228:Generated_Source\PSoC5/USBFS.c ****             }
1229:Generated_Source\PSoC5/USBFS.c ****         #else
1230:Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
 793              		.loc 1 1230 0
 794 000e 0A4B     		ldr	r3, .L64
 795 0010 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 796 0012 FF2B     		cmp	r3, #255
 797 0014 09D0     		beq	.L59
1231:Generated_Source\PSoC5/USBFS.c ****             {
1232:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[i]);
 798              		.loc 1 1232 0
 799 0016 094B     		ldr	r3, .L64+4
 800 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 801 001a FFF7FEFF 		bl	CyDmaChDisable
 802              	.LVL62:
1233:Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
 803              		.loc 1 1233 0
 804 001e 064D     		ldr	r5, .L64
 805 0020 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 806 0022 FFF7FEFF 		bl	CyDmaTdFree
 807              	.LVL63:
1234:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
 808              		.loc 1 1234 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 37


 809 0026 FF23     		movs	r3, #255
 810 0028 2B55     		strb	r3, [r5, r4]
 811              	.L59:
1235:Generated_Source\PSoC5/USBFS.c ****             }
1236:Generated_Source\PSoC5/USBFS.c **** 
1237:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS.c ****                 if(USBFS_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS.c ****                 {
1240:Generated_Source\PSoC5/USBFS.c ****                     CyDmaTdFree(USBFS_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS.c ****                 }
1243:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS.c **** 
1245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS.c ****             i++;
 812              		.loc 1 1246 0
 813 002a 0134     		adds	r4, r4, #1
 814              	.LVL64:
 815 002c E4B2     		uxtb	r4, r4
 816              	.LVL65:
1247:Generated_Source\PSoC5/USBFS.c ****         }
1248:Generated_Source\PSoC5/USBFS.c ****         while ((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
 817              		.loc 1 1248 0
 818 002e 082C     		cmp	r4, #8
 819 0030 01D8     		bhi	.L57
 820              		.loc 1 1248 0 is_stmt 0 discriminator 1
 821 0032 092E     		cmp	r6, #9
 822 0034 EBD0     		beq	.L61
 823              	.L57:
 824 0036 70BD     		pop	{r4, r5, r6, pc}
 825              	.LVL66:
 826              	.L65:
 827              		.align	2
 828              	.L64:
 829 0038 00000000 		.word	USBFS_DmaTd
 830 003c 00000000 		.word	USBFS_DmaChan
 831              		.cfi_endproc
 832              	.LFE12:
 833              		.size	USBFS_Stop_DMA, .-USBFS_Stop_DMA
 834              		.section	.text.USBFS_Stop,"ax",%progbits
 835              		.align	2
 836              		.global	USBFS_Stop
 837              		.thumb
 838              		.thumb_func
 839              		.type	USBFS_Stop, %function
 840              	USBFS_Stop:
 841              	.LFB4:
 730:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 842              		.loc 1 730 0 is_stmt 1
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846 0000 08B5     		push	{r3, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 3, -8
 849              		.cfi_offset 14, -4
 735:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 38


 850              		.loc 1 735 0
 851 0002 0920     		movs	r0, #9
 852 0004 FFF7FEFF 		bl	USBFS_Stop_DMA
 853              	.LVL67:
 738:Generated_Source\PSoC5/USBFS.c **** 
 854              		.loc 1 738 0
 855 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 856              	.LVL68:
 741:Generated_Source\PSoC5/USBFS.c **** 
 857              		.loc 1 741 0
 858 000c 1F4A     		ldr	r2, .L68
 859 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 860 0010 03F07F03 		and	r3, r3, #127
 861 0014 1370     		strb	r3, [r2]
 744:Generated_Source\PSoC5/USBFS.c **** 
 862              		.loc 1 744 0
 863 0016 0A32     		adds	r2, r2, #10
 864 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 865 001a 03F0FB03 		and	r3, r3, #251
 866 001e 1370     		strb	r3, [r2]
 751:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8) ~USBFS_PM_STBY_EN_FSUSB;
 867              		.loc 1 751 0
 868 0020 A2F5E352 		sub	r2, r2, #7264
 869 0024 0D3A     		subs	r2, r2, #13
 870 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 871 0028 03F0FE03 		and	r3, r3, #254
 872 002c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBFS.c **** 
 873              		.loc 1 752 0
 874 002e 1032     		adds	r2, r2, #16
 875 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 876 0032 03F0FE03 		and	r3, r3, #254
 877 0036 1370     		strb	r3, [r2]
 756:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG |= (uint8) USBFS_DP_MASK;
 878              		.loc 1 756 0
 879 0038 154B     		ldr	r3, .L68+4
 880 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 881 003c 42F08002 		orr	r2, r2, #128
 882 0040 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBFS.c **** 
 883              		.loc 1 757 0
 884 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 885 0044 42F04002 		orr	r2, r2, #64
 886 0048 1A70     		strb	r2, [r3]
 761:Generated_Source\PSoC5/USBFS.c **** 
 887              		.loc 1 761 0
 888 004a FFF7FEFF 		bl	CyExitCriticalSection
 889              	.LVL69:
 770:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 890              		.loc 1 770 0
 891 004e 114B     		ldr	r3, .L68+8
 892 0050 4FF40002 		mov	r2, #8388608
 893 0054 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS.c **** 
 894              		.loc 1 771 0
 895 0056 4FF08072 		mov	r2, #16777216
 896 005a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 39


 778:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 897              		.loc 1 778 0
 898 005c 2022     		movs	r2, #32
 899 005e 1A60     		str	r2, [r3]
 782:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 900              		.loc 1 782 0
 901 0060 4022     		movs	r2, #64
 902 0062 1A60     		str	r2, [r3]
 811:Generated_Source\PSoC5/USBFS.c ****         CyIntClearPending(USBFS_DP_INTC_VECT_NUM);
 903              		.loc 1 811 0
 904 0064 FFF7FEFF 		bl	USBFS_Dp_ClearInterrupt
 905              	.LVL70:
 812:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DP_ISR_ACTIVE). */
 906              		.loc 1 812 0
 907 0068 4FF48052 		mov	r2, #4096
 908 006c 0A4B     		ldr	r3, .L68+12
 909 006e 1A60     		str	r2, [r3]
 818:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 910              		.loc 1 818 0
 911 0070 0023     		movs	r3, #0
 912 0072 0A4A     		ldr	r2, .L68+16
 913 0074 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 914              		.loc 1 819 0
 915 0076 0A4A     		ldr	r2, .L68+20
 916 0078 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 917              		.loc 1 820 0
 918 007a 0A4A     		ldr	r2, .L68+24
 919 007c 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 920              		.loc 1 821 0
 921 007e 0A4A     		ldr	r2, .L68+28
 922 0080 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBFS.c **** 
 923              		.loc 1 822 0
 924 0082 0A4A     		ldr	r2, .L68+32
 925 0084 1370     		strb	r3, [r2]
 825:Generated_Source\PSoC5/USBFS.c **** }
 926              		.loc 1 825 0
 927 0086 0A4A     		ldr	r2, .L68+36
 928 0088 1370     		strb	r3, [r2]
 929 008a 08BD     		pop	{r3, pc}
 930              	.L69:
 931              		.align	2
 932              	.L68:
 933 008c 08600040 		.word	1073766408
 934 0090 F8510040 		.word	1073762808
 935 0094 80E100E0 		.word	-536813184
 936 0098 80E200E0 		.word	-536812928
 937 009c 00000000 		.word	USBFS_configurationChanged
 938 00a0 00000000 		.word	USBFS_configuration
 939 00a4 00000000 		.word	USBFS_interfaceNumber
 940 00a8 00000000 		.word	USBFS_deviceAddress
 941 00ac 00000000 		.word	USBFS_deviceStatus
 942 00b0 00000000 		.word	.LANCHOR0
 943              		.cfi_endproc
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 40


 944              	.LFE4:
 945              		.size	USBFS_Stop, .-USBFS_Stop
 946              		.section	.text.USBFS_LoadInEP,"ax",%progbits
 947              		.align	2
 948              		.global	USBFS_LoadInEP
 949              		.thumb
 950              		.thumb_func
 951              		.type	USBFS_LoadInEP, %function
 952              	USBFS_LoadInEP:
 953              	.LFB13:
1249:Generated_Source\PSoC5/USBFS.c ****     }
1250:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS.c **** 
1252:Generated_Source\PSoC5/USBFS.c **** 
1253:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS.c ****     *
1259:Generated_Source\PSoC5/USBFS.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS.c ****     *
1263:Generated_Source\PSoC5/USBFS.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS.c ****     *
1268:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS.c ****     void USBFS_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS.c ****     {
1271:Generated_Source\PSoC5/USBFS.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS.c **** 
1273:Generated_Source\PSoC5/USBFS.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS.c ****         {
1275:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_inLength[epNumber] - USBFS_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS.c ****                                             USBFS_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS.c ****             USBFS_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBFS.c ****         }
1286:Generated_Source\PSoC5/USBFS.c ****         else
1287:Generated_Source\PSoC5/USBFS.c ****         {
1288:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_inDataPointer[epNumber] +
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 41


1296:Generated_Source\PSoC5/USBFS.c ****                                    (USBFS_DMA_BYTES_PER_BURST - USBFS_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS.c ****         }
1298:Generated_Source\PSoC5/USBFS.c **** 
1299:Generated_Source\PSoC5/USBFS.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBFS.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_DmaChan[epNumber]].basic_status[1u] = USBFS_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS.c ****     }
1302:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS.c **** 
1305:Generated_Source\PSoC5/USBFS.c **** 
1306:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP
1308:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS.c **** *
1310:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS.c **** *
1314:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS.c **** *
1318:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS.c **** *
1322:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS.c **** *
1328:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS.c **** *
1337:Generated_Source\PSoC5/USBFS.c **** *
1338:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS.c **** *  No.
1340:Generated_Source\PSoC5/USBFS.c **** *
1341:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBFS.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS.c **** {
 954              		.loc 1 1344 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL71:
1345:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 959              		.loc 1 1345 0
 960 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 42


 961 0002 DBB2     		uxtb	r3, r3
 962 0004 072B     		cmp	r3, #7
 963 0006 6FD8     		bhi	.L76
1344:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 964              		.loc 1 1344 0
 965 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 966              		.cfi_def_cfa_offset 24
 967              		.cfi_offset 4, -24
 968              		.cfi_offset 5, -20
 969              		.cfi_offset 6, -16
 970              		.cfi_offset 7, -12
 971              		.cfi_offset 8, -8
 972              		.cfi_offset 14, -4
 973 000c 0446     		mov	r4, r0
 974 000e 0E46     		mov	r6, r1
 975 0010 1546     		mov	r5, r2
1346:Generated_Source\PSoC5/USBFS.c ****     {
1347:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
 976              		.loc 1 1349 0
 977 0012 00EB4002 		add	r2, r0, r0, lsl #1
 978              	.LVL72:
 979 0016 9300     		lsls	r3, r2, #2
 980 0018 344A     		ldr	r2, .L77
 981 001a 1344     		add	r3, r3, r2
 982 001c DB88     		ldrh	r3, [r3, #6]
 983 001e 9BB2     		uxth	r3, r3
 984 0020 C3F50073 		rsb	r3, r3, #512
 985 0024 9D42     		cmp	r5, r3
 986 0026 09D9     		bls	.L72
1350:Generated_Source\PSoC5/USBFS.c ****         {
1351:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
 987              		.loc 1 1351 0
 988 0028 00EB4002 		add	r2, r0, r0, lsl #1
 989 002c 9300     		lsls	r3, r2, #2
 990 002e 2F4A     		ldr	r2, .L77
 991 0030 1344     		add	r3, r3, r2
 992 0032 DD88     		ldrh	r5, [r3, #6]
 993 0034 ADB2     		uxth	r5, r5
 994 0036 C5F50075 		rsb	r5, r5, #512
 995 003a ADB2     		uxth	r5, r5
 996              	.LVL73:
 997              	.L72:
1352:Generated_Source\PSoC5/USBFS.c ****         }
1353:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS.c **** 
1355:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_EP[epNumber].epToggl
 998              		.loc 1 1356 0
 999 003c 04EB4402 		add	r2, r4, r4, lsl #1
 1000 0040 9300     		lsls	r3, r2, #2
 1001 0042 2A4A     		ldr	r2, .L77
 1002 0044 1344     		add	r3, r3, r2
 1003 0046 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1004 0048 43EA1523 		orr	r3, r3, r5, lsr #8
 1005 004c 2849     		ldr	r1, .L77+4
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 43


 1006              	.LVL74:
 1007 004e 2201     		lsls	r2, r4, #4
 1008 0050 8818     		adds	r0, r1, r2
 1009              	.LVL75:
 1010 0052 8B54     		strb	r3, [r1, r2]
1357:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1011              		.loc 1 1357 0
 1012 0054 EBB2     		uxtb	r3, r5
 1013 0056 4370     		strb	r3, [r0, #1]
1358:Generated_Source\PSoC5/USBFS.c **** 
1359:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
1361:Generated_Source\PSoC5/USBFS.c ****         {
1362:Generated_Source\PSoC5/USBFS.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBFS.c ****             {
1366:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
1367:Generated_Source\PSoC5/USBFS.c ****             }
1368:Generated_Source\PSoC5/USBFS.c ****         }
1369:Generated_Source\PSoC5/USBFS.c **** 
1370:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1372:Generated_Source\PSoC5/USBFS.c **** 
1373:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1375:Generated_Source\PSoC5/USBFS.c **** 
1376:Generated_Source\PSoC5/USBFS.c ****     #else
1377:Generated_Source\PSoC5/USBFS.c **** 
1378:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
 1014              		.loc 1 1380 0
 1015 0058 264B     		ldr	r3, .L77+8
 1016 005a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1017 005c FF2B     		cmp	r3, #255
 1018 005e 03D1     		bne	.L73
1381:Generated_Source\PSoC5/USBFS.c ****             {
1382:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
 1019              		.loc 1 1382 0
 1020 0060 3146     		mov	r1, r6
 1021 0062 2046     		mov	r0, r4
 1022 0064 FFF7FEFF 		bl	USBFS_InitEP_DMA
 1023              	.LVL76:
 1024              	.L73:
1383:Generated_Source\PSoC5/USBFS.c ****             }
1384:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS.c **** 
1386:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1025              		.loc 1 1388 0
 1026 0068 04EB4402 		add	r2, r4, r4, lsl #1
 1027 006c 9300     		lsls	r3, r2, #2
 1028 006e 1F4A     		ldr	r2, .L77
 1029 0070 1344     		add	r3, r3, r2
 1030 0072 0022     		movs	r2, #0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 44


 1031 0074 5A70     		strb	r2, [r3, #1]
1389:Generated_Source\PSoC5/USBFS.c **** 
1390:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
 1032              		.loc 1 1390 0
 1033 0076 5EB3     		cbz	r6, .L74
 1034              		.loc 1 1390 0 is_stmt 0 discriminator 1
 1035 0078 55B3     		cbz	r5, .L74
1391:Generated_Source\PSoC5/USBFS.c ****             {
1392:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS.c **** 
1395:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBFS.c **** 
1398:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1401:Generated_Source\PSoC5/USBFS.c **** 
1402:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1405:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS.c **** 
1407:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS.c **** 
1410:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS.c ****             #else
1413:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
 1036              		.loc 1 1414 0 is_stmt 1
 1037 007a 1F4F     		ldr	r7, .L77+12
 1038 007c 385D     		ldrb	r0, [r7, r4]	@ zero_extendqisi2
 1039 007e FFF7FEFF 		bl	CyDmaChDisable
 1040              	.LVL77:
1415:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD
 1041              		.loc 1 1415 0
 1042 0082 DFF87080 		ldr	r8, .L77+8
 1043 0086 1123     		movs	r3, #17
 1044 0088 FE22     		movs	r2, #254
 1045 008a 2946     		mov	r1, r5
 1046 008c 18F80400 		ldrb	r0, [r8, r4]	@ zero_extendqisi2
 1047 0090 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 1048              	.LVL78:
1416:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32)
 1049              		.loc 1 1416 0
 1050 0094 2201     		lsls	r2, r4, #4
 1051 0096 0832     		adds	r2, r2, #8
 1052 0098 184D     		ldr	r5, .L77+16
 1053              	.LVL79:
 1054 009a 2A44     		add	r2, r2, r5
 1055 009c 92B2     		uxth	r2, r2
 1056 009e B1B2     		uxth	r1, r6
 1057 00a0 18F80400 		ldrb	r0, [r8, r4]	@ zero_extendqisi2
 1058 00a4 FFF7FEFF 		bl	CyDmaTdSetAddress
 1059              	.LVL80:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 45


1417:Generated_Source\PSoC5/USBFS.c **** 
1418:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
 1060              		.loc 1 1419 0
 1061 00a8 18F80410 		ldrb	r1, [r8, r4]	@ zero_extendqisi2
 1062 00ac 385D     		ldrb	r0, [r7, r4]	@ zero_extendqisi2
 1063 00ae FFF7FEFF 		bl	CyDmaChSetInitialTd
 1064              	.LVL81:
1420:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
 1065              		.loc 1 1420 0
 1066 00b2 0121     		movs	r1, #1
 1067 00b4 385D     		ldrb	r0, [r7, r4]	@ zero_extendqisi2
 1068 00b6 FFF7FEFF 		bl	CyDmaChEnable
 1069              	.LVL82:
1421:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS.c **** 
1423:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
 1070              		.loc 1 1424 0
 1071 00ba 2401     		lsls	r4, r4, #4
 1072 00bc 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 1073 00be 43F00203 		orr	r3, r3, #2
 1074 00c2 2B55     		strb	r3, [r5, r4]
1425:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
 1075              		.loc 1 1425 0
 1076 00c4 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 1077 00c6 03F0FD03 		and	r3, r3, #253
 1078 00ca 2B55     		strb	r3, [r5, r4]
 1079 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1080              	.LVL83:
 1081              	.L74:
1426:Generated_Source\PSoC5/USBFS.c **** 
1427:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS.c ****             }
1429:Generated_Source\PSoC5/USBFS.c ****             else
1430:Generated_Source\PSoC5/USBFS.c ****             {
1431:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 1082              		.loc 1 1432 0
 1083 00d0 04EB4402 		add	r2, r4, r4, lsl #1
 1084 00d4 9300     		lsls	r3, r2, #2
 1085 00d6 054A     		ldr	r2, .L77
 1086 00d8 1344     		add	r3, r3, r2
 1087 00da 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1088 00dc D2B2     		uxtb	r2, r2
 1089 00de 2401     		lsls	r4, r4, #4
 1090 00e0 074B     		ldr	r3, .L77+20
 1091 00e2 1A55     		strb	r2, [r3, r4]
 1092 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1093              	.LVL84:
 1094              	.L76:
 1095              		.cfi_def_cfa_offset 0
 1096              		.cfi_restore 4
 1097              		.cfi_restore 5
 1098              		.cfi_restore 6
 1099              		.cfi_restore 7
 1100              		.cfi_restore 8
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 46


 1101              		.cfi_restore 14
 1102 00e8 7047     		bx	lr
 1103              	.L78:
 1104 00ea 00BF     		.align	2
 1105              	.L77:
 1106 00ec 00000000 		.word	USBFS_EP
 1107 00f0 FC5F0040 		.word	1073766396
 1108 00f4 00000000 		.word	USBFS_DmaTd
 1109 00f8 00000000 		.word	USBFS_DmaChan
 1110 00fc 70600040 		.word	1073766512
 1111 0100 FE5F0040 		.word	1073766398
 1112              		.cfi_endproc
 1113              	.LFE13:
 1114              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
 1115              		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 1116              		.align	2
 1117              		.global	USBFS_ReadOutEP
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	USBFS_ReadOutEP, %function
 1121              	USBFS_ReadOutEP:
 1122              	.LFB14:
1433:Generated_Source\PSoC5/USBFS.c ****             }
1434:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS.c **** 
1436:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS.c ****             {
1439:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS.c **** 
1442:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS.c **** 
1445:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS.c **** 
1448:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1450:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.a
1451:Generated_Source\PSoC5/USBFS.c **** 
1452:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1454:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS.c **** 
1456:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1458:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS.c **** 
1460:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS.c **** 
1463:Generated_Source\PSoC5/USBFS.c **** 
1464:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS.c **** 
1467:Generated_Source\PSoC5/USBFS.c ****             #else
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 47


1468:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS.c **** 
1470:Generated_Source\PSoC5/USBFS.c ****                 #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS.c **** 
1474:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBFS.c ****                         (length > USBFS_DMA_BYTES_PER_BURST) ? USBFS_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS.c **** 
1481:Generated_Source\PSoC5/USBFS.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBFS.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS.c ****                     */
1485:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS.c **** 
1489:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaNextTd[epNumber], LO16((uint32) &clearInDataR
1491:Generated_Source\PSoC5/USBFS.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS.c ****                 #else
1493:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC
1496:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS.c **** 
1500:Generated_Source\PSoC5/USBFS.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS.c ****             }
1507:Generated_Source\PSoC5/USBFS.c ****             else
1508:Generated_Source\PSoC5/USBFS.c ****             {
1509:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBFS.c **** 
1512:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS.c ****                 {
1514:Generated_Source\PSoC5/USBFS.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS.c **** 
1518:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC5/USBFS.c **** 
1521:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1523:Generated_Source\PSoC5/USBFS.c **** 
1524:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 48


1525:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1526:Generated_Source\PSoC5/USBFS.c **** 
1527:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DmaEpLastBurstEl[e
1530:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DMA_BYTES_PER_BURS
1531:Generated_Source\PSoC5/USBFS.c **** 
1532:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1534:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1535:Generated_Source\PSoC5/USBFS.c **** 
1536:Generated_Source\PSoC5/USBFS.c **** 
1537:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
1539:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
1540:Generated_Source\PSoC5/USBFS.c **** 
1541:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS.c **** 
1544:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
1546:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
1547:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS.c **** 
1549:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS.c **** 
1553:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS.c **** 
1557:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS.c ****                     {
1560:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS.c **** 
1563:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
1565:Generated_Source\PSoC5/USBFS.c **** 
1566:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBFS.c **** 
1569:Generated_Source\PSoC5/USBFS.c ****                 #elif (USBFS_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS.c **** 
1573:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaTd[epNumber], (length > USBFS_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32)  USBFS_inDataPoin
1580:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 49


1582:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS.c **** 
1588:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS.c **** 
1593:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS.c ****                 }
1595:Generated_Source\PSoC5/USBFS.c ****                 else
1596:Generated_Source\PSoC5/USBFS.c ****                 {
1597:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS.c ****                 }
1600:Generated_Source\PSoC5/USBFS.c ****             }
1601:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS.c ****     }
1604:Generated_Source\PSoC5/USBFS.c **** }
1605:Generated_Source\PSoC5/USBFS.c **** 
1606:Generated_Source\PSoC5/USBFS.c **** 
1607:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP
1609:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS.c **** *
1611:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS.c **** *
1615:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBFS.c **** *
1621:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBFS.c **** *
1627:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS.c **** *
1629:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS.c **** *
1633:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS.c **** *
1637:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 50


1639:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS.c **** *
1646:Generated_Source\PSoC5/USBFS.c **** * \return
1647:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS.c **** *
1649:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS.c **** *  No.
1651:Generated_Source\PSoC5/USBFS.c **** *
1652:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBFS.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS.c **** {
 1123              		.loc 1 1655 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              	.LVL85:
 1128 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1129              		.cfi_def_cfa_offset 32
 1130              		.cfi_offset 3, -32
 1131              		.cfi_offset 4, -28
 1132              		.cfi_offset 5, -24
 1133              		.cfi_offset 6, -20
 1134              		.cfi_offset 7, -16
 1135              		.cfi_offset 8, -12
 1136              		.cfi_offset 9, -8
 1137              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1138              		.loc 1 1656 0
 1139 0004 0029     		cmp	r1, #0
 1140 0006 44D0     		beq	.L83
 1141 0008 0446     		mov	r4, r0
 1142 000a 1546     		mov	r5, r2
 1143 000c 0F46     		mov	r7, r1
 1144              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1145 000e 0028     		cmp	r0, #0
 1146 0010 41D0     		beq	.L84
 1147              		.loc 1 1656 0 discriminator 2
 1148 0012 0828     		cmp	r0, #8
 1149 0014 41D8     		bhi	.L85
1657:Generated_Source\PSoC5/USBFS.c ****     {
1658:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
 1150              		.loc 1 1660 0 is_stmt 1
 1151 0016 FFF7FEFF 		bl	USBFS_GetEPCount
 1152              	.LVL86:
 1153 001a A842     		cmp	r0, r5
 1154 001c 03D2     		bcs	.L81
 1155              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1156 001e 2046     		mov	r0, r4
 1157 0020 FFF7FEFF 		bl	USBFS_GetEPCount
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 51


 1158              	.LVL87:
 1159 0024 0546     		mov	r5, r0
 1160              	.L81:
 1161              	.LVL88:
1661:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS.c **** 
1663:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS.c ****         {
1665:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBFS.c ****             {
1669:Generated_Source\PSoC5/USBFS.c ****                 pData[i] = (uint8) USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBFS.c ****             }
1671:Generated_Source\PSoC5/USBFS.c ****         }
1672:Generated_Source\PSoC5/USBFS.c **** 
1673:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBFS.c ****     #else
1676:Generated_Source\PSoC5/USBFS.c **** 
1677:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
 1162              		.loc 1 1679 0 is_stmt 1 discriminator 4
 1163 0026 1F4B     		ldr	r3, .L87
 1164 0028 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1165 002a FF2B     		cmp	r3, #255
 1166 002c 03D1     		bne	.L82
1680:Generated_Source\PSoC5/USBFS.c ****             {
1681:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
 1167              		.loc 1 1681 0
 1168 002e 3946     		mov	r1, r7
 1169 0030 2046     		mov	r0, r4
 1170 0032 FFF7FEFF 		bl	USBFS_InitEP_DMA
 1171              	.LVL89:
 1172              	.L82:
1682:Generated_Source\PSoC5/USBFS.c ****             }
1683:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS.c **** 
1685:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS.c ****         {
1688:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS.c **** 
1690:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS.c **** 
1693:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1695:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS.c **** 
1697:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
1699:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBFS.c **** 
1701:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 52


1703:Generated_Source\PSoC5/USBFS.c **** 
1704:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS.c ****         }
1707:Generated_Source\PSoC5/USBFS.c ****         #else
1708:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
 1173              		.loc 1 1709 0
 1174 0036 DFF87480 		ldr	r8, .L87+8
 1175 003a 18F80400 		ldrb	r0, [r8, r4]	@ zero_extendqisi2
 1176 003e FFF7FEFF 		bl	CyDmaChDisable
 1177              	.LVL90:
1710:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TER
 1178              		.loc 1 1710 0
 1179 0042 DFF86090 		ldr	r9, .L87
 1180 0046 1223     		movs	r3, #18
 1181 0048 FE22     		movs	r2, #254
 1182 004a 2946     		mov	r1, r5
 1183 004c 19F80400 		ldrb	r0, [r9, r4]	@ zero_extendqisi2
 1184 0050 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 1185              	.LVL91:
1711:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
 1186              		.loc 1 1711 0
 1187 0054 2101     		lsls	r1, r4, #4
 1188 0056 0831     		adds	r1, r1, #8
 1189 0058 134E     		ldr	r6, .L87+4
 1190 005a 3144     		add	r1, r1, r6
 1191 005c 89B2     		uxth	r1, r1
 1192 005e BAB2     		uxth	r2, r7
 1193 0060 19F80400 		ldrb	r0, [r9, r4]	@ zero_extendqisi2
 1194 0064 FFF7FEFF 		bl	CyDmaTdSetAddress
 1195              	.LVL92:
1712:Generated_Source\PSoC5/USBFS.c **** 
1713:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
 1196              		.loc 1 1714 0
 1197 0068 19F80410 		ldrb	r1, [r9, r4]	@ zero_extendqisi2
 1198 006c 18F80400 		ldrb	r0, [r8, r4]	@ zero_extendqisi2
 1199 0070 FFF7FEFF 		bl	CyDmaChSetInitialTd
 1200              	.LVL93:
1715:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
 1201              		.loc 1 1715 0
 1202 0074 0121     		movs	r1, #1
 1203 0076 18F80400 		ldrb	r0, [r8, r4]	@ zero_extendqisi2
 1204 007a FFF7FEFF 		bl	CyDmaChEnable
 1205              	.LVL94:
1716:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS.c **** 
1718:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
 1206              		.loc 1 1719 0
 1207 007e 2401     		lsls	r4, r4, #4
 1208 0080 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 1209 0082 43F00203 		orr	r3, r3, #2
 1210 0086 3355     		strb	r3, [r6, r4]
1720:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
 1211              		.loc 1 1720 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 53


 1212 0088 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 1213 008a 03F0FD03 		and	r3, r3, #253
 1214 008e 3355     		strb	r3, [r6, r4]
 1215 0090 04E0     		b	.L80
 1216              	.LVL95:
 1217              	.L83:
1721:Generated_Source\PSoC5/USBFS.c **** 
1722:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS.c ****             */
1725:Generated_Source\PSoC5/USBFS.c **** 
1726:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS.c **** 
1728:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS.c ****         {
1731:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS.c **** 
1734:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS.c **** 
1737:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBFS.c **** 
1740:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC5/USBFS.c **** 
1743:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DmaEpLastBurstEl[epNumber]
1746:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC5/USBFS.c **** 
1748:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1750:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1751:Generated_Source\PSoC5/USBFS.c **** 
1752:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
1754:Generated_Source\PSoC5/USBFS.c **** 
1755:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
1758:Generated_Source\PSoC5/USBFS.c **** 
1759:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS.c **** 
1763:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC5/USBFS.c **** 
1766:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBFS.c **** 
1769:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1771:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.arbEp
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 54


1772:Generated_Source\PSoC5/USBFS.c **** 
1773:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
1775:Generated_Source\PSoC5/USBFS.c **** 
1776:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
1778:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS.c **** 
1780:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
1782:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS.c **** 
1784:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS.c **** 
1787:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS.c **** 
1790:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBFS.c ****             {
1792:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS.c ****             }
1794:Generated_Source\PSoC5/USBFS.c **** 
1795:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBFS.c ****         }
1798:Generated_Source\PSoC5/USBFS.c ****         #else
1799:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,  USBFS_DmaTd[epNumber], T
1801:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1802:Generated_Source\PSoC5/USBFS.c **** 
1803:Generated_Source\PSoC5/USBFS.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS.c **** 
1806:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS.c **** 
1811:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS.c ****             */
1814:Generated_Source\PSoC5/USBFS.c **** 
1815:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS.c ****     }
1818:Generated_Source\PSoC5/USBFS.c ****     else
1819:Generated_Source\PSoC5/USBFS.c ****     {
1820:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
 1218              		.loc 1 1820 0
 1219 0092 0025     		movs	r5, #0
 1220 0094 02E0     		b	.L80
 1221              	.L84:
 1222 0096 0025     		movs	r5, #0
 1223 0098 00E0     		b	.L80
 1224              	.L85:
 1225 009a 0025     		movs	r5, #0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 55


 1226              	.LVL96:
 1227              	.L80:
1821:Generated_Source\PSoC5/USBFS.c ****     }
1822:Generated_Source\PSoC5/USBFS.c **** 
1823:Generated_Source\PSoC5/USBFS.c ****     return (length);
1824:Generated_Source\PSoC5/USBFS.c **** }
 1228              		.loc 1 1824 0
 1229 009c 2846     		mov	r0, r5
 1230 009e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1231              	.LVL97:
 1232              	.L88:
 1233 00a2 00BF     		.align	2
 1234              	.L87:
 1235 00a4 00000000 		.word	USBFS_DmaTd
 1236 00a8 70600040 		.word	1073766512
 1237 00ac 00000000 		.word	USBFS_DmaChan
 1238              		.cfi_endproc
 1239              	.LFE14:
 1240              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1241              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 1242              		.align	2
 1243              		.global	USBFS_EnableOutEP
 1244              		.thumb
 1245              		.thumb_func
 1246              		.type	USBFS_EnableOutEP, %function
 1247              	USBFS_EnableOutEP:
 1248              	.LFB15:
1825:Generated_Source\PSoC5/USBFS.c **** 
1826:Generated_Source\PSoC5/USBFS.c **** 
1827:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP16
1830:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS.c **** *
1832:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS.c **** *
1836:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS.c **** *
1840:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS.c **** *
1844:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS.c **** *
1850:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBFS.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBFS.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 56


1855:Generated_Source\PSoC5/USBFS.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS.c **** *
1861:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS.c **** *  No.
1863:Generated_Source\PSoC5/USBFS.c **** *
1864:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS.c **** {
1867:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS.c **** 
1870:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1871:Generated_Source\PSoC5/USBFS.c ****     {
1872:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS.c ****         {
1876:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS.c ****         }
1878:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS.c **** 
1880:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_EP[epNumber].epTogg
1882:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS.c **** 
1884:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS.c **** 
1887:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS.c ****         {
1890:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS.c **** 
1893:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS.c ****             {
1897:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS.c ****             }
1899:Generated_Source\PSoC5/USBFS.c ****         }
1900:Generated_Source\PSoC5/USBFS.c **** 
1901:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS.c **** 
1904:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS.c **** 
1907:Generated_Source\PSoC5/USBFS.c ****     #else
1908:Generated_Source\PSoC5/USBFS.c **** 
1909:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 57


1912:Generated_Source\PSoC5/USBFS.c **** 
1913:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS.c ****             {
1915:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS.c **** 
1917:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS.c **** 
1920:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1923:Generated_Source\PSoC5/USBFS.c **** 
1924:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1927:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS.c **** 
1929:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS.c **** 
1932:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS.c **** 
1935:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
1937:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC5/USBFS.c **** 
1939:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS.c ****             }
1941:Generated_Source\PSoC5/USBFS.c ****             else
1942:Generated_Source\PSoC5/USBFS.c ****             {
1943:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS.c ****             }
1946:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS.c **** 
1948:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS.c ****             {
1951:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS.c **** 
1953:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS.c **** 
1956:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS.c **** 
1959:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1961:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE
1962:Generated_Source\PSoC5/USBFS.c **** 
1963:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS.c **** 
1967:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 58


1969:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS.c **** 
1971:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS.c **** 
1974:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS.c ****             }
1977:Generated_Source\PSoC5/USBFS.c ****             else
1978:Generated_Source\PSoC5/USBFS.c ****             {
1979:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS.c **** 
1982:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS.c ****                 {
1984:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS.c **** 
1987:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC5/USBFS.c **** 
1990:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1992:Generated_Source\PSoC5/USBFS.c **** 
1993:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1995:Generated_Source\PSoC5/USBFS.c **** 
1996:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC5/USBFS.c ****                                                                           ((USBFS_DmaEpLastBurstEl[
1999:Generated_Source\PSoC5/USBFS.c ****                                                                            (USBFS_DMA_HALFWORDS_PER
2000:Generated_Source\PSoC5/USBFS.c **** 
2001:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2003:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2004:Generated_Source\PSoC5/USBFS.c **** 
2005:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
2007:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
2008:Generated_Source\PSoC5/USBFS.c **** 
2009:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS.c **** 
2012:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
2014:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
2015:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS.c **** 
2017:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS.c **** 
2021:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBFS.c **** 
2025:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 59


2026:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS.c ****                     {
2028:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS.c ****                     }
2030:Generated_Source\PSoC5/USBFS.c **** 
2031:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
2033:Generated_Source\PSoC5/USBFS.c **** 
2034:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS.c **** 
2037:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS.c **** 
2042:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS.c ****                 }
2044:Generated_Source\PSoC5/USBFS.c ****                 else
2045:Generated_Source\PSoC5/USBFS.c ****                 {
2046:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS.c ****                 }
2049:Generated_Source\PSoC5/USBFS.c ****             }
2050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS.c ****     }
2053:Generated_Source\PSoC5/USBFS.c **** }
2054:Generated_Source\PSoC5/USBFS.c **** 
2055:Generated_Source\PSoC5/USBFS.c **** 
2056:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS.c **** *
2060:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS.c **** *
2064:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS.c **** *
2070:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS.c **** *
2076:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS.c **** *
2078:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBFS.c **** *
2082:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 60


2083:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS.c **** *
2086:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS.c **** *
2097:Generated_Source\PSoC5/USBFS.c **** * \return
2098:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS.c **** *
2100:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS.c **** *  No.
2102:Generated_Source\PSoC5/USBFS.c **** *
2103:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS.c **** {
2106:Generated_Source\PSoC5/USBFS.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS.c **** 
2108:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBFS.c **** 
2111:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
2112:Generated_Source\PSoC5/USBFS.c ****     {
2113:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS.c **** 
2118:Generated_Source\PSoC5/USBFS.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS.c **** 
2121:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS.c ****         {
2123:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS.c **** 
2126:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS.c ****             {
2130:Generated_Source\PSoC5/USBFS.c ****                 dataBuf[i] = (uint16) USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS.c ****             }
2132:Generated_Source\PSoC5/USBFS.c ****         }
2133:Generated_Source\PSoC5/USBFS.c **** 
2134:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS.c ****     #else
2137:Generated_Source\PSoC5/USBFS.c **** 
2138:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBFS.c ****         {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 61


2140:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS.c **** 
2142:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS.c **** 
2145:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2147:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS.c **** 
2149:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
2151:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS.c **** 
2153:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS.c **** 
2156:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS.c **** 
2159:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS.c **** 
2163:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS.c ****             */
2166:Generated_Source\PSoC5/USBFS.c ****         }
2167:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS.c **** 
2169:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS.c ****         {
2171:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS.c **** 
2174:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS.c **** 
2177:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS.c **** 
2180:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC5/USBFS.c **** 
2183:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS.c ****                                                                   ((USBFS_DmaEpLastBurstEl[epNumber
2186:Generated_Source\PSoC5/USBFS.c ****                                                                    (USBFS_DMA_HALFWORDS_PER_BURST -
2187:Generated_Source\PSoC5/USBFS.c **** 
2188:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2190:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2191:Generated_Source\PSoC5/USBFS.c **** 
2192:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
2195:Generated_Source\PSoC5/USBFS.c **** 
2196:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 62


2197:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
2198:Generated_Source\PSoC5/USBFS.c **** 
2199:Generated_Source\PSoC5/USBFS.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= USBFS_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS.c **** 
2202:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS.c **** 
2206:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC5/USBFS.c **** 
2209:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS.c **** 
2212:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2214:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE.arb
2215:Generated_Source\PSoC5/USBFS.c **** 
2216:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
2218:Generated_Source\PSoC5/USBFS.c **** 
2219:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
2221:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS.c **** 
2223:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
2225:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS.c **** 
2227:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS.c **** 
2230:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS.c ****             
2233:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS.c ****             {
2235:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS.c ****             }
2237:Generated_Source\PSoC5/USBFS.c **** 
2238:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS.c **** 
2241:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS.c ****             */
2244:Generated_Source\PSoC5/USBFS.c ****         }
2245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBFS.c ****     }
2248:Generated_Source\PSoC5/USBFS.c ****     else
2249:Generated_Source\PSoC5/USBFS.c ****     {
2250:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS.c ****     }
2252:Generated_Source\PSoC5/USBFS.c **** 
2253:Generated_Source\PSoC5/USBFS.c ****     return (length);
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 63


2254:Generated_Source\PSoC5/USBFS.c **** }
2255:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS.c **** 
2257:Generated_Source\PSoC5/USBFS.c **** 
2258:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableOutEP
2260:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS.c **** *
2262:Generated_Source\PSoC5/USBFS.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS.c **** *
2265:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS.c **** *
2268:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS.c **** *
2270:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS.c **** *
2272:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS.c **** *  No.
2274:Generated_Source\PSoC5/USBFS.c **** *
2275:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS.c **** {
 1249              		.loc 1 2277 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254              	.LVL98:
2278:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1255              		.loc 1 2278 0
 1256 0000 431E     		subs	r3, r0, #1
 1257 0002 DBB2     		uxtb	r3, r3
 1258 0004 072B     		cmp	r3, #7
 1259 0006 0BD8     		bhi	.L89
2279:Generated_Source\PSoC5/USBFS.c ****     {
2280:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1260              		.loc 1 2280 0
 1261 0008 4200     		lsls	r2, r0, #1
 1262 000a 0244     		add	r2, r2, r0
 1263 000c 9300     		lsls	r3, r2, #2
 1264 000e 054A     		ldr	r2, .L91
 1265 0010 1344     		add	r3, r3, r2
 1266 0012 0022     		movs	r2, #0
 1267 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBFS.c **** 
2282:Generated_Source\PSoC5/USBFS.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 1268              		.loc 1 2283 0
 1269 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1270 0018 D2B2     		uxtb	r2, r2
 1271 001a 0001     		lsls	r0, r0, #4
 1272              	.LVL99:
 1273 001c 024B     		ldr	r3, .L91+4
 1274 001e 1A54     		strb	r2, [r3, r0]
 1275              	.L89:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 64


 1276 0020 7047     		bx	lr
 1277              	.L92:
 1278 0022 00BF     		.align	2
 1279              	.L91:
 1280 0024 00000000 		.word	USBFS_EP
 1281 0028 FE5F0040 		.word	1073766398
 1282              		.cfi_endproc
 1283              	.LFE15:
 1284              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 1285              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
 1286              		.align	2
 1287              		.global	USBFS_DisableOutEP
 1288              		.thumb
 1289              		.thumb_func
 1290              		.type	USBFS_DisableOutEP, %function
 1291              	USBFS_DisableOutEP:
 1292              	.LFB16:
2284:Generated_Source\PSoC5/USBFS.c ****         
2285:Generated_Source\PSoC5/USBFS.c ****     }
2286:Generated_Source\PSoC5/USBFS.c **** }
2287:Generated_Source\PSoC5/USBFS.c **** 
2288:Generated_Source\PSoC5/USBFS.c **** 
2289:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableOutEP
2291:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS.c **** *
2293:Generated_Source\PSoC5/USBFS.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS.c **** *
2296:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS.c **** *
2299:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS.c **** {
 1293              		.loc 1 2301 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              		@ link register save eliminated.
 1298              	.LVL100:
2302:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1299              		.loc 1 2302 0
 1300 0000 431E     		subs	r3, r0, #1
 1301 0002 DBB2     		uxtb	r3, r3
 1302 0004 072B     		cmp	r3, #7
 1303 0006 03D8     		bhi	.L93
2303:Generated_Source\PSoC5/USBFS.c ****     {
2304:Generated_Source\PSoC5/USBFS.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_MODE_NAK_OUT;
 1304              		.loc 1 2305 0
 1305 0008 0001     		lsls	r0, r0, #4
 1306              	.LVL101:
 1307 000a 024B     		ldr	r3, .L95
 1308 000c 0822     		movs	r2, #8
 1309 000e 1A54     		strb	r2, [r3, r0]
 1310              	.L93:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 65


 1311 0010 7047     		bx	lr
 1312              	.L96:
 1313 0012 00BF     		.align	2
 1314              	.L95:
 1315 0014 FE5F0040 		.word	1073766398
 1316              		.cfi_endproc
 1317              	.LFE16:
 1318              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1319              		.section	.text.USBFS_Force,"ax",%progbits
 1320              		.align	2
 1321              		.global	USBFS_Force
 1322              		.thumb
 1323              		.thumb_func
 1324              		.type	USBFS_Force, %function
 1325              	USBFS_Force:
 1326              	.LFB17:
2306:Generated_Source\PSoC5/USBFS.c ****     }
2307:Generated_Source\PSoC5/USBFS.c **** }
2308:Generated_Source\PSoC5/USBFS.c **** 
2309:Generated_Source\PSoC5/USBFS.c **** 
2310:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Force
2312:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS.c **** *
2314:Generated_Source\PSoC5/USBFS.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS.c **** *
2319:Generated_Source\PSoC5/USBFS.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS.c **** *
2328:Generated_Source\PSoC5/USBFS.c **** *
2329:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS.c **** void USBFS_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS.c **** {
 1327              		.loc 1 2331 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332              	.LVL102:
2332:Generated_Source\PSoC5/USBFS.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS.c ****     */
2335:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG = bState;
 1333              		.loc 1 2335 0
 1334 0000 014B     		ldr	r3, .L98
 1335 0002 1870     		strb	r0, [r3]
 1336 0004 7047     		bx	lr
 1337              	.L99:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 66


 1338 0006 00BF     		.align	2
 1339              	.L98:
 1340 0008 10600040 		.word	1073766416
 1341              		.cfi_endproc
 1342              	.LFE17:
 1343              		.size	USBFS_Force, .-USBFS_Force
 1344              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1345              		.align	2
 1346              		.global	USBFS_GetEPAckState
 1347              		.thumb
 1348              		.thumb_func
 1349              		.type	USBFS_GetEPAckState, %function
 1350              	USBFS_GetEPAckState:
 1351              	.LFB18:
2336:Generated_Source\PSoC5/USBFS.c **** }
2337:Generated_Source\PSoC5/USBFS.c **** 
2338:Generated_Source\PSoC5/USBFS.c **** 
2339:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPAckState
2341:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS.c **** *
2343:Generated_Source\PSoC5/USBFS.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBFS.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS.c **** *
2347:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS.c **** *
2350:Generated_Source\PSoC5/USBFS.c **** *  \return
2351:Generated_Source\PSoC5/USBFS.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS.c **** *
2354:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS.c **** {
 1352              		.loc 1 2356 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357              	.LVL103:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBFS.c **** 
2359:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1358              		.loc 1 2359 0
 1359 0000 431E     		subs	r3, r0, #1
 1360 0002 DBB2     		uxtb	r3, r3
 1361 0004 072B     		cmp	r3, #7
 1362 0006 06D8     		bhi	.L102
2360:Generated_Source\PSoC5/USBFS.c ****     {
2361:Generated_Source\PSoC5/USBFS.c ****         cr = USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_MODE_ACKD;
 1363              		.loc 1 2361 0
 1364 0008 0001     		lsls	r0, r0, #4
 1365              	.LVL104:
 1366 000a 044B     		ldr	r3, .L103
 1367 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1368 000e 00F01000 		and	r0, r0, #16
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 67


 1369 0012 C0B2     		uxtb	r0, r0
 1370              	.LVL105:
 1371 0014 7047     		bx	lr
 1372              	.LVL106:
 1373              	.L102:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
 1374              		.loc 1 2357 0
 1375 0016 0020     		movs	r0, #0
 1376              	.LVL107:
2362:Generated_Source\PSoC5/USBFS.c ****     }
2363:Generated_Source\PSoC5/USBFS.c **** 
2364:Generated_Source\PSoC5/USBFS.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBFS.c **** }
 1377              		.loc 1 2365 0
 1378 0018 7047     		bx	lr
 1379              	.L104:
 1380 001a 00BF     		.align	2
 1381              	.L103:
 1382 001c FE5F0040 		.word	1073766398
 1383              		.cfi_endproc
 1384              	.LFE18:
 1385              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1386              		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1387              		.align	2
 1388              		.global	USBFS_SetPowerStatus
 1389              		.thumb
 1390              		.thumb_func
 1391              		.type	USBFS_SetPowerStatus, %function
 1392              	USBFS_SetPowerStatus:
 1393              	.LFB19:
2366:Generated_Source\PSoC5/USBFS.c **** 
2367:Generated_Source\PSoC5/USBFS.c **** 
2368:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS.c **** *
2372:Generated_Source\PSoC5/USBFS.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBFS.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS.c **** *
2380:Generated_Source\PSoC5/USBFS.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS.c **** *
2388:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS.c **** *
2390:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS.c **** *
2392:Generated_Source\PSoC5/USBFS.c **** * \reentrant
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 68


2393:Generated_Source\PSoC5/USBFS.c **** *  No.
2394:Generated_Source\PSoC5/USBFS.c **** *
2395:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBFS.c **** {
 1394              		.loc 1 2397 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399              	.LVL108:
2398:Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1400              		.loc 1 2398 0
 1401 0000 28B1     		cbz	r0, .L106
2399:Generated_Source\PSoC5/USBFS.c ****     {
2400:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus |= (uint8)  USBFS_DEVICE_STATUS_SELF_POWERED;
 1402              		.loc 1 2400 0
 1403 0002 064A     		ldr	r2, .L108
 1404 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1405 0006 43F00103 		orr	r3, r3, #1
 1406 000a 1370     		strb	r3, [r2]
 1407 000c 7047     		bx	lr
 1408              	.L106:
2401:Generated_Source\PSoC5/USBFS.c ****     }
2402:Generated_Source\PSoC5/USBFS.c ****     else
2403:Generated_Source\PSoC5/USBFS.c ****     {
2404:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus &= (uint8) ~USBFS_DEVICE_STATUS_SELF_POWERED;
 1409              		.loc 1 2404 0
 1410 000e 034A     		ldr	r2, .L108
 1411 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1412 0012 03F0FE03 		and	r3, r3, #254
 1413 0016 1370     		strb	r3, [r2]
 1414 0018 7047     		bx	lr
 1415              	.L109:
 1416 001a 00BF     		.align	2
 1417              	.L108:
 1418 001c 00000000 		.word	USBFS_deviceStatus
 1419              		.cfi_endproc
 1420              	.LFE19:
 1421              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1422              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1423              		.align	2
 1424              		.global	USBFS_RWUEnabled
 1425              		.thumb
 1426              		.thumb_func
 1427              		.type	USBFS_RWUEnabled, %function
 1428              	USBFS_RWUEnabled:
 1429              	.LFB20:
2405:Generated_Source\PSoC5/USBFS.c ****     }
2406:Generated_Source\PSoC5/USBFS.c **** }
2407:Generated_Source\PSoC5/USBFS.c **** 
2408:Generated_Source\PSoC5/USBFS.c **** 
2409:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_VBusPresent
2412:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS.c ****     *
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 69


2414:Generated_Source\PSoC5/USBFS.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS.c ****     *
2417:Generated_Source\PSoC5/USBFS.c ****     * \return
2418:Generated_Source\PSoC5/USBFS.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS.c ****     *
2424:Generated_Source\PSoC5/USBFS.c ****     *
2425:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS.c ****     {
2428:Generated_Source\PSoC5/USBFS.c ****         return ((0u != (USBFS_VBUS_STATUS_REG & USBFS_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS.c ****     }
2430:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS.c **** 
2432:Generated_Source\PSoC5/USBFS.c **** 
2433:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_RWUEnabled
2435:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS.c **** *
2437:Generated_Source\PSoC5/USBFS.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBFS.c **** *
2445:Generated_Source\PSoC5/USBFS.c **** *
2446:Generated_Source\PSoC5/USBFS.c **** * \return
2447:Generated_Source\PSoC5/USBFS.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS.c **** *
2449:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS.c **** *
2452:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS.c **** {
 1430              		.loc 1 2454 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435              	.LVL109:
2455:Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
2456:Generated_Source\PSoC5/USBFS.c **** 
2457:Generated_Source\PSoC5/USBFS.c ****     if (0u != (USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP))
 1436              		.loc 1 2457 0
 1437 0000 044B     		ldr	r3, .L113
 1438 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0004 13F0020F 		tst	r3, #2
 1440 0008 01D1     		bne	.L112
2455:Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
 1441              		.loc 1 2455 0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 70


 1442 000a 0020     		movs	r0, #0
 1443 000c 7047     		bx	lr
 1444              	.L112:
2458:Generated_Source\PSoC5/USBFS.c ****     {
2459:Generated_Source\PSoC5/USBFS.c ****         result = USBFS_TRUE;
 1445              		.loc 1 2459 0
 1446 000e 0120     		movs	r0, #1
 1447              	.LVL110:
2460:Generated_Source\PSoC5/USBFS.c ****     }
2461:Generated_Source\PSoC5/USBFS.c **** 
2462:Generated_Source\PSoC5/USBFS.c ****     return (result);
2463:Generated_Source\PSoC5/USBFS.c **** }
 1448              		.loc 1 2463 0
 1449 0010 7047     		bx	lr
 1450              	.L114:
 1451 0012 00BF     		.align	2
 1452              	.L113:
 1453 0014 00000000 		.word	USBFS_deviceStatus
 1454              		.cfi_endproc
 1455              	.LFE20:
 1456              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 1457              		.section	.text.USBFS_GetDeviceAddress,"ax",%progbits
 1458              		.align	2
 1459              		.global	USBFS_GetDeviceAddress
 1460              		.thumb
 1461              		.thumb_func
 1462              		.type	USBFS_GetDeviceAddress, %function
 1463              	USBFS_GetDeviceAddress:
 1464              	.LFB21:
2464:Generated_Source\PSoC5/USBFS.c **** 
2465:Generated_Source\PSoC5/USBFS.c **** 
2466:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS.c **** *
2470:Generated_Source\PSoC5/USBFS.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS.c **** *
2472:Generated_Source\PSoC5/USBFS.c **** * \return
2473:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS.c **** *
2476:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS.c **** {
 1465              		.loc 1 2478 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBFS.c ****     return (uint8)(USBFS_CR0_REG & USBFS_CR0_DEVICE_ADDRESS_MASK);
 1470              		.loc 1 2479 0
 1471 0000 024B     		ldr	r3, .L116
 1472 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBFS.c **** }
 1473              		.loc 1 2480 0
 1474 0004 00F07F00 		and	r0, r0, #127
 1475 0008 7047     		bx	lr
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 71


 1476              	.L117:
 1477 000a 00BF     		.align	2
 1478              	.L116:
 1479 000c 08600040 		.word	1073766408
 1480              		.cfi_endproc
 1481              	.LFE21:
 1482              		.size	USBFS_GetDeviceAddress, .-USBFS_GetDeviceAddress
 1483              		.section	.text.USBFS_EnableSofInt,"ax",%progbits
 1484              		.align	2
 1485              		.global	USBFS_EnableSofInt
 1486              		.thumb
 1487              		.thumb_func
 1488              		.type	USBFS_EnableSofInt, %function
 1489              	USBFS_EnableSofInt:
 1490              	.LFB22:
2481:Generated_Source\PSoC5/USBFS.c **** 
2482:Generated_Source\PSoC5/USBFS.c **** 
2483:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableSofInt
2485:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS.c **** *
2487:Generated_Source\PSoC5/USBFS.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS.c **** *
2490:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS.c **** {
 1491              		.loc 1 2492 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496 0000 7047     		bx	lr
 1497              		.cfi_endproc
 1498              	.LFE22:
 1499              		.size	USBFS_EnableSofInt, .-USBFS_EnableSofInt
 1500 0002 00BF     		.section	.text.USBFS_DisableSofInt,"ax",%progbits
 1501              		.align	2
 1502              		.global	USBFS_DisableSofInt
 1503              		.thumb
 1504              		.thumb_func
 1505              		.type	USBFS_DisableSofInt, %function
 1506              	USBFS_DisableSofInt:
 1507              	.LFB23:
2493:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG |= (uint32) USBFS_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS.c **** #else
2497:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
2500:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBFS.c **** }
2503:Generated_Source\PSoC5/USBFS.c **** 
2504:Generated_Source\PSoC5/USBFS.c **** 
2505:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 72


2506:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableSofInt
2507:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBFS.c **** *
2509:Generated_Source\PSoC5/USBFS.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS.c **** *
2512:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS.c **** {
 1508              		.loc 1 2514 0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
 1513 0000 7047     		bx	lr
 1514              		.cfi_endproc
 1515              	.LFE23:
 1516              		.size	USBFS_DisableSofInt, .-USBFS_DisableSofInt
 1517              		.comm	USBFS_DmaTd,9,4
 1518              		.comm	USBFS_DmaChan,9,4
 1519              		.global	USBFS_initVar
 1520 0002 00BF     		.bss
 1521              		.set	.LANCHOR0,. + 0
 1522              		.type	USBFS_initVar, %object
 1523              		.size	USBFS_initVar, 1
 1524              	USBFS_initVar:
 1525 0000 00       		.space	1
 1526              		.text
 1527              	.Letext0:
 1528              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1529              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 1530              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 1531              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1532              		.file 6 "Generated_Source\\PSoC5\\USBFS_ep1_dma.h"
 1533              		.file 7 "Generated_Source\\PSoC5\\USBFS_ep2_dma.h"
 1534              		.file 8 "Generated_Source\\PSoC5/CyDmac.h"
 1535              		.file 9 "Generated_Source\\PSoC5\\USBFS_Dp.h"
 1536              		.section	.debug_info,"",%progbits
 1537              	.Ldebug_info0:
 1538 0000 A40B0000 		.4byte	0xba4
 1539 0004 0400     		.2byte	0x4
 1540 0006 00000000 		.4byte	.Ldebug_abbrev0
 1541 000a 04       		.byte	0x4
 1542 000b 01       		.uleb128 0x1
 1543 000c 1A060000 		.4byte	.LASF112
 1544 0010 0C       		.byte	0xc
 1545 0011 25040000 		.4byte	.LASF113
 1546 0015 11020000 		.4byte	.LASF114
 1547 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1548 001d 00000000 		.4byte	0
 1549 0021 00000000 		.4byte	.Ldebug_line0
 1550 0025 02       		.uleb128 0x2
 1551 0026 01       		.byte	0x1
 1552 0027 06       		.byte	0x6
 1553 0028 AA030000 		.4byte	.LASF0
 1554 002c 02       		.uleb128 0x2
 1555 002d 01       		.byte	0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 73


 1556 002e 08       		.byte	0x8
 1557 002f 74030000 		.4byte	.LASF1
 1558 0033 02       		.uleb128 0x2
 1559 0034 02       		.byte	0x2
 1560 0035 05       		.byte	0x5
 1561 0036 DB000000 		.4byte	.LASF2
 1562 003a 02       		.uleb128 0x2
 1563 003b 02       		.byte	0x2
 1564 003c 07       		.byte	0x7
 1565 003d 85040000 		.4byte	.LASF3
 1566 0041 02       		.uleb128 0x2
 1567 0042 04       		.byte	0x4
 1568 0043 05       		.byte	0x5
 1569 0044 91020000 		.4byte	.LASF4
 1570 0048 02       		.uleb128 0x2
 1571 0049 04       		.byte	0x4
 1572 004a 07       		.byte	0x7
 1573 004b F7040000 		.4byte	.LASF5
 1574 004f 02       		.uleb128 0x2
 1575 0050 08       		.byte	0x8
 1576 0051 05       		.byte	0x5
 1577 0052 60020000 		.4byte	.LASF6
 1578 0056 02       		.uleb128 0x2
 1579 0057 08       		.byte	0x8
 1580 0058 07       		.byte	0x7
 1581 0059 6E020000 		.4byte	.LASF7
 1582 005d 03       		.uleb128 0x3
 1583 005e 04       		.byte	0x4
 1584 005f 05       		.byte	0x5
 1585 0060 696E7400 		.ascii	"int\000"
 1586 0064 02       		.uleb128 0x2
 1587 0065 04       		.byte	0x4
 1588 0066 07       		.byte	0x7
 1589 0067 C0030000 		.4byte	.LASF8
 1590 006b 04       		.uleb128 0x4
 1591 006c 9F040000 		.4byte	.LASF9
 1592 0070 02       		.byte	0x2
 1593 0071 E401     		.2byte	0x1e4
 1594 0073 2C000000 		.4byte	0x2c
 1595 0077 04       		.uleb128 0x4
 1596 0078 B2010000 		.4byte	.LASF10
 1597 007c 02       		.byte	0x2
 1598 007d E501     		.2byte	0x1e5
 1599 007f 3A000000 		.4byte	0x3a
 1600 0083 04       		.uleb128 0x4
 1601 0084 EB040000 		.4byte	.LASF11
 1602 0088 02       		.byte	0x2
 1603 0089 E601     		.2byte	0x1e6
 1604 008b 48000000 		.4byte	0x48
 1605 008f 02       		.uleb128 0x2
 1606 0090 04       		.byte	0x4
 1607 0091 04       		.byte	0x4
 1608 0092 0B020000 		.4byte	.LASF12
 1609 0096 02       		.uleb128 0x2
 1610 0097 08       		.byte	0x8
 1611 0098 04       		.byte	0x4
 1612 0099 DE050000 		.4byte	.LASF13
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 74


 1613 009d 02       		.uleb128 0x2
 1614 009e 01       		.byte	0x1
 1615 009f 08       		.byte	0x8
 1616 00a0 44040000 		.4byte	.LASF14
 1617 00a4 04       		.uleb128 0x4
 1618 00a5 F2040000 		.4byte	.LASF15
 1619 00a9 02       		.byte	0x2
 1620 00aa 8E02     		.2byte	0x28e
 1621 00ac B0000000 		.4byte	0xb0
 1622 00b0 05       		.uleb128 0x5
 1623 00b1 6B000000 		.4byte	0x6b
 1624 00b5 04       		.uleb128 0x4
 1625 00b6 F8030000 		.4byte	.LASF16
 1626 00ba 02       		.byte	0x2
 1627 00bb 9002     		.2byte	0x290
 1628 00bd C1000000 		.4byte	0xc1
 1629 00c1 05       		.uleb128 0x5
 1630 00c2 83000000 		.4byte	0x83
 1631 00c6 02       		.uleb128 0x2
 1632 00c7 08       		.byte	0x8
 1633 00c8 04       		.byte	0x4
 1634 00c9 52010000 		.4byte	.LASF17
 1635 00cd 02       		.uleb128 0x2
 1636 00ce 04       		.byte	0x4
 1637 00cf 07       		.byte	0x7
 1638 00d0 18010000 		.4byte	.LASF18
 1639 00d4 06       		.uleb128 0x6
 1640 00d5 0C       		.byte	0xc
 1641 00d6 03       		.byte	0x3
 1642 00d7 8D       		.byte	0x8d
 1643 00d8 49010000 		.4byte	0x149
 1644 00dc 07       		.uleb128 0x7
 1645 00dd 44030000 		.4byte	.LASF19
 1646 00e1 03       		.byte	0x3
 1647 00e2 8F       		.byte	0x8f
 1648 00e3 6B000000 		.4byte	0x6b
 1649 00e7 00       		.byte	0
 1650 00e8 07       		.uleb128 0x7
 1651 00e9 E6060000 		.4byte	.LASF20
 1652 00ed 03       		.byte	0x3
 1653 00ee 90       		.byte	0x90
 1654 00ef 6B000000 		.4byte	0x6b
 1655 00f3 01       		.byte	0x1
 1656 00f4 07       		.uleb128 0x7
 1657 00f5 C7040000 		.4byte	.LASF21
 1658 00f9 03       		.byte	0x3
 1659 00fa 91       		.byte	0x91
 1660 00fb 6B000000 		.4byte	0x6b
 1661 00ff 02       		.byte	0x2
 1662 0100 07       		.uleb128 0x7
 1663 0101 26000000 		.4byte	.LASF22
 1664 0105 03       		.byte	0x3
 1665 0106 92       		.byte	0x92
 1666 0107 6B000000 		.4byte	0x6b
 1667 010b 03       		.byte	0x3
 1668 010c 07       		.uleb128 0x7
 1669 010d AB020000 		.4byte	.LASF23
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 75


 1670 0111 03       		.byte	0x3
 1671 0112 93       		.byte	0x93
 1672 0113 6B000000 		.4byte	0x6b
 1673 0117 04       		.byte	0x4
 1674 0118 07       		.uleb128 0x7
 1675 0119 21010000 		.4byte	.LASF24
 1676 011d 03       		.byte	0x3
 1677 011e 94       		.byte	0x94
 1678 011f 6B000000 		.4byte	0x6b
 1679 0123 05       		.byte	0x5
 1680 0124 07       		.uleb128 0x7
 1681 0125 7A040000 		.4byte	.LASF25
 1682 0129 03       		.byte	0x3
 1683 012a 95       		.byte	0x95
 1684 012b 77000000 		.4byte	0x77
 1685 012f 06       		.byte	0x6
 1686 0130 07       		.uleb128 0x7
 1687 0131 4C050000 		.4byte	.LASF26
 1688 0135 03       		.byte	0x3
 1689 0136 96       		.byte	0x96
 1690 0137 77000000 		.4byte	0x77
 1691 013b 08       		.byte	0x8
 1692 013c 07       		.uleb128 0x7
 1693 013d FE030000 		.4byte	.LASF27
 1694 0141 03       		.byte	0x3
 1695 0142 97       		.byte	0x97
 1696 0143 6B000000 		.4byte	0x6b
 1697 0147 0A       		.byte	0xa
 1698 0148 00       		.byte	0
 1699 0149 08       		.uleb128 0x8
 1700 014a 4B030000 		.4byte	.LASF28
 1701 014e 03       		.byte	0x3
 1702 014f 98       		.byte	0x98
 1703 0150 D4000000 		.4byte	0xd4
 1704 0154 06       		.uleb128 0x6
 1705 0155 10       		.byte	0x10
 1706 0156 03       		.byte	0x3
 1707 0157 D4       		.byte	0xd4
 1708 0158 8D010000 		.4byte	0x18d
 1709 015c 07       		.uleb128 0x7
 1710 015d 98040000 		.4byte	.LASF29
 1711 0161 03       		.byte	0x3
 1712 0162 D6       		.byte	0xd6
 1713 0163 6B000000 		.4byte	0x6b
 1714 0167 00       		.byte	0
 1715 0168 07       		.uleb128 0x7
 1716 0169 AC040000 		.4byte	.LASF30
 1717 016d 03       		.byte	0x3
 1718 016e D7       		.byte	0xd7
 1719 016f 6B000000 		.4byte	0x6b
 1720 0173 01       		.byte	0x1
 1721 0174 07       		.uleb128 0x7
 1722 0175 85020000 		.4byte	.LASF31
 1723 0179 03       		.byte	0x3
 1724 017a D8       		.byte	0xd8
 1725 017b 6B000000 		.4byte	0x6b
 1726 017f 02       		.byte	0x2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 76


 1727 0180 09       		.uleb128 0x9
 1728 0181 67617000 		.ascii	"gap\000"
 1729 0185 03       		.byte	0x3
 1730 0186 D9       		.byte	0xd9
 1731 0187 8D010000 		.4byte	0x18d
 1732 018b 03       		.byte	0x3
 1733 018c 00       		.byte	0
 1734 018d 0A       		.uleb128 0xa
 1735 018e 6B000000 		.4byte	0x6b
 1736 0192 9D010000 		.4byte	0x19d
 1737 0196 0B       		.uleb128 0xb
 1738 0197 CD000000 		.4byte	0xcd
 1739 019b 0C       		.byte	0xc
 1740 019c 00       		.byte	0
 1741 019d 08       		.uleb128 0x8
 1742 019e 81010000 		.4byte	.LASF32
 1743 01a2 03       		.byte	0x3
 1744 01a3 DA       		.byte	0xda
 1745 01a4 54010000 		.4byte	0x154
 1746 01a8 06       		.uleb128 0x6
 1747 01a9 10       		.byte	0x10
 1748 01aa 03       		.byte	0x3
 1749 01ab E6       		.byte	0xe6
 1750 01ac 29020000 		.4byte	0x229
 1751 01b0 07       		.uleb128 0x7
 1752 01b1 8B020000 		.4byte	.LASF33
 1753 01b5 03       		.byte	0x3
 1754 01b6 E8       		.byte	0xe8
 1755 01b7 6B000000 		.4byte	0x6b
 1756 01bb 00       		.byte	0
 1757 01bc 07       		.uleb128 0x7
 1758 01bd BE000000 		.4byte	.LASF34
 1759 01c1 03       		.byte	0x3
 1760 01c2 E9       		.byte	0xe9
 1761 01c3 6B000000 		.4byte	0x6b
 1762 01c7 01       		.byte	0x1
 1763 01c8 07       		.uleb128 0x7
 1764 01c9 96030000 		.4byte	.LASF35
 1765 01cd 03       		.byte	0x3
 1766 01ce EA       		.byte	0xea
 1767 01cf 6B000000 		.4byte	0x6b
 1768 01d3 02       		.byte	0x2
 1769 01d4 07       		.uleb128 0x7
 1770 01d5 95010000 		.4byte	.LASF36
 1771 01d9 03       		.byte	0x3
 1772 01da EB       		.byte	0xeb
 1773 01db 6B000000 		.4byte	0x6b
 1774 01df 03       		.byte	0x3
 1775 01e0 07       		.uleb128 0x7
 1776 01e1 E4030000 		.4byte	.LASF37
 1777 01e5 03       		.byte	0x3
 1778 01e6 EC       		.byte	0xec
 1779 01e7 6B000000 		.4byte	0x6b
 1780 01eb 04       		.byte	0x4
 1781 01ec 07       		.uleb128 0x7
 1782 01ed 79010000 		.4byte	.LASF38
 1783 01f1 03       		.byte	0x3
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 77


 1784 01f2 ED       		.byte	0xed
 1785 01f3 6B000000 		.4byte	0x6b
 1786 01f7 05       		.byte	0x5
 1787 01f8 07       		.uleb128 0x7
 1788 01f9 B9010000 		.4byte	.LASF39
 1789 01fd 03       		.byte	0x3
 1790 01fe EE       		.byte	0xee
 1791 01ff 6B000000 		.4byte	0x6b
 1792 0203 06       		.byte	0x6
 1793 0204 07       		.uleb128 0x7
 1794 0205 04060000 		.4byte	.LASF40
 1795 0209 03       		.byte	0x3
 1796 020a EF       		.byte	0xef
 1797 020b 6B000000 		.4byte	0x6b
 1798 020f 07       		.byte	0x7
 1799 0210 07       		.uleb128 0x7
 1800 0211 DF030000 		.4byte	.LASF41
 1801 0215 03       		.byte	0x3
 1802 0216 F0       		.byte	0xf0
 1803 0217 6B000000 		.4byte	0x6b
 1804 021b 08       		.byte	0x8
 1805 021c 09       		.uleb128 0x9
 1806 021d 67617000 		.ascii	"gap\000"
 1807 0221 03       		.byte	0x3
 1808 0222 F1       		.byte	0xf1
 1809 0223 29020000 		.4byte	0x229
 1810 0227 09       		.byte	0x9
 1811 0228 00       		.byte	0
 1812 0229 0A       		.uleb128 0xa
 1813 022a 6B000000 		.4byte	0x6b
 1814 022e 39020000 		.4byte	0x239
 1815 0232 0B       		.uleb128 0xb
 1816 0233 CD000000 		.4byte	0xcd
 1817 0237 06       		.byte	0x6
 1818 0238 00       		.byte	0
 1819 0239 08       		.uleb128 0x8
 1820 023a 82030000 		.4byte	.LASF42
 1821 023e 03       		.byte	0x3
 1822 023f F2       		.byte	0xf2
 1823 0240 A8010000 		.4byte	0x1a8
 1824 0244 0C       		.uleb128 0xc
 1825 0245 90       		.byte	0x90
 1826 0246 03       		.byte	0x3
 1827 0247 0E01     		.2byte	0x10e
 1828 0249 5B020000 		.4byte	0x25b
 1829 024d 0D       		.uleb128 0xd
 1830 024e F7010000 		.4byte	.LASF43
 1831 0252 03       		.byte	0x3
 1832 0253 1001     		.2byte	0x110
 1833 0255 5B020000 		.4byte	0x25b
 1834 0259 00       		.byte	0
 1835 025a 00       		.byte	0
 1836 025b 0A       		.uleb128 0xa
 1837 025c 9D010000 		.4byte	0x19d
 1838 0260 6B020000 		.4byte	0x26b
 1839 0264 0B       		.uleb128 0xb
 1840 0265 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 78


 1841 0269 08       		.byte	0x8
 1842 026a 00       		.byte	0
 1843 026b 04       		.uleb128 0x4
 1844 026c 82000000 		.4byte	.LASF44
 1845 0270 03       		.byte	0x3
 1846 0271 1101     		.2byte	0x111
 1847 0273 44020000 		.4byte	0x244
 1848 0277 0C       		.uleb128 0xc
 1849 0278 90       		.byte	0x90
 1850 0279 03       		.byte	0x3
 1851 027a 1401     		.2byte	0x114
 1852 027c 8E020000 		.4byte	0x28e
 1853 0280 0D       		.uleb128 0xd
 1854 0281 28010000 		.4byte	.LASF45
 1855 0285 03       		.byte	0x3
 1856 0286 1601     		.2byte	0x116
 1857 0288 8E020000 		.4byte	0x28e
 1858 028c 00       		.byte	0
 1859 028d 00       		.byte	0
 1860 028e 0A       		.uleb128 0xa
 1861 028f 39020000 		.4byte	0x239
 1862 0293 9E020000 		.4byte	0x29e
 1863 0297 0B       		.uleb128 0xb
 1864 0298 CD000000 		.4byte	0xcd
 1865 029c 08       		.byte	0x8
 1866 029d 00       		.byte	0
 1867 029e 04       		.uleb128 0x4
 1868 029f 1F030000 		.4byte	.LASF46
 1869 02a3 03       		.byte	0x3
 1870 02a4 1701     		.2byte	0x117
 1871 02a6 77020000 		.4byte	0x277
 1872 02aa 0E       		.uleb128 0xe
 1873 02ab A8060000 		.4byte	.LASF48
 1874 02af 01       		.byte	0x1
 1875 02b0 D3       		.byte	0xd3
 1876 02b1 00000000 		.4byte	.LFB1
 1877 02b5 40010000 		.4byte	.LFE1-.LFB1
 1878 02b9 01       		.uleb128 0x1
 1879 02ba 9C       		.byte	0x9c
 1880 02bb 46040000 		.4byte	0x446
 1881 02bf 0F       		.uleb128 0xf
 1882 02c0 49040000 		.4byte	.LASF47
 1883 02c4 01       		.byte	0x1
 1884 02c5 FA       		.byte	0xfa
 1885 02c6 6B000000 		.4byte	0x6b
 1886 02ca 00000000 		.4byte	.LLST0
 1887 02ce 10       		.uleb128 0x10
 1888 02cf 6900     		.ascii	"i\000"
 1889 02d1 01       		.byte	0x1
 1890 02d2 FD       		.byte	0xfd
 1891 02d3 77000000 		.4byte	0x77
 1892 02d7 13000000 		.4byte	.LLST1
 1893 02db 11       		.uleb128 0x11
 1894 02dc 06000000 		.4byte	.LVL0
 1895 02e0 F70A0000 		.4byte	0xaf7
 1896 02e4 12       		.uleb128 0x12
 1897 02e5 3C000000 		.4byte	.LVL2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 79


 1898 02e9 020B0000 		.4byte	0xb02
 1899 02ed F7020000 		.4byte	0x2f7
 1900 02f1 13       		.uleb128 0x13
 1901 02f2 01       		.uleb128 0x1
 1902 02f3 50       		.byte	0x50
 1903 02f4 01       		.uleb128 0x1
 1904 02f5 30       		.byte	0x30
 1905 02f6 00       		.byte	0
 1906 02f7 12       		.uleb128 0x12
 1907 02f8 5C000000 		.4byte	.LVL3
 1908 02fc 020B0000 		.4byte	0xb02
 1909 0300 0B030000 		.4byte	0x30b
 1910 0304 13       		.uleb128 0x13
 1911 0305 01       		.uleb128 0x1
 1912 0306 50       		.byte	0x50
 1913 0307 02       		.uleb128 0x2
 1914 0308 77       		.byte	0x77
 1915 0309 00       		.sleb128 0
 1916 030a 00       		.byte	0
 1917 030b 12       		.uleb128 0x12
 1918 030c 62000000 		.4byte	.LVL4
 1919 0310 020B0000 		.4byte	0xb02
 1920 0314 1F030000 		.4byte	0x31f
 1921 0318 13       		.uleb128 0x13
 1922 0319 01       		.uleb128 0x1
 1923 031a 50       		.byte	0x50
 1924 031b 02       		.uleb128 0x2
 1925 031c 08       		.byte	0x8
 1926 031d 28       		.byte	0x28
 1927 031e 00       		.byte	0
 1928 031f 12       		.uleb128 0x12
 1929 0320 80000000 		.4byte	.LVL5
 1930 0324 020B0000 		.4byte	0xb02
 1931 0328 33030000 		.4byte	0x333
 1932 032c 13       		.uleb128 0x13
 1933 032d 01       		.uleb128 0x1
 1934 032e 50       		.byte	0x50
 1935 032f 02       		.uleb128 0x2
 1936 0330 76       		.byte	0x76
 1937 0331 00       		.sleb128 0
 1938 0332 00       		.byte	0
 1939 0333 12       		.uleb128 0x12
 1940 0334 A8000000 		.4byte	.LVL10
 1941 0338 0D0B0000 		.4byte	0xb0d
 1942 033c 47030000 		.4byte	0x347
 1943 0340 13       		.uleb128 0x13
 1944 0341 01       		.uleb128 0x1
 1945 0342 50       		.byte	0x50
 1946 0343 02       		.uleb128 0x2
 1947 0344 75       		.byte	0x75
 1948 0345 00       		.sleb128 0
 1949 0346 00       		.byte	0
 1950 0347 12       		.uleb128 0x12
 1951 0348 B0000000 		.4byte	.LVL11
 1952 034c 180B0000 		.4byte	0xb18
 1953 0350 5F030000 		.4byte	0x35f
 1954 0354 13       		.uleb128 0x13
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 80


 1955 0355 01       		.uleb128 0x1
 1956 0356 50       		.byte	0x50
 1957 0357 01       		.uleb128 0x1
 1958 0358 47       		.byte	0x47
 1959 0359 13       		.uleb128 0x13
 1960 035a 01       		.uleb128 0x1
 1961 035b 51       		.byte	0x51
 1962 035c 01       		.uleb128 0x1
 1963 035d 37       		.byte	0x37
 1964 035e 00       		.byte	0
 1965 035f 12       		.uleb128 0x12
 1966 0360 B8000000 		.4byte	.LVL12
 1967 0364 230B0000 		.4byte	0xb23
 1968 0368 72030000 		.4byte	0x372
 1969 036c 13       		.uleb128 0x13
 1970 036d 01       		.uleb128 0x1
 1971 036e 50       		.byte	0x50
 1972 036f 01       		.uleb128 0x1
 1973 0370 47       		.byte	0x47
 1974 0371 00       		.byte	0
 1975 0372 12       		.uleb128 0x12
 1976 0373 C0000000 		.4byte	.LVL13
 1977 0377 180B0000 		.4byte	0xb18
 1978 037b 8A030000 		.4byte	0x38a
 1979 037f 13       		.uleb128 0x13
 1980 0380 01       		.uleb128 0x1
 1981 0381 50       		.byte	0x50
 1982 0382 01       		.uleb128 0x1
 1983 0383 48       		.byte	0x48
 1984 0384 13       		.uleb128 0x13
 1985 0385 01       		.uleb128 0x1
 1986 0386 51       		.byte	0x51
 1987 0387 01       		.uleb128 0x1
 1988 0388 37       		.byte	0x37
 1989 0389 00       		.byte	0
 1990 038a 12       		.uleb128 0x12
 1991 038b C8000000 		.4byte	.LVL14
 1992 038f 230B0000 		.4byte	0xb23
 1993 0393 9D030000 		.4byte	0x39d
 1994 0397 13       		.uleb128 0x13
 1995 0398 01       		.uleb128 0x1
 1996 0399 50       		.byte	0x50
 1997 039a 01       		.uleb128 0x1
 1998 039b 48       		.byte	0x48
 1999 039c 00       		.byte	0
 2000 039d 12       		.uleb128 0x12
 2001 039e D0000000 		.4byte	.LVL15
 2002 03a2 180B0000 		.4byte	0xb18
 2003 03a6 B5030000 		.4byte	0x3b5
 2004 03aa 13       		.uleb128 0x13
 2005 03ab 01       		.uleb128 0x1
 2006 03ac 50       		.byte	0x50
 2007 03ad 01       		.uleb128 0x1
 2008 03ae 35       		.byte	0x35
 2009 03af 13       		.uleb128 0x13
 2010 03b0 01       		.uleb128 0x1
 2011 03b1 51       		.byte	0x51
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 81


 2012 03b2 01       		.uleb128 0x1
 2013 03b3 37       		.byte	0x37
 2014 03b4 00       		.byte	0
 2015 03b5 12       		.uleb128 0x12
 2016 03b6 D8000000 		.4byte	.LVL16
 2017 03ba 230B0000 		.4byte	0xb23
 2018 03be C8030000 		.4byte	0x3c8
 2019 03c2 13       		.uleb128 0x13
 2020 03c3 01       		.uleb128 0x1
 2021 03c4 50       		.byte	0x50
 2022 03c5 01       		.uleb128 0x1
 2023 03c6 35       		.byte	0x35
 2024 03c7 00       		.byte	0
 2025 03c8 12       		.uleb128 0x12
 2026 03c9 E0000000 		.4byte	.LVL17
 2027 03cd 180B0000 		.4byte	0xb18
 2028 03d1 E0030000 		.4byte	0x3e0
 2029 03d5 13       		.uleb128 0x13
 2030 03d6 01       		.uleb128 0x1
 2031 03d7 50       		.byte	0x50
 2032 03d8 01       		.uleb128 0x1
 2033 03d9 36       		.byte	0x36
 2034 03da 13       		.uleb128 0x13
 2035 03db 01       		.uleb128 0x1
 2036 03dc 51       		.byte	0x51
 2037 03dd 01       		.uleb128 0x1
 2038 03de 37       		.byte	0x37
 2039 03df 00       		.byte	0
 2040 03e0 12       		.uleb128 0x12
 2041 03e1 E8000000 		.4byte	.LVL18
 2042 03e5 230B0000 		.4byte	0xb23
 2043 03e9 F3030000 		.4byte	0x3f3
 2044 03ed 13       		.uleb128 0x13
 2045 03ee 01       		.uleb128 0x1
 2046 03ef 50       		.byte	0x50
 2047 03f0 01       		.uleb128 0x1
 2048 03f1 36       		.byte	0x36
 2049 03f2 00       		.byte	0
 2050 03f3 12       		.uleb128 0x12
 2051 03f4 F0000000 		.4byte	.LVL19
 2052 03f8 180B0000 		.4byte	0xb18
 2053 03fc 0B040000 		.4byte	0x40b
 2054 0400 13       		.uleb128 0x13
 2055 0401 01       		.uleb128 0x1
 2056 0402 50       		.byte	0x50
 2057 0403 01       		.uleb128 0x1
 2058 0404 46       		.byte	0x46
 2059 0405 13       		.uleb128 0x13
 2060 0406 01       		.uleb128 0x1
 2061 0407 51       		.byte	0x51
 2062 0408 01       		.uleb128 0x1
 2063 0409 30       		.byte	0x30
 2064 040a 00       		.byte	0
 2065 040b 12       		.uleb128 0x12
 2066 040c F8000000 		.4byte	.LVL20
 2067 0410 230B0000 		.4byte	0xb23
 2068 0414 1E040000 		.4byte	0x41e
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 82


 2069 0418 13       		.uleb128 0x13
 2070 0419 01       		.uleb128 0x1
 2071 041a 50       		.byte	0x50
 2072 041b 01       		.uleb128 0x1
 2073 041c 46       		.byte	0x46
 2074 041d 00       		.byte	0
 2075 041e 12       		.uleb128 0x12
 2076 041f 00010000 		.4byte	.LVL21
 2077 0423 180B0000 		.4byte	0xb18
 2078 0427 36040000 		.4byte	0x436
 2079 042b 13       		.uleb128 0x13
 2080 042c 01       		.uleb128 0x1
 2081 042d 50       		.byte	0x50
 2082 042e 01       		.uleb128 0x1
 2083 042f 3C       		.byte	0x3c
 2084 0430 13       		.uleb128 0x13
 2085 0431 01       		.uleb128 0x1
 2086 0432 51       		.byte	0x51
 2087 0433 01       		.uleb128 0x1
 2088 0434 37       		.byte	0x37
 2089 0435 00       		.byte	0
 2090 0436 14       		.uleb128 0x14
 2091 0437 08010000 		.4byte	.LVL22
 2092 043b 230B0000 		.4byte	0xb23
 2093 043f 13       		.uleb128 0x13
 2094 0440 01       		.uleb128 0x1
 2095 0441 50       		.byte	0x50
 2096 0442 01       		.uleb128 0x1
 2097 0443 3C       		.byte	0x3c
 2098 0444 00       		.byte	0
 2099 0445 00       		.byte	0
 2100 0446 15       		.uleb128 0x15
 2101 0447 E3010000 		.4byte	.LASF49
 2102 044b 01       		.byte	0x1
 2103 044c CC01     		.2byte	0x1cc
 2104 044e 00000000 		.4byte	.LFB2
 2105 0452 C8000000 		.4byte	.LFE2-.LFB2
 2106 0456 01       		.uleb128 0x1
 2107 0457 9C       		.byte	0x9c
 2108 0458 8C040000 		.4byte	0x48c
 2109 045c 16       		.uleb128 0x16
 2110 045d 04020000 		.4byte	.LASF50
 2111 0461 01       		.byte	0x1
 2112 0462 CC01     		.2byte	0x1cc
 2113 0464 6B000000 		.4byte	0x6b
 2114 0468 3D000000 		.4byte	.LLST2
 2115 046c 16       		.uleb128 0x16
 2116 046d 74010000 		.4byte	.LASF51
 2117 0471 01       		.byte	0x1
 2118 0472 CC01     		.2byte	0x1cc
 2119 0474 6B000000 		.4byte	0x6b
 2120 0478 5E000000 		.4byte	.LLST3
 2121 047c 14       		.uleb128 0x14
 2122 047d 86000000 		.4byte	.LVL26
 2123 0481 2E0B0000 		.4byte	0xb2e
 2124 0485 13       		.uleb128 0x13
 2125 0486 01       		.uleb128 0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 83


 2126 0487 50       		.byte	0x50
 2127 0488 01       		.uleb128 0x1
 2128 0489 31       		.byte	0x31
 2129 048a 00       		.byte	0
 2130 048b 00       		.byte	0
 2131 048c 0E       		.uleb128 0xe
 2132 048d F8050000 		.4byte	.LASF52
 2133 0491 01       		.byte	0x1
 2134 0492 BA       		.byte	0xba
 2135 0493 00000000 		.4byte	.LFB0
 2136 0497 24000000 		.4byte	.LFE0-.LFB0
 2137 049b 01       		.uleb128 0x1
 2138 049c 9C       		.byte	0x9c
 2139 049d DF040000 		.4byte	0x4df
 2140 04a1 17       		.uleb128 0x17
 2141 04a2 04020000 		.4byte	.LASF50
 2142 04a6 01       		.byte	0x1
 2143 04a7 BA       		.byte	0xba
 2144 04a8 6B000000 		.4byte	0x6b
 2145 04ac 7F000000 		.4byte	.LLST4
 2146 04b0 17       		.uleb128 0x17
 2147 04b1 74010000 		.4byte	.LASF51
 2148 04b5 01       		.byte	0x1
 2149 04b6 BA       		.byte	0xba
 2150 04b7 6B000000 		.4byte	0x6b
 2151 04bb A0000000 		.4byte	.LLST5
 2152 04bf 11       		.uleb128 0x11
 2153 04c0 10000000 		.4byte	.LVL28
 2154 04c4 AA020000 		.4byte	0x2aa
 2155 04c8 14       		.uleb128 0x14
 2156 04c9 1E000000 		.4byte	.LVL29
 2157 04cd 46040000 		.4byte	0x446
 2158 04d1 13       		.uleb128 0x13
 2159 04d2 01       		.uleb128 0x1
 2160 04d3 50       		.byte	0x50
 2161 04d4 02       		.uleb128 0x2
 2162 04d5 74       		.byte	0x74
 2163 04d6 00       		.sleb128 0
 2164 04d7 13       		.uleb128 0x13
 2165 04d8 01       		.uleb128 0x1
 2166 04d9 51       		.byte	0x51
 2167 04da 02       		.uleb128 0x2
 2168 04db 75       		.byte	0x75
 2169 04dc 00       		.sleb128 0
 2170 04dd 00       		.byte	0
 2171 04de 00       		.byte	0
 2172 04df 18       		.uleb128 0x18
 2173 04e0 5E010000 		.4byte	.LASF80
 2174 04e4 01       		.byte	0x1
 2175 04e5 9F02     		.2byte	0x29f
 2176 04e7 00000000 		.4byte	.LFB3
 2177 04eb 4C000000 		.4byte	.LFE3-.LFB3
 2178 04ef 01       		.uleb128 0x1
 2179 04f0 9C       		.byte	0x9c
 2180 04f1 19       		.uleb128 0x19
 2181 04f2 65050000 		.4byte	.LASF54
 2182 04f6 01       		.byte	0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 84


 2183 04f7 5103     		.2byte	0x351
 2184 04f9 6B000000 		.4byte	0x6b
 2185 04fd 00000000 		.4byte	.LFB5
 2186 0501 20000000 		.4byte	.LFE5-.LFB5
 2187 0505 01       		.uleb128 0x1
 2188 0506 9C       		.byte	0x9c
 2189 0507 1C050000 		.4byte	0x51c
 2190 050b 1A       		.uleb128 0x1a
 2191 050c A5040000 		.4byte	.LASF53
 2192 0510 01       		.byte	0x1
 2193 0511 5303     		.2byte	0x353
 2194 0513 6B000000 		.4byte	0x6b
 2195 0517 C1000000 		.4byte	.LLST6
 2196 051b 00       		.byte	0
 2197 051c 1B       		.uleb128 0x1b
 2198 051d CB020000 		.4byte	.LASF78
 2199 0521 01       		.byte	0x1
 2200 0522 6803     		.2byte	0x368
 2201 0524 6B000000 		.4byte	0x6b
 2202 0528 00000000 		.4byte	.LFB6
 2203 052c 0C000000 		.4byte	.LFE6-.LFB6
 2204 0530 01       		.uleb128 0x1
 2205 0531 9C       		.byte	0x9c
 2206 0532 19       		.uleb128 0x19
 2207 0533 88050000 		.4byte	.LASF55
 2208 0537 01       		.byte	0x1
 2209 0538 8203     		.2byte	0x382
 2210 053a 6B000000 		.4byte	0x6b
 2211 053e 00000000 		.4byte	.LFB7
 2212 0542 20000000 		.4byte	.LFE7-.LFB7
 2213 0546 01       		.uleb128 0x1
 2214 0547 9C       		.byte	0x9c
 2215 0548 5D050000 		.4byte	0x55d
 2216 054c 1C       		.uleb128 0x1c
 2217 054d 72657300 		.ascii	"res\000"
 2218 0551 01       		.byte	0x1
 2219 0552 8403     		.2byte	0x384
 2220 0554 6B000000 		.4byte	0x6b
 2221 0558 D4000000 		.4byte	.LLST7
 2222 055c 00       		.byte	0
 2223 055d 19       		.uleb128 0x19
 2224 055e D1040000 		.4byte	.LASF56
 2225 0562 01       		.byte	0x1
 2226 0563 9F03     		.2byte	0x39f
 2227 0565 6B000000 		.4byte	0x6b
 2228 0569 00000000 		.4byte	.LFB8
 2229 056d 0C000000 		.4byte	.LFE8-.LFB8
 2230 0571 01       		.uleb128 0x1
 2231 0572 9C       		.byte	0x9c
 2232 0573 88050000 		.4byte	0x588
 2233 0577 16       		.uleb128 0x16
 2234 0578 2F000000 		.4byte	.LASF57
 2235 057c 01       		.byte	0x1
 2236 057d 9F03     		.2byte	0x39f
 2237 057f 6B000000 		.4byte	0x6b
 2238 0583 0A010000 		.4byte	.LLST8
 2239 0587 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 85


 2240 0588 19       		.uleb128 0x19
 2241 0589 F6020000 		.4byte	.LASF58
 2242 058d 01       		.byte	0x1
 2243 058e BF03     		.2byte	0x3bf
 2244 0590 6B000000 		.4byte	0x6b
 2245 0594 00000000 		.4byte	.LFB9
 2246 0598 14000000 		.4byte	.LFE9-.LFB9
 2247 059c 01       		.uleb128 0x1
 2248 059d 9C       		.byte	0x9c
 2249 059e B3050000 		.4byte	0x5b3
 2250 05a2 16       		.uleb128 0x16
 2251 05a3 5A040000 		.4byte	.LASF59
 2252 05a7 01       		.byte	0x1
 2253 05a8 BF03     		.2byte	0x3bf
 2254 05aa 6B000000 		.4byte	0x6b
 2255 05ae 2B010000 		.4byte	.LLST9
 2256 05b2 00       		.byte	0
 2257 05b3 19       		.uleb128 0x19
 2258 05b4 08040000 		.4byte	.LASF60
 2259 05b8 01       		.byte	0x1
 2260 05b9 D603     		.2byte	0x3d6
 2261 05bb 77000000 		.4byte	0x77
 2262 05bf 00000000 		.4byte	.LFB10
 2263 05c3 28000000 		.4byte	.LFE10-.LFB10
 2264 05c7 01       		.uleb128 0x1
 2265 05c8 9C       		.byte	0x9c
 2266 05c9 EE050000 		.4byte	0x5ee
 2267 05cd 16       		.uleb128 0x16
 2268 05ce 5A040000 		.4byte	.LASF59
 2269 05d2 01       		.byte	0x1
 2270 05d3 D603     		.2byte	0x3d6
 2271 05d5 6B000000 		.4byte	0x6b
 2272 05d9 4C010000 		.4byte	.LLST10
 2273 05dd 1A       		.uleb128 0x1a
 2274 05de 3F000000 		.4byte	.LASF61
 2275 05e2 01       		.byte	0x1
 2276 05e3 D803     		.2byte	0x3d8
 2277 05e5 77000000 		.4byte	0x77
 2278 05e9 86010000 		.4byte	.LLST11
 2279 05ed 00       		.byte	0
 2280 05ee 15       		.uleb128 0x15
 2281 05ef 9A020000 		.4byte	.LASF62
 2282 05f3 01       		.byte	0x1
 2283 05f4 4A04     		.2byte	0x44a
 2284 05f6 00000000 		.4byte	.LFB11
 2285 05fa 68000000 		.4byte	.LFE11-.LFB11
 2286 05fe 01       		.uleb128 0x1
 2287 05ff 9C       		.byte	0x9c
 2288 0600 7E060000 		.4byte	0x67e
 2289 0604 16       		.uleb128 0x16
 2290 0605 5A040000 		.4byte	.LASF59
 2291 0609 01       		.byte	0x1
 2292 060a 4A04     		.2byte	0x44a
 2293 060c 6B000000 		.4byte	0x6b
 2294 0610 D4010000 		.4byte	.LLST12
 2295 0614 16       		.uleb128 0x16
 2296 0615 B8000000 		.4byte	.LASF63
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 86


 2297 0619 01       		.byte	0x1
 2298 061a 4A04     		.2byte	0x44a
 2299 061c 7E060000 		.4byte	0x67e
 2300 0620 F5010000 		.4byte	.LLST13
 2301 0624 1C       		.uleb128 0x1c
 2302 0625 73726300 		.ascii	"src\000"
 2303 0629 01       		.byte	0x1
 2304 062a 4D04     		.2byte	0x44d
 2305 062c 77000000 		.4byte	0x77
 2306 0630 2F020000 		.4byte	.LLST14
 2307 0634 1C       		.uleb128 0x1c
 2308 0635 64737400 		.ascii	"dst\000"
 2309 0639 01       		.byte	0x1
 2310 063a 4E04     		.2byte	0x44e
 2311 063c 77000000 		.4byte	0x77
 2312 0640 66020000 		.4byte	.LLST15
 2313 0644 12       		.uleb128 0x12
 2314 0645 36000000 		.4byte	.LVL55
 2315 0649 390B0000 		.4byte	0xb39
 2316 064d 5C060000 		.4byte	0x65c
 2317 0651 13       		.uleb128 0x13
 2318 0652 01       		.uleb128 0x1
 2319 0653 50       		.byte	0x50
 2320 0654 01       		.uleb128 0x1
 2321 0655 30       		.byte	0x30
 2322 0656 13       		.uleb128 0x13
 2323 0657 01       		.uleb128 0x1
 2324 0658 51       		.byte	0x51
 2325 0659 01       		.uleb128 0x1
 2326 065a 30       		.byte	0x30
 2327 065b 00       		.byte	0
 2328 065c 12       		.uleb128 0x12
 2329 065d 44000000 		.4byte	.LVL58
 2330 0661 440B0000 		.4byte	0xb44
 2331 0665 74060000 		.4byte	0x674
 2332 0669 13       		.uleb128 0x13
 2333 066a 01       		.uleb128 0x1
 2334 066b 50       		.byte	0x50
 2335 066c 01       		.uleb128 0x1
 2336 066d 30       		.byte	0x30
 2337 066e 13       		.uleb128 0x13
 2338 066f 01       		.uleb128 0x1
 2339 0670 51       		.byte	0x51
 2340 0671 01       		.uleb128 0x1
 2341 0672 30       		.byte	0x30
 2342 0673 00       		.byte	0
 2343 0674 11       		.uleb128 0x11
 2344 0675 54000000 		.4byte	.LVL59
 2345 0679 4F0B0000 		.4byte	0xb4f
 2346 067d 00       		.byte	0
 2347 067e 1D       		.uleb128 0x1d
 2348 067f 04       		.byte	0x4
 2349 0680 84060000 		.4byte	0x684
 2350 0684 1E       		.uleb128 0x1e
 2351 0685 6B000000 		.4byte	0x6b
 2352 0689 15       		.uleb128 0x15
 2353 068a 9B030000 		.4byte	.LASF64
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 87


 2354 068e 01       		.byte	0x1
 2355 068f C004     		.2byte	0x4c0
 2356 0691 00000000 		.4byte	.LFB12
 2357 0695 40000000 		.4byte	.LFE12-.LFB12
 2358 0699 01       		.uleb128 0x1
 2359 069a 9C       		.byte	0x9c
 2360 069b D0060000 		.4byte	0x6d0
 2361 069f 16       		.uleb128 0x16
 2362 06a0 5A040000 		.4byte	.LASF59
 2363 06a4 01       		.byte	0x1
 2364 06a5 C004     		.2byte	0x4c0
 2365 06a7 6B000000 		.4byte	0x6b
 2366 06ab 92020000 		.4byte	.LLST16
 2367 06af 1C       		.uleb128 0x1c
 2368 06b0 6900     		.ascii	"i\000"
 2369 06b2 01       		.byte	0x1
 2370 06b3 C204     		.2byte	0x4c2
 2371 06b5 6B000000 		.4byte	0x6b
 2372 06b9 B3020000 		.4byte	.LLST17
 2373 06bd 11       		.uleb128 0x11
 2374 06be 1E000000 		.4byte	.LVL62
 2375 06c2 5A0B0000 		.4byte	0xb5a
 2376 06c6 11       		.uleb128 0x11
 2377 06c7 26000000 		.4byte	.LVL63
 2378 06cb 650B0000 		.4byte	0xb65
 2379 06cf 00       		.byte	0
 2380 06d0 15       		.uleb128 0x15
 2381 06d1 97000000 		.4byte	.LASF65
 2382 06d5 01       		.byte	0x1
 2383 06d6 D902     		.2byte	0x2d9
 2384 06d8 00000000 		.4byte	.LFB4
 2385 06dc B4000000 		.4byte	.LFE4-.LFB4
 2386 06e0 01       		.uleb128 0x1
 2387 06e1 9C       		.byte	0x9c
 2388 06e2 25070000 		.4byte	0x725
 2389 06e6 1A       		.uleb128 0x1a
 2390 06e7 49040000 		.4byte	.LASF47
 2391 06eb 01       		.byte	0x1
 2392 06ec DB02     		.2byte	0x2db
 2393 06ee 6B000000 		.4byte	0x6b
 2394 06f2 D1020000 		.4byte	.LLST18
 2395 06f6 12       		.uleb128 0x12
 2396 06f7 08000000 		.4byte	.LVL67
 2397 06fb 89060000 		.4byte	0x689
 2398 06ff 09070000 		.4byte	0x709
 2399 0703 13       		.uleb128 0x13
 2400 0704 01       		.uleb128 0x1
 2401 0705 50       		.byte	0x50
 2402 0706 01       		.uleb128 0x1
 2403 0707 39       		.byte	0x39
 2404 0708 00       		.byte	0
 2405 0709 11       		.uleb128 0x11
 2406 070a 0C000000 		.4byte	.LVL68
 2407 070e F70A0000 		.4byte	0xaf7
 2408 0712 11       		.uleb128 0x11
 2409 0713 4E000000 		.4byte	.LVL69
 2410 0717 0D0B0000 		.4byte	0xb0d
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 88


 2411 071b 11       		.uleb128 0x11
 2412 071c 68000000 		.4byte	.LVL70
 2413 0720 700B0000 		.4byte	0xb70
 2414 0724 00       		.byte	0
 2415 0725 15       		.uleb128 0x15
 2416 0726 3D050000 		.4byte	.LASF66
 2417 072a 01       		.byte	0x1
 2418 072b 3E05     		.2byte	0x53e
 2419 072d 00000000 		.4byte	.LFB13
 2420 0731 04010000 		.4byte	.LFE13-.LFB13
 2421 0735 01       		.uleb128 0x1
 2422 0736 9C       		.byte	0x9c
 2423 0737 E7070000 		.4byte	0x7e7
 2424 073b 16       		.uleb128 0x16
 2425 073c 5A040000 		.4byte	.LASF59
 2426 0740 01       		.byte	0x1
 2427 0741 3E05     		.2byte	0x53e
 2428 0743 6B000000 		.4byte	0x6b
 2429 0747 E4020000 		.4byte	.LLST19
 2430 074b 16       		.uleb128 0x16
 2431 074c B8000000 		.4byte	.LASF63
 2432 0750 01       		.byte	0x1
 2433 0751 3E05     		.2byte	0x53e
 2434 0753 7E060000 		.4byte	0x67e
 2435 0757 10030000 		.4byte	.LLST20
 2436 075b 16       		.uleb128 0x16
 2437 075c FD010000 		.4byte	.LASF67
 2438 0760 01       		.byte	0x1
 2439 0761 3E05     		.2byte	0x53e
 2440 0763 77000000 		.4byte	0x77
 2441 0767 39030000 		.4byte	.LLST21
 2442 076b 12       		.uleb128 0x12
 2443 076c 68000000 		.4byte	.LVL76
 2444 0770 EE050000 		.4byte	0x5ee
 2445 0774 85070000 		.4byte	0x785
 2446 0778 13       		.uleb128 0x13
 2447 0779 01       		.uleb128 0x1
 2448 077a 50       		.byte	0x50
 2449 077b 02       		.uleb128 0x2
 2450 077c 74       		.byte	0x74
 2451 077d 00       		.sleb128 0
 2452 077e 13       		.uleb128 0x13
 2453 077f 01       		.uleb128 0x1
 2454 0780 51       		.byte	0x51
 2455 0781 02       		.uleb128 0x2
 2456 0782 76       		.byte	0x76
 2457 0783 00       		.sleb128 0
 2458 0784 00       		.byte	0
 2459 0785 11       		.uleb128 0x11
 2460 0786 82000000 		.4byte	.LVL77
 2461 078a 5A0B0000 		.4byte	0xb5a
 2462 078e 12       		.uleb128 0x12
 2463 078f 94000000 		.4byte	.LVL78
 2464 0793 7B0B0000 		.4byte	0xb7b
 2465 0797 AD070000 		.4byte	0x7ad
 2466 079b 13       		.uleb128 0x13
 2467 079c 01       		.uleb128 0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 89


 2468 079d 51       		.byte	0x51
 2469 079e 02       		.uleb128 0x2
 2470 079f 75       		.byte	0x75
 2471 07a0 00       		.sleb128 0
 2472 07a1 13       		.uleb128 0x13
 2473 07a2 01       		.uleb128 0x1
 2474 07a3 52       		.byte	0x52
 2475 07a4 02       		.uleb128 0x2
 2476 07a5 09       		.byte	0x9
 2477 07a6 FE       		.byte	0xfe
 2478 07a7 13       		.uleb128 0x13
 2479 07a8 01       		.uleb128 0x1
 2480 07a9 53       		.byte	0x53
 2481 07aa 01       		.uleb128 0x1
 2482 07ab 41       		.byte	0x41
 2483 07ac 00       		.byte	0
 2484 07ad 12       		.uleb128 0x12
 2485 07ae A8000000 		.4byte	.LVL80
 2486 07b2 860B0000 		.4byte	0xb86
 2487 07b6 CE070000 		.4byte	0x7ce
 2488 07ba 13       		.uleb128 0x13
 2489 07bb 01       		.uleb128 0x1
 2490 07bc 51       		.byte	0x51
 2491 07bd 02       		.uleb128 0x2
 2492 07be 76       		.byte	0x76
 2493 07bf 00       		.sleb128 0
 2494 07c0 13       		.uleb128 0x13
 2495 07c1 01       		.uleb128 0x1
 2496 07c2 52       		.byte	0x52
 2497 07c3 09       		.uleb128 0x9
 2498 07c4 74       		.byte	0x74
 2499 07c5 00       		.sleb128 0
 2500 07c6 34       		.byte	0x34
 2501 07c7 24       		.byte	0x24
 2502 07c8 75       		.byte	0x75
 2503 07c9 00       		.sleb128 0
 2504 07ca 22       		.byte	0x22
 2505 07cb 23       		.byte	0x23
 2506 07cc 08       		.uleb128 0x8
 2507 07cd 00       		.byte	0
 2508 07ce 11       		.uleb128 0x11
 2509 07cf B2000000 		.4byte	.LVL81
 2510 07d3 910B0000 		.4byte	0xb91
 2511 07d7 14       		.uleb128 0x14
 2512 07d8 BA000000 		.4byte	.LVL82
 2513 07dc 9C0B0000 		.4byte	0xb9c
 2514 07e0 13       		.uleb128 0x13
 2515 07e1 01       		.uleb128 0x1
 2516 07e2 51       		.byte	0x51
 2517 07e3 01       		.uleb128 0x1
 2518 07e4 31       		.byte	0x31
 2519 07e5 00       		.byte	0
 2520 07e6 00       		.byte	0
 2521 07e7 19       		.uleb128 0x19
 2522 07e8 34030000 		.4byte	.LASF68
 2523 07ec 01       		.byte	0x1
 2524 07ed 7506     		.2byte	0x675
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 90


 2525 07ef 77000000 		.4byte	0x77
 2526 07f3 00000000 		.4byte	.LFB14
 2527 07f7 B0000000 		.4byte	.LFE14-.LFB14
 2528 07fb 01       		.uleb128 0x1
 2529 07fc 9C       		.byte	0x9c
 2530 07fd D5080000 		.4byte	0x8d5
 2531 0801 16       		.uleb128 0x16
 2532 0802 5A040000 		.4byte	.LASF59
 2533 0806 01       		.byte	0x1
 2534 0807 7506     		.2byte	0x675
 2535 0809 6B000000 		.4byte	0x6b
 2536 080d 7B030000 		.4byte	.LLST22
 2537 0811 16       		.uleb128 0x16
 2538 0812 B8000000 		.4byte	.LASF63
 2539 0816 01       		.byte	0x1
 2540 0817 7506     		.2byte	0x675
 2541 0819 D5080000 		.4byte	0x8d5
 2542 081d B5030000 		.4byte	.LLST23
 2543 0821 16       		.uleb128 0x16
 2544 0822 FD010000 		.4byte	.LASF67
 2545 0826 01       		.byte	0x1
 2546 0827 7506     		.2byte	0x675
 2547 0829 77000000 		.4byte	0x77
 2548 082d EC030000 		.4byte	.LLST24
 2549 0831 12       		.uleb128 0x12
 2550 0832 1A000000 		.4byte	.LVL86
 2551 0836 B3050000 		.4byte	0x5b3
 2552 083a 45080000 		.4byte	0x845
 2553 083e 13       		.uleb128 0x13
 2554 083f 01       		.uleb128 0x1
 2555 0840 50       		.byte	0x50
 2556 0841 02       		.uleb128 0x2
 2557 0842 74       		.byte	0x74
 2558 0843 00       		.sleb128 0
 2559 0844 00       		.byte	0
 2560 0845 12       		.uleb128 0x12
 2561 0846 24000000 		.4byte	.LVL87
 2562 084a B3050000 		.4byte	0x5b3
 2563 084e 59080000 		.4byte	0x859
 2564 0852 13       		.uleb128 0x13
 2565 0853 01       		.uleb128 0x1
 2566 0854 50       		.byte	0x50
 2567 0855 02       		.uleb128 0x2
 2568 0856 74       		.byte	0x74
 2569 0857 00       		.sleb128 0
 2570 0858 00       		.byte	0
 2571 0859 12       		.uleb128 0x12
 2572 085a 36000000 		.4byte	.LVL89
 2573 085e EE050000 		.4byte	0x5ee
 2574 0862 73080000 		.4byte	0x873
 2575 0866 13       		.uleb128 0x13
 2576 0867 01       		.uleb128 0x1
 2577 0868 50       		.byte	0x50
 2578 0869 02       		.uleb128 0x2
 2579 086a 74       		.byte	0x74
 2580 086b 00       		.sleb128 0
 2581 086c 13       		.uleb128 0x13
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 91


 2582 086d 01       		.uleb128 0x1
 2583 086e 51       		.byte	0x51
 2584 086f 02       		.uleb128 0x2
 2585 0870 77       		.byte	0x77
 2586 0871 00       		.sleb128 0
 2587 0872 00       		.byte	0
 2588 0873 11       		.uleb128 0x11
 2589 0874 42000000 		.4byte	.LVL90
 2590 0878 5A0B0000 		.4byte	0xb5a
 2591 087c 12       		.uleb128 0x12
 2592 087d 54000000 		.4byte	.LVL91
 2593 0881 7B0B0000 		.4byte	0xb7b
 2594 0885 9B080000 		.4byte	0x89b
 2595 0889 13       		.uleb128 0x13
 2596 088a 01       		.uleb128 0x1
 2597 088b 51       		.byte	0x51
 2598 088c 02       		.uleb128 0x2
 2599 088d 75       		.byte	0x75
 2600 088e 00       		.sleb128 0
 2601 088f 13       		.uleb128 0x13
 2602 0890 01       		.uleb128 0x1
 2603 0891 52       		.byte	0x52
 2604 0892 02       		.uleb128 0x2
 2605 0893 09       		.byte	0x9
 2606 0894 FE       		.byte	0xfe
 2607 0895 13       		.uleb128 0x13
 2608 0896 01       		.uleb128 0x1
 2609 0897 53       		.byte	0x53
 2610 0898 01       		.uleb128 0x1
 2611 0899 42       		.byte	0x42
 2612 089a 00       		.byte	0
 2613 089b 12       		.uleb128 0x12
 2614 089c 68000000 		.4byte	.LVL92
 2615 08a0 860B0000 		.4byte	0xb86
 2616 08a4 BC080000 		.4byte	0x8bc
 2617 08a8 13       		.uleb128 0x13
 2618 08a9 01       		.uleb128 0x1
 2619 08aa 51       		.byte	0x51
 2620 08ab 09       		.uleb128 0x9
 2621 08ac 74       		.byte	0x74
 2622 08ad 00       		.sleb128 0
 2623 08ae 34       		.byte	0x34
 2624 08af 24       		.byte	0x24
 2625 08b0 76       		.byte	0x76
 2626 08b1 00       		.sleb128 0
 2627 08b2 22       		.byte	0x22
 2628 08b3 23       		.byte	0x23
 2629 08b4 08       		.uleb128 0x8
 2630 08b5 13       		.uleb128 0x13
 2631 08b6 01       		.uleb128 0x1
 2632 08b7 52       		.byte	0x52
 2633 08b8 02       		.uleb128 0x2
 2634 08b9 77       		.byte	0x77
 2635 08ba 00       		.sleb128 0
 2636 08bb 00       		.byte	0
 2637 08bc 11       		.uleb128 0x11
 2638 08bd 74000000 		.4byte	.LVL93
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 92


 2639 08c1 910B0000 		.4byte	0xb91
 2640 08c5 14       		.uleb128 0x14
 2641 08c6 7E000000 		.4byte	.LVL94
 2642 08ca 9C0B0000 		.4byte	0xb9c
 2643 08ce 13       		.uleb128 0x13
 2644 08cf 01       		.uleb128 0x1
 2645 08d0 51       		.byte	0x51
 2646 08d1 01       		.uleb128 0x1
 2647 08d2 31       		.byte	0x31
 2648 08d3 00       		.byte	0
 2649 08d4 00       		.byte	0
 2650 08d5 1D       		.uleb128 0x1d
 2651 08d6 04       		.byte	0x4
 2652 08d7 6B000000 		.4byte	0x6b
 2653 08db 15       		.uleb128 0x15
 2654 08dc 2B050000 		.4byte	.LASF69
 2655 08e0 01       		.byte	0x1
 2656 08e1 E408     		.2byte	0x8e4
 2657 08e3 00000000 		.4byte	.LFB15
 2658 08e7 2C000000 		.4byte	.LFE15-.LFB15
 2659 08eb 01       		.uleb128 0x1
 2660 08ec 9C       		.byte	0x9c
 2661 08ed 02090000 		.4byte	0x902
 2662 08f1 16       		.uleb128 0x16
 2663 08f2 5A040000 		.4byte	.LASF59
 2664 08f6 01       		.byte	0x1
 2665 08f7 E408     		.2byte	0x8e4
 2666 08f9 6B000000 		.4byte	0x6b
 2667 08fd 2E040000 		.4byte	.LLST25
 2668 0901 00       		.byte	0
 2669 0902 15       		.uleb128 0x15
 2670 0903 B3050000 		.4byte	.LASF70
 2671 0907 01       		.byte	0x1
 2672 0908 FC08     		.2byte	0x8fc
 2673 090a 00000000 		.4byte	.LFB16
 2674 090e 18000000 		.4byte	.LFE16-.LFB16
 2675 0912 01       		.uleb128 0x1
 2676 0913 9C       		.byte	0x9c
 2677 0914 29090000 		.4byte	0x929
 2678 0918 16       		.uleb128 0x16
 2679 0919 5A040000 		.4byte	.LASF59
 2680 091d 01       		.byte	0x1
 2681 091e FC08     		.2byte	0x8fc
 2682 0920 6B000000 		.4byte	0x6b
 2683 0924 4F040000 		.4byte	.LLST26
 2684 0928 00       		.byte	0
 2685 0929 15       		.uleb128 0x15
 2686 092a 63000000 		.4byte	.LASF71
 2687 092e 01       		.byte	0x1
 2688 092f 1A09     		.2byte	0x91a
 2689 0931 00000000 		.4byte	.LFB17
 2690 0935 0C000000 		.4byte	.LFE17-.LFB17
 2691 0939 01       		.uleb128 0x1
 2692 093a 9C       		.byte	0x9c
 2693 093b 4E090000 		.4byte	0x94e
 2694 093f 1F       		.uleb128 0x1f
 2695 0940 B3060000 		.4byte	.LASF72
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 93


 2696 0944 01       		.byte	0x1
 2697 0945 1A09     		.2byte	0x91a
 2698 0947 6B000000 		.4byte	0x6b
 2699 094b 01       		.uleb128 0x1
 2700 094c 50       		.byte	0x50
 2701 094d 00       		.byte	0
 2702 094e 19       		.uleb128 0x19
 2703 094f E2020000 		.4byte	.LASF73
 2704 0953 01       		.byte	0x1
 2705 0954 3309     		.2byte	0x933
 2706 0956 6B000000 		.4byte	0x6b
 2707 095a 00000000 		.4byte	.LFB18
 2708 095e 20000000 		.4byte	.LFE18-.LFB18
 2709 0962 01       		.uleb128 0x1
 2710 0963 9C       		.byte	0x9c
 2711 0964 88090000 		.4byte	0x988
 2712 0968 16       		.uleb128 0x16
 2713 0969 5A040000 		.4byte	.LASF59
 2714 096d 01       		.byte	0x1
 2715 096e 3309     		.2byte	0x933
 2716 0970 6B000000 		.4byte	0x6b
 2717 0974 70040000 		.4byte	.LLST27
 2718 0978 1C       		.uleb128 0x1c
 2719 0979 637200   		.ascii	"cr\000"
 2720 097c 01       		.byte	0x1
 2721 097d 3509     		.2byte	0x935
 2722 097f 6B000000 		.4byte	0x6b
 2723 0983 AA040000 		.4byte	.LLST28
 2724 0987 00       		.byte	0
 2725 0988 15       		.uleb128 0x15
 2726 0989 C6000000 		.4byte	.LASF74
 2727 098d 01       		.byte	0x1
 2728 098e 5C09     		.2byte	0x95c
 2729 0990 00000000 		.4byte	.LFB19
 2730 0994 20000000 		.4byte	.LFE19-.LFB19
 2731 0998 01       		.uleb128 0x1
 2732 0999 9C       		.byte	0x9c
 2733 099a AD090000 		.4byte	0x9ad
 2734 099e 1F       		.uleb128 0x1f
 2735 099f 46010000 		.4byte	.LASF75
 2736 09a3 01       		.byte	0x1
 2737 09a4 5C09     		.2byte	0x95c
 2738 09a6 6B000000 		.4byte	0x6b
 2739 09aa 01       		.uleb128 0x1
 2740 09ab 50       		.byte	0x50
 2741 09ac 00       		.byte	0
 2742 09ad 19       		.uleb128 0x19
 2743 09ae 44000000 		.4byte	.LASF76
 2744 09b2 01       		.byte	0x1
 2745 09b3 9509     		.2byte	0x995
 2746 09b5 6B000000 		.4byte	0x6b
 2747 09b9 00000000 		.4byte	.LFB20
 2748 09bd 18000000 		.4byte	.LFE20-.LFB20
 2749 09c1 01       		.uleb128 0x1
 2750 09c2 9C       		.byte	0x9c
 2751 09c3 D8090000 		.4byte	0x9d8
 2752 09c7 1A       		.uleb128 0x1a
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 94


 2753 09c8 B0020000 		.4byte	.LASF77
 2754 09cc 01       		.byte	0x1
 2755 09cd 9709     		.2byte	0x997
 2756 09cf 6B000000 		.4byte	0x6b
 2757 09d3 E0040000 		.4byte	.LLST29
 2758 09d7 00       		.byte	0
 2759 09d8 1B       		.uleb128 0x1b
 2760 09d9 F1060000 		.4byte	.LASF79
 2761 09dd 01       		.byte	0x1
 2762 09de AD09     		.2byte	0x9ad
 2763 09e0 6B000000 		.4byte	0x6b
 2764 09e4 00000000 		.4byte	.LFB21
 2765 09e8 10000000 		.4byte	.LFE21-.LFB21
 2766 09ec 01       		.uleb128 0x1
 2767 09ed 9C       		.byte	0x9c
 2768 09ee 18       		.uleb128 0x18
 2769 09ef 6F000000 		.4byte	.LASF81
 2770 09f3 01       		.byte	0x1
 2771 09f4 BB09     		.2byte	0x9bb
 2772 09f6 00000000 		.4byte	.LFB22
 2773 09fa 02000000 		.4byte	.LFE22-.LFB22
 2774 09fe 01       		.uleb128 0x1
 2775 09ff 9C       		.byte	0x9c
 2776 0a00 18       		.uleb128 0x18
 2777 0a01 B3040000 		.4byte	.LASF82
 2778 0a05 01       		.byte	0x1
 2779 0a06 D109     		.2byte	0x9d1
 2780 0a08 00000000 		.4byte	.LFB23
 2781 0a0c 02000000 		.4byte	.LFE23-.LFB23
 2782 0a10 01       		.uleb128 0x1
 2783 0a11 9C       		.byte	0x9c
 2784 0a12 20       		.uleb128 0x20
 2785 0a13 55000000 		.4byte	.LASF83
 2786 0a17 01       		.byte	0x1
 2787 0a18 28       		.byte	0x28
 2788 0a19 6B000000 		.4byte	0x6b
 2789 0a1d 05       		.uleb128 0x5
 2790 0a1e 03       		.byte	0x3
 2791 0a1f 00000000 		.4byte	USBFS_initVar
 2792 0a23 21       		.uleb128 0x21
 2793 0a24 09050000 		.4byte	.LASF84
 2794 0a28 03       		.byte	0x3
 2795 0a29 D202     		.2byte	0x2d2
 2796 0a2b B0000000 		.4byte	0xb0
 2797 0a2f 21       		.uleb128 0x21
 2798 0a30 BE010000 		.4byte	.LASF85
 2799 0a34 03       		.byte	0x3
 2800 0a35 D302     		.2byte	0x2d3
 2801 0a37 B0000000 		.4byte	0xb0
 2802 0a3b 21       		.uleb128 0x21
 2803 0a3c 60030000 		.4byte	.LASF86
 2804 0a40 03       		.byte	0x3
 2805 0a41 D402     		.2byte	0x2d4
 2806 0a43 B0000000 		.4byte	0xb0
 2807 0a47 21       		.uleb128 0x21
 2808 0a48 E5000000 		.4byte	.LASF87
 2809 0a4c 03       		.byte	0x3
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 95


 2810 0a4d D502     		.2byte	0x2d5
 2811 0a4f B0000000 		.4byte	0xb0
 2812 0a53 21       		.uleb128 0x21
 2813 0a54 E5050000 		.4byte	.LASF88
 2814 0a58 03       		.byte	0x3
 2815 0a59 D602     		.2byte	0x2d6
 2816 0a5b B0000000 		.4byte	0xb0
 2817 0a5f 22       		.uleb128 0x22
 2818 0a60 10000000 		.4byte	.LASF89
 2819 0a64 04       		.byte	0x4
 2820 0a65 72       		.byte	0x72
 2821 0a66 B0000000 		.4byte	0xb0
 2822 0a6a 0A       		.uleb128 0xa
 2823 0a6b B0000000 		.4byte	0xb0
 2824 0a6f 7A0A0000 		.4byte	0xa7a
 2825 0a73 0B       		.uleb128 0xb
 2826 0a74 CD000000 		.4byte	0xcd
 2827 0a78 00       		.byte	0
 2828 0a79 00       		.byte	0
 2829 0a7a 22       		.uleb128 0x22
 2830 0a7b CF060000 		.4byte	.LASF90
 2831 0a7f 04       		.byte	0x4
 2832 0a80 73       		.byte	0x73
 2833 0a81 850A0000 		.4byte	0xa85
 2834 0a85 05       		.uleb128 0x5
 2835 0a86 6A0A0000 		.4byte	0xa6a
 2836 0a8a 22       		.uleb128 0x22
 2837 0a8b B7020000 		.4byte	.LASF91
 2838 0a8f 04       		.byte	0x4
 2839 0a90 75       		.byte	0x75
 2840 0a91 B0000000 		.4byte	0xb0
 2841 0a95 0A       		.uleb128 0xa
 2842 0a96 A50A0000 		.4byte	0xaa5
 2843 0a9a A50A0000 		.4byte	0xaa5
 2844 0a9e 0B       		.uleb128 0xb
 2845 0a9f CD000000 		.4byte	0xcd
 2846 0aa3 08       		.byte	0x8
 2847 0aa4 00       		.byte	0
 2848 0aa5 05       		.uleb128 0x5
 2849 0aa6 49010000 		.4byte	0x149
 2850 0aaa 22       		.uleb128 0x22
 2851 0aab 16050000 		.4byte	.LASF92
 2852 0aaf 04       		.byte	0x4
 2853 0ab0 79       		.byte	0x79
 2854 0ab1 B50A0000 		.4byte	0xab5
 2855 0ab5 05       		.uleb128 0x5
 2856 0ab6 950A0000 		.4byte	0xa95
 2857 0aba 0A       		.uleb128 0xa
 2858 0abb 6B000000 		.4byte	0x6b
 2859 0abf CA0A0000 		.4byte	0xaca
 2860 0ac3 0B       		.uleb128 0xb
 2861 0ac4 CD000000 		.4byte	0xcd
 2862 0ac8 08       		.byte	0x8
 2863 0ac9 00       		.byte	0
 2864 0aca 20       		.uleb128 0x20
 2865 0acb A5050000 		.4byte	.LASF93
 2866 0acf 01       		.byte	0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 96


 2867 0ad0 3D       		.byte	0x3d
 2868 0ad1 BA0A0000 		.4byte	0xaba
 2869 0ad5 05       		.uleb128 0x5
 2870 0ad6 03       		.byte	0x3
 2871 0ad7 00000000 		.4byte	USBFS_DmaChan
 2872 0adb 20       		.uleb128 0x20
 2873 0adc 1F050000 		.4byte	.LASF94
 2874 0ae0 01       		.byte	0x1
 2875 0ae1 40       		.byte	0x40
 2876 0ae2 BA0A0000 		.4byte	0xaba
 2877 0ae6 05       		.uleb128 0x5
 2878 0ae7 03       		.byte	0x3
 2879 0ae8 00000000 		.4byte	USBFS_DmaTd
 2880 0aec 22       		.uleb128 0x22
 2881 0aed BA060000 		.4byte	.LASF95
 2882 0af1 04       		.byte	0x4
 2883 0af2 9B       		.byte	0x9b
 2884 0af3 B0000000 		.4byte	0xb0
 2885 0af7 23       		.uleb128 0x23
 2886 0af8 63040000 		.4byte	.LASF96
 2887 0afc 63040000 		.4byte	.LASF96
 2888 0b00 05       		.byte	0x5
 2889 0b01 7D       		.byte	0x7d
 2890 0b02 23       		.uleb128 0x23
 2891 0b03 B6030000 		.4byte	.LASF97
 2892 0b07 B6030000 		.4byte	.LASF97
 2893 0b0b 05       		.byte	0x5
 2894 0b0c 77       		.byte	0x77
 2895 0b0d 23       		.uleb128 0x23
 2896 0b0e A2000000 		.4byte	.LASF98
 2897 0b12 A2000000 		.4byte	.LASF98
 2898 0b16 05       		.byte	0x5
 2899 0b17 7E       		.byte	0x7e
 2900 0b18 23       		.uleb128 0x23
 2901 0b19 D2010000 		.4byte	.LASF99
 2902 0b1d D2010000 		.4byte	.LASF99
 2903 0b21 05       		.byte	0x5
 2904 0b22 8B       		.byte	0x8b
 2905 0b23 23       		.uleb128 0x23
 2906 0b24 79050000 		.4byte	.LASF100
 2907 0b28 79050000 		.4byte	.LASF100
 2908 0b2c 05       		.byte	0x5
 2909 0b2d 88       		.byte	0x88
 2910 0b2e 23       		.uleb128 0x23
 2911 0b2f 57050000 		.4byte	.LASF101
 2912 0b33 57050000 		.4byte	.LASF101
 2913 0b37 05       		.byte	0x5
 2914 0b38 79       		.byte	0x79
 2915 0b39 23       		.uleb128 0x23
 2916 0b3a C6050000 		.4byte	.LASF102
 2917 0b3e C6050000 		.4byte	.LASF102
 2918 0b42 06       		.byte	0x6
 2919 0b43 1E       		.byte	0x1e
 2920 0b44 23       		.uleb128 0x23
 2921 0b45 2E010000 		.4byte	.LASF103
 2922 0b49 2E010000 		.4byte	.LASF103
 2923 0b4d 07       		.byte	0x7
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 97


 2924 0b4e 1E       		.byte	0x1e
 2925 0b4f 23       		.uleb128 0x23
 2926 0b50 00000000 		.4byte	.LASF104
 2927 0b54 00000000 		.4byte	.LASF104
 2928 0b58 08       		.byte	0x8
 2929 0b59 38       		.byte	0x38
 2930 0b5a 23       		.uleb128 0x23
 2931 0b5b E9030000 		.4byte	.LASF105
 2932 0b5f E9030000 		.4byte	.LASF105
 2933 0b63 08       		.byte	0x8
 2934 0b64 2A       		.byte	0x2a
 2935 0b65 23       		.uleb128 0x23
 2936 0b66 19040000 		.4byte	.LASF106
 2937 0b6a 19040000 		.4byte	.LASF106
 2938 0b6e 08       		.byte	0x8
 2939 0b6f 39       		.byte	0x39
 2940 0b70 23       		.uleb128 0x23
 2941 0b71 07030000 		.4byte	.LASF107
 2942 0b75 07030000 		.4byte	.LASF107
 2943 0b79 09       		.byte	0x9
 2944 0b7a 2B       		.byte	0x2b
 2945 0b7b 23       		.uleb128 0x23
 2946 0b7c 00010000 		.4byte	.LASF108
 2947 0b80 00010000 		.4byte	.LASF108
 2948 0b84 08       		.byte	0x8
 2949 0b85 3B       		.byte	0x3b
 2950 0b86 23       		.uleb128 0x23
 2951 0b87 CD030000 		.4byte	.LASF109
 2952 0b8b CD030000 		.4byte	.LASF109
 2953 0b8f 08       		.byte	0x8
 2954 0b90 3F       		.byte	0x3f
 2955 0b91 23       		.uleb128 0x23
 2956 0b92 9E010000 		.4byte	.LASF110
 2957 0b96 9E010000 		.4byte	.LASF110
 2958 0b9a 08       		.byte	0x8
 2959 0b9b 2F       		.byte	0x2f
 2960 0b9c 23       		.uleb128 0x23
 2961 0b9d 0C060000 		.4byte	.LASF111
 2962 0ba1 0C060000 		.4byte	.LASF111
 2963 0ba5 08       		.byte	0x8
 2964 0ba6 29       		.byte	0x29
 2965 0ba7 00       		.byte	0
 2966              		.section	.debug_abbrev,"",%progbits
 2967              	.Ldebug_abbrev0:
 2968 0000 01       		.uleb128 0x1
 2969 0001 11       		.uleb128 0x11
 2970 0002 01       		.byte	0x1
 2971 0003 25       		.uleb128 0x25
 2972 0004 0E       		.uleb128 0xe
 2973 0005 13       		.uleb128 0x13
 2974 0006 0B       		.uleb128 0xb
 2975 0007 03       		.uleb128 0x3
 2976 0008 0E       		.uleb128 0xe
 2977 0009 1B       		.uleb128 0x1b
 2978 000a 0E       		.uleb128 0xe
 2979 000b 55       		.uleb128 0x55
 2980 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 98


 2981 000d 11       		.uleb128 0x11
 2982 000e 01       		.uleb128 0x1
 2983 000f 10       		.uleb128 0x10
 2984 0010 17       		.uleb128 0x17
 2985 0011 00       		.byte	0
 2986 0012 00       		.byte	0
 2987 0013 02       		.uleb128 0x2
 2988 0014 24       		.uleb128 0x24
 2989 0015 00       		.byte	0
 2990 0016 0B       		.uleb128 0xb
 2991 0017 0B       		.uleb128 0xb
 2992 0018 3E       		.uleb128 0x3e
 2993 0019 0B       		.uleb128 0xb
 2994 001a 03       		.uleb128 0x3
 2995 001b 0E       		.uleb128 0xe
 2996 001c 00       		.byte	0
 2997 001d 00       		.byte	0
 2998 001e 03       		.uleb128 0x3
 2999 001f 24       		.uleb128 0x24
 3000 0020 00       		.byte	0
 3001 0021 0B       		.uleb128 0xb
 3002 0022 0B       		.uleb128 0xb
 3003 0023 3E       		.uleb128 0x3e
 3004 0024 0B       		.uleb128 0xb
 3005 0025 03       		.uleb128 0x3
 3006 0026 08       		.uleb128 0x8
 3007 0027 00       		.byte	0
 3008 0028 00       		.byte	0
 3009 0029 04       		.uleb128 0x4
 3010 002a 16       		.uleb128 0x16
 3011 002b 00       		.byte	0
 3012 002c 03       		.uleb128 0x3
 3013 002d 0E       		.uleb128 0xe
 3014 002e 3A       		.uleb128 0x3a
 3015 002f 0B       		.uleb128 0xb
 3016 0030 3B       		.uleb128 0x3b
 3017 0031 05       		.uleb128 0x5
 3018 0032 49       		.uleb128 0x49
 3019 0033 13       		.uleb128 0x13
 3020 0034 00       		.byte	0
 3021 0035 00       		.byte	0
 3022 0036 05       		.uleb128 0x5
 3023 0037 35       		.uleb128 0x35
 3024 0038 00       		.byte	0
 3025 0039 49       		.uleb128 0x49
 3026 003a 13       		.uleb128 0x13
 3027 003b 00       		.byte	0
 3028 003c 00       		.byte	0
 3029 003d 06       		.uleb128 0x6
 3030 003e 13       		.uleb128 0x13
 3031 003f 01       		.byte	0x1
 3032 0040 0B       		.uleb128 0xb
 3033 0041 0B       		.uleb128 0xb
 3034 0042 3A       		.uleb128 0x3a
 3035 0043 0B       		.uleb128 0xb
 3036 0044 3B       		.uleb128 0x3b
 3037 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 99


 3038 0046 01       		.uleb128 0x1
 3039 0047 13       		.uleb128 0x13
 3040 0048 00       		.byte	0
 3041 0049 00       		.byte	0
 3042 004a 07       		.uleb128 0x7
 3043 004b 0D       		.uleb128 0xd
 3044 004c 00       		.byte	0
 3045 004d 03       		.uleb128 0x3
 3046 004e 0E       		.uleb128 0xe
 3047 004f 3A       		.uleb128 0x3a
 3048 0050 0B       		.uleb128 0xb
 3049 0051 3B       		.uleb128 0x3b
 3050 0052 0B       		.uleb128 0xb
 3051 0053 49       		.uleb128 0x49
 3052 0054 13       		.uleb128 0x13
 3053 0055 38       		.uleb128 0x38
 3054 0056 0B       		.uleb128 0xb
 3055 0057 00       		.byte	0
 3056 0058 00       		.byte	0
 3057 0059 08       		.uleb128 0x8
 3058 005a 16       		.uleb128 0x16
 3059 005b 00       		.byte	0
 3060 005c 03       		.uleb128 0x3
 3061 005d 0E       		.uleb128 0xe
 3062 005e 3A       		.uleb128 0x3a
 3063 005f 0B       		.uleb128 0xb
 3064 0060 3B       		.uleb128 0x3b
 3065 0061 0B       		.uleb128 0xb
 3066 0062 49       		.uleb128 0x49
 3067 0063 13       		.uleb128 0x13
 3068 0064 00       		.byte	0
 3069 0065 00       		.byte	0
 3070 0066 09       		.uleb128 0x9
 3071 0067 0D       		.uleb128 0xd
 3072 0068 00       		.byte	0
 3073 0069 03       		.uleb128 0x3
 3074 006a 08       		.uleb128 0x8
 3075 006b 3A       		.uleb128 0x3a
 3076 006c 0B       		.uleb128 0xb
 3077 006d 3B       		.uleb128 0x3b
 3078 006e 0B       		.uleb128 0xb
 3079 006f 49       		.uleb128 0x49
 3080 0070 13       		.uleb128 0x13
 3081 0071 38       		.uleb128 0x38
 3082 0072 0B       		.uleb128 0xb
 3083 0073 00       		.byte	0
 3084 0074 00       		.byte	0
 3085 0075 0A       		.uleb128 0xa
 3086 0076 01       		.uleb128 0x1
 3087 0077 01       		.byte	0x1
 3088 0078 49       		.uleb128 0x49
 3089 0079 13       		.uleb128 0x13
 3090 007a 01       		.uleb128 0x1
 3091 007b 13       		.uleb128 0x13
 3092 007c 00       		.byte	0
 3093 007d 00       		.byte	0
 3094 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 100


 3095 007f 21       		.uleb128 0x21
 3096 0080 00       		.byte	0
 3097 0081 49       		.uleb128 0x49
 3098 0082 13       		.uleb128 0x13
 3099 0083 2F       		.uleb128 0x2f
 3100 0084 0B       		.uleb128 0xb
 3101 0085 00       		.byte	0
 3102 0086 00       		.byte	0
 3103 0087 0C       		.uleb128 0xc
 3104 0088 13       		.uleb128 0x13
 3105 0089 01       		.byte	0x1
 3106 008a 0B       		.uleb128 0xb
 3107 008b 0B       		.uleb128 0xb
 3108 008c 3A       		.uleb128 0x3a
 3109 008d 0B       		.uleb128 0xb
 3110 008e 3B       		.uleb128 0x3b
 3111 008f 05       		.uleb128 0x5
 3112 0090 01       		.uleb128 0x1
 3113 0091 13       		.uleb128 0x13
 3114 0092 00       		.byte	0
 3115 0093 00       		.byte	0
 3116 0094 0D       		.uleb128 0xd
 3117 0095 0D       		.uleb128 0xd
 3118 0096 00       		.byte	0
 3119 0097 03       		.uleb128 0x3
 3120 0098 0E       		.uleb128 0xe
 3121 0099 3A       		.uleb128 0x3a
 3122 009a 0B       		.uleb128 0xb
 3123 009b 3B       		.uleb128 0x3b
 3124 009c 05       		.uleb128 0x5
 3125 009d 49       		.uleb128 0x49
 3126 009e 13       		.uleb128 0x13
 3127 009f 38       		.uleb128 0x38
 3128 00a0 0B       		.uleb128 0xb
 3129 00a1 00       		.byte	0
 3130 00a2 00       		.byte	0
 3131 00a3 0E       		.uleb128 0xe
 3132 00a4 2E       		.uleb128 0x2e
 3133 00a5 01       		.byte	0x1
 3134 00a6 3F       		.uleb128 0x3f
 3135 00a7 19       		.uleb128 0x19
 3136 00a8 03       		.uleb128 0x3
 3137 00a9 0E       		.uleb128 0xe
 3138 00aa 3A       		.uleb128 0x3a
 3139 00ab 0B       		.uleb128 0xb
 3140 00ac 3B       		.uleb128 0x3b
 3141 00ad 0B       		.uleb128 0xb
 3142 00ae 27       		.uleb128 0x27
 3143 00af 19       		.uleb128 0x19
 3144 00b0 11       		.uleb128 0x11
 3145 00b1 01       		.uleb128 0x1
 3146 00b2 12       		.uleb128 0x12
 3147 00b3 06       		.uleb128 0x6
 3148 00b4 40       		.uleb128 0x40
 3149 00b5 18       		.uleb128 0x18
 3150 00b6 9742     		.uleb128 0x2117
 3151 00b8 19       		.uleb128 0x19
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 101


 3152 00b9 01       		.uleb128 0x1
 3153 00ba 13       		.uleb128 0x13
 3154 00bb 00       		.byte	0
 3155 00bc 00       		.byte	0
 3156 00bd 0F       		.uleb128 0xf
 3157 00be 34       		.uleb128 0x34
 3158 00bf 00       		.byte	0
 3159 00c0 03       		.uleb128 0x3
 3160 00c1 0E       		.uleb128 0xe
 3161 00c2 3A       		.uleb128 0x3a
 3162 00c3 0B       		.uleb128 0xb
 3163 00c4 3B       		.uleb128 0x3b
 3164 00c5 0B       		.uleb128 0xb
 3165 00c6 49       		.uleb128 0x49
 3166 00c7 13       		.uleb128 0x13
 3167 00c8 02       		.uleb128 0x2
 3168 00c9 17       		.uleb128 0x17
 3169 00ca 00       		.byte	0
 3170 00cb 00       		.byte	0
 3171 00cc 10       		.uleb128 0x10
 3172 00cd 34       		.uleb128 0x34
 3173 00ce 00       		.byte	0
 3174 00cf 03       		.uleb128 0x3
 3175 00d0 08       		.uleb128 0x8
 3176 00d1 3A       		.uleb128 0x3a
 3177 00d2 0B       		.uleb128 0xb
 3178 00d3 3B       		.uleb128 0x3b
 3179 00d4 0B       		.uleb128 0xb
 3180 00d5 49       		.uleb128 0x49
 3181 00d6 13       		.uleb128 0x13
 3182 00d7 02       		.uleb128 0x2
 3183 00d8 17       		.uleb128 0x17
 3184 00d9 00       		.byte	0
 3185 00da 00       		.byte	0
 3186 00db 11       		.uleb128 0x11
 3187 00dc 898201   		.uleb128 0x4109
 3188 00df 00       		.byte	0
 3189 00e0 11       		.uleb128 0x11
 3190 00e1 01       		.uleb128 0x1
 3191 00e2 31       		.uleb128 0x31
 3192 00e3 13       		.uleb128 0x13
 3193 00e4 00       		.byte	0
 3194 00e5 00       		.byte	0
 3195 00e6 12       		.uleb128 0x12
 3196 00e7 898201   		.uleb128 0x4109
 3197 00ea 01       		.byte	0x1
 3198 00eb 11       		.uleb128 0x11
 3199 00ec 01       		.uleb128 0x1
 3200 00ed 31       		.uleb128 0x31
 3201 00ee 13       		.uleb128 0x13
 3202 00ef 01       		.uleb128 0x1
 3203 00f0 13       		.uleb128 0x13
 3204 00f1 00       		.byte	0
 3205 00f2 00       		.byte	0
 3206 00f3 13       		.uleb128 0x13
 3207 00f4 8A8201   		.uleb128 0x410a
 3208 00f7 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 102


 3209 00f8 02       		.uleb128 0x2
 3210 00f9 18       		.uleb128 0x18
 3211 00fa 9142     		.uleb128 0x2111
 3212 00fc 18       		.uleb128 0x18
 3213 00fd 00       		.byte	0
 3214 00fe 00       		.byte	0
 3215 00ff 14       		.uleb128 0x14
 3216 0100 898201   		.uleb128 0x4109
 3217 0103 01       		.byte	0x1
 3218 0104 11       		.uleb128 0x11
 3219 0105 01       		.uleb128 0x1
 3220 0106 31       		.uleb128 0x31
 3221 0107 13       		.uleb128 0x13
 3222 0108 00       		.byte	0
 3223 0109 00       		.byte	0
 3224 010a 15       		.uleb128 0x15
 3225 010b 2E       		.uleb128 0x2e
 3226 010c 01       		.byte	0x1
 3227 010d 3F       		.uleb128 0x3f
 3228 010e 19       		.uleb128 0x19
 3229 010f 03       		.uleb128 0x3
 3230 0110 0E       		.uleb128 0xe
 3231 0111 3A       		.uleb128 0x3a
 3232 0112 0B       		.uleb128 0xb
 3233 0113 3B       		.uleb128 0x3b
 3234 0114 05       		.uleb128 0x5
 3235 0115 27       		.uleb128 0x27
 3236 0116 19       		.uleb128 0x19
 3237 0117 11       		.uleb128 0x11
 3238 0118 01       		.uleb128 0x1
 3239 0119 12       		.uleb128 0x12
 3240 011a 06       		.uleb128 0x6
 3241 011b 40       		.uleb128 0x40
 3242 011c 18       		.uleb128 0x18
 3243 011d 9742     		.uleb128 0x2117
 3244 011f 19       		.uleb128 0x19
 3245 0120 01       		.uleb128 0x1
 3246 0121 13       		.uleb128 0x13
 3247 0122 00       		.byte	0
 3248 0123 00       		.byte	0
 3249 0124 16       		.uleb128 0x16
 3250 0125 05       		.uleb128 0x5
 3251 0126 00       		.byte	0
 3252 0127 03       		.uleb128 0x3
 3253 0128 0E       		.uleb128 0xe
 3254 0129 3A       		.uleb128 0x3a
 3255 012a 0B       		.uleb128 0xb
 3256 012b 3B       		.uleb128 0x3b
 3257 012c 05       		.uleb128 0x5
 3258 012d 49       		.uleb128 0x49
 3259 012e 13       		.uleb128 0x13
 3260 012f 02       		.uleb128 0x2
 3261 0130 17       		.uleb128 0x17
 3262 0131 00       		.byte	0
 3263 0132 00       		.byte	0
 3264 0133 17       		.uleb128 0x17
 3265 0134 05       		.uleb128 0x5
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 103


 3266 0135 00       		.byte	0
 3267 0136 03       		.uleb128 0x3
 3268 0137 0E       		.uleb128 0xe
 3269 0138 3A       		.uleb128 0x3a
 3270 0139 0B       		.uleb128 0xb
 3271 013a 3B       		.uleb128 0x3b
 3272 013b 0B       		.uleb128 0xb
 3273 013c 49       		.uleb128 0x49
 3274 013d 13       		.uleb128 0x13
 3275 013e 02       		.uleb128 0x2
 3276 013f 17       		.uleb128 0x17
 3277 0140 00       		.byte	0
 3278 0141 00       		.byte	0
 3279 0142 18       		.uleb128 0x18
 3280 0143 2E       		.uleb128 0x2e
 3281 0144 00       		.byte	0
 3282 0145 3F       		.uleb128 0x3f
 3283 0146 19       		.uleb128 0x19
 3284 0147 03       		.uleb128 0x3
 3285 0148 0E       		.uleb128 0xe
 3286 0149 3A       		.uleb128 0x3a
 3287 014a 0B       		.uleb128 0xb
 3288 014b 3B       		.uleb128 0x3b
 3289 014c 05       		.uleb128 0x5
 3290 014d 27       		.uleb128 0x27
 3291 014e 19       		.uleb128 0x19
 3292 014f 11       		.uleb128 0x11
 3293 0150 01       		.uleb128 0x1
 3294 0151 12       		.uleb128 0x12
 3295 0152 06       		.uleb128 0x6
 3296 0153 40       		.uleb128 0x40
 3297 0154 18       		.uleb128 0x18
 3298 0155 9742     		.uleb128 0x2117
 3299 0157 19       		.uleb128 0x19
 3300 0158 00       		.byte	0
 3301 0159 00       		.byte	0
 3302 015a 19       		.uleb128 0x19
 3303 015b 2E       		.uleb128 0x2e
 3304 015c 01       		.byte	0x1
 3305 015d 3F       		.uleb128 0x3f
 3306 015e 19       		.uleb128 0x19
 3307 015f 03       		.uleb128 0x3
 3308 0160 0E       		.uleb128 0xe
 3309 0161 3A       		.uleb128 0x3a
 3310 0162 0B       		.uleb128 0xb
 3311 0163 3B       		.uleb128 0x3b
 3312 0164 05       		.uleb128 0x5
 3313 0165 27       		.uleb128 0x27
 3314 0166 19       		.uleb128 0x19
 3315 0167 49       		.uleb128 0x49
 3316 0168 13       		.uleb128 0x13
 3317 0169 11       		.uleb128 0x11
 3318 016a 01       		.uleb128 0x1
 3319 016b 12       		.uleb128 0x12
 3320 016c 06       		.uleb128 0x6
 3321 016d 40       		.uleb128 0x40
 3322 016e 18       		.uleb128 0x18
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 104


 3323 016f 9742     		.uleb128 0x2117
 3324 0171 19       		.uleb128 0x19
 3325 0172 01       		.uleb128 0x1
 3326 0173 13       		.uleb128 0x13
 3327 0174 00       		.byte	0
 3328 0175 00       		.byte	0
 3329 0176 1A       		.uleb128 0x1a
 3330 0177 34       		.uleb128 0x34
 3331 0178 00       		.byte	0
 3332 0179 03       		.uleb128 0x3
 3333 017a 0E       		.uleb128 0xe
 3334 017b 3A       		.uleb128 0x3a
 3335 017c 0B       		.uleb128 0xb
 3336 017d 3B       		.uleb128 0x3b
 3337 017e 05       		.uleb128 0x5
 3338 017f 49       		.uleb128 0x49
 3339 0180 13       		.uleb128 0x13
 3340 0181 02       		.uleb128 0x2
 3341 0182 17       		.uleb128 0x17
 3342 0183 00       		.byte	0
 3343 0184 00       		.byte	0
 3344 0185 1B       		.uleb128 0x1b
 3345 0186 2E       		.uleb128 0x2e
 3346 0187 00       		.byte	0
 3347 0188 3F       		.uleb128 0x3f
 3348 0189 19       		.uleb128 0x19
 3349 018a 03       		.uleb128 0x3
 3350 018b 0E       		.uleb128 0xe
 3351 018c 3A       		.uleb128 0x3a
 3352 018d 0B       		.uleb128 0xb
 3353 018e 3B       		.uleb128 0x3b
 3354 018f 05       		.uleb128 0x5
 3355 0190 27       		.uleb128 0x27
 3356 0191 19       		.uleb128 0x19
 3357 0192 49       		.uleb128 0x49
 3358 0193 13       		.uleb128 0x13
 3359 0194 11       		.uleb128 0x11
 3360 0195 01       		.uleb128 0x1
 3361 0196 12       		.uleb128 0x12
 3362 0197 06       		.uleb128 0x6
 3363 0198 40       		.uleb128 0x40
 3364 0199 18       		.uleb128 0x18
 3365 019a 9742     		.uleb128 0x2117
 3366 019c 19       		.uleb128 0x19
 3367 019d 00       		.byte	0
 3368 019e 00       		.byte	0
 3369 019f 1C       		.uleb128 0x1c
 3370 01a0 34       		.uleb128 0x34
 3371 01a1 00       		.byte	0
 3372 01a2 03       		.uleb128 0x3
 3373 01a3 08       		.uleb128 0x8
 3374 01a4 3A       		.uleb128 0x3a
 3375 01a5 0B       		.uleb128 0xb
 3376 01a6 3B       		.uleb128 0x3b
 3377 01a7 05       		.uleb128 0x5
 3378 01a8 49       		.uleb128 0x49
 3379 01a9 13       		.uleb128 0x13
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 105


 3380 01aa 02       		.uleb128 0x2
 3381 01ab 17       		.uleb128 0x17
 3382 01ac 00       		.byte	0
 3383 01ad 00       		.byte	0
 3384 01ae 1D       		.uleb128 0x1d
 3385 01af 0F       		.uleb128 0xf
 3386 01b0 00       		.byte	0
 3387 01b1 0B       		.uleb128 0xb
 3388 01b2 0B       		.uleb128 0xb
 3389 01b3 49       		.uleb128 0x49
 3390 01b4 13       		.uleb128 0x13
 3391 01b5 00       		.byte	0
 3392 01b6 00       		.byte	0
 3393 01b7 1E       		.uleb128 0x1e
 3394 01b8 26       		.uleb128 0x26
 3395 01b9 00       		.byte	0
 3396 01ba 49       		.uleb128 0x49
 3397 01bb 13       		.uleb128 0x13
 3398 01bc 00       		.byte	0
 3399 01bd 00       		.byte	0
 3400 01be 1F       		.uleb128 0x1f
 3401 01bf 05       		.uleb128 0x5
 3402 01c0 00       		.byte	0
 3403 01c1 03       		.uleb128 0x3
 3404 01c2 0E       		.uleb128 0xe
 3405 01c3 3A       		.uleb128 0x3a
 3406 01c4 0B       		.uleb128 0xb
 3407 01c5 3B       		.uleb128 0x3b
 3408 01c6 05       		.uleb128 0x5
 3409 01c7 49       		.uleb128 0x49
 3410 01c8 13       		.uleb128 0x13
 3411 01c9 02       		.uleb128 0x2
 3412 01ca 18       		.uleb128 0x18
 3413 01cb 00       		.byte	0
 3414 01cc 00       		.byte	0
 3415 01cd 20       		.uleb128 0x20
 3416 01ce 34       		.uleb128 0x34
 3417 01cf 00       		.byte	0
 3418 01d0 03       		.uleb128 0x3
 3419 01d1 0E       		.uleb128 0xe
 3420 01d2 3A       		.uleb128 0x3a
 3421 01d3 0B       		.uleb128 0xb
 3422 01d4 3B       		.uleb128 0x3b
 3423 01d5 0B       		.uleb128 0xb
 3424 01d6 49       		.uleb128 0x49
 3425 01d7 13       		.uleb128 0x13
 3426 01d8 3F       		.uleb128 0x3f
 3427 01d9 19       		.uleb128 0x19
 3428 01da 02       		.uleb128 0x2
 3429 01db 18       		.uleb128 0x18
 3430 01dc 00       		.byte	0
 3431 01dd 00       		.byte	0
 3432 01de 21       		.uleb128 0x21
 3433 01df 34       		.uleb128 0x34
 3434 01e0 00       		.byte	0
 3435 01e1 03       		.uleb128 0x3
 3436 01e2 0E       		.uleb128 0xe
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 106


 3437 01e3 3A       		.uleb128 0x3a
 3438 01e4 0B       		.uleb128 0xb
 3439 01e5 3B       		.uleb128 0x3b
 3440 01e6 05       		.uleb128 0x5
 3441 01e7 49       		.uleb128 0x49
 3442 01e8 13       		.uleb128 0x13
 3443 01e9 3F       		.uleb128 0x3f
 3444 01ea 19       		.uleb128 0x19
 3445 01eb 3C       		.uleb128 0x3c
 3446 01ec 19       		.uleb128 0x19
 3447 01ed 00       		.byte	0
 3448 01ee 00       		.byte	0
 3449 01ef 22       		.uleb128 0x22
 3450 01f0 34       		.uleb128 0x34
 3451 01f1 00       		.byte	0
 3452 01f2 03       		.uleb128 0x3
 3453 01f3 0E       		.uleb128 0xe
 3454 01f4 3A       		.uleb128 0x3a
 3455 01f5 0B       		.uleb128 0xb
 3456 01f6 3B       		.uleb128 0x3b
 3457 01f7 0B       		.uleb128 0xb
 3458 01f8 49       		.uleb128 0x49
 3459 01f9 13       		.uleb128 0x13
 3460 01fa 3F       		.uleb128 0x3f
 3461 01fb 19       		.uleb128 0x19
 3462 01fc 3C       		.uleb128 0x3c
 3463 01fd 19       		.uleb128 0x19
 3464 01fe 00       		.byte	0
 3465 01ff 00       		.byte	0
 3466 0200 23       		.uleb128 0x23
 3467 0201 2E       		.uleb128 0x2e
 3468 0202 00       		.byte	0
 3469 0203 3F       		.uleb128 0x3f
 3470 0204 19       		.uleb128 0x19
 3471 0205 3C       		.uleb128 0x3c
 3472 0206 19       		.uleb128 0x19
 3473 0207 6E       		.uleb128 0x6e
 3474 0208 0E       		.uleb128 0xe
 3475 0209 03       		.uleb128 0x3
 3476 020a 0E       		.uleb128 0xe
 3477 020b 3A       		.uleb128 0x3a
 3478 020c 0B       		.uleb128 0xb
 3479 020d 3B       		.uleb128 0x3b
 3480 020e 0B       		.uleb128 0xb
 3481 020f 00       		.byte	0
 3482 0210 00       		.byte	0
 3483 0211 00       		.byte	0
 3484              		.section	.debug_loc,"",%progbits
 3485              	.Ldebug_loc0:
 3486              	.LLST0:
 3487 0000 08000000 		.4byte	.LVL1
 3488 0004 0A010000 		.4byte	.LVL23
 3489 0008 0100     		.2byte	0x1
 3490 000a 55       		.byte	0x55
 3491 000b 00000000 		.4byte	0
 3492 000f 00000000 		.4byte	0
 3493              	.LLST1:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 107


 3494 0013 92000000 		.4byte	.LVL6
 3495 0017 94000000 		.4byte	.LVL7
 3496 001b 0200     		.2byte	0x2
 3497 001d 30       		.byte	0x30
 3498 001e 9F       		.byte	0x9f
 3499 001f 94000000 		.4byte	.LVL7
 3500 0023 9C000000 		.4byte	.LVL8
 3501 0027 0100     		.2byte	0x1
 3502 0029 53       		.byte	0x53
 3503 002a 9E000000 		.4byte	.LVL9
 3504 002e A7000000 		.4byte	.LVL10-1
 3505 0032 0100     		.2byte	0x1
 3506 0034 53       		.byte	0x53
 3507 0035 00000000 		.4byte	0
 3508 0039 00000000 		.4byte	0
 3509              	.LLST2:
 3510 003d 00000000 		.4byte	.LVL24
 3511 0041 38000000 		.4byte	.LVL25
 3512 0045 0100     		.2byte	0x1
 3513 0047 50       		.byte	0x50
 3514 0048 38000000 		.4byte	.LVL25
 3515 004c C8000000 		.4byte	.LFE2
 3516 0050 0400     		.2byte	0x4
 3517 0052 F3       		.byte	0xf3
 3518 0053 01       		.uleb128 0x1
 3519 0054 50       		.byte	0x50
 3520 0055 9F       		.byte	0x9f
 3521 0056 00000000 		.4byte	0
 3522 005a 00000000 		.4byte	0
 3523              	.LLST3:
 3524 005e 00000000 		.4byte	.LVL24
 3525 0062 85000000 		.4byte	.LVL26-1
 3526 0066 0100     		.2byte	0x1
 3527 0068 51       		.byte	0x51
 3528 0069 85000000 		.4byte	.LVL26-1
 3529 006d C8000000 		.4byte	.LFE2
 3530 0071 0400     		.2byte	0x4
 3531 0073 F3       		.byte	0xf3
 3532 0074 01       		.uleb128 0x1
 3533 0075 51       		.byte	0x51
 3534 0076 9F       		.byte	0x9f
 3535 0077 00000000 		.4byte	0
 3536 007b 00000000 		.4byte	0
 3537              	.LLST4:
 3538 007f 00000000 		.4byte	.LVL27
 3539 0083 0F000000 		.4byte	.LVL28-1
 3540 0087 0100     		.2byte	0x1
 3541 0089 50       		.byte	0x50
 3542 008a 0F000000 		.4byte	.LVL28-1
 3543 008e 24000000 		.4byte	.LFE0
 3544 0092 0400     		.2byte	0x4
 3545 0094 F3       		.byte	0xf3
 3546 0095 01       		.uleb128 0x1
 3547 0096 50       		.byte	0x50
 3548 0097 9F       		.byte	0x9f
 3549 0098 00000000 		.4byte	0
 3550 009c 00000000 		.4byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 108


 3551              	.LLST5:
 3552 00a0 00000000 		.4byte	.LVL27
 3553 00a4 0F000000 		.4byte	.LVL28-1
 3554 00a8 0100     		.2byte	0x1
 3555 00aa 51       		.byte	0x51
 3556 00ab 0F000000 		.4byte	.LVL28-1
 3557 00af 24000000 		.4byte	.LFE0
 3558 00b3 0400     		.2byte	0x4
 3559 00b5 F3       		.byte	0xf3
 3560 00b6 01       		.uleb128 0x1
 3561 00b7 51       		.byte	0x51
 3562 00b8 9F       		.byte	0x9f
 3563 00b9 00000000 		.4byte	0
 3564 00bd 00000000 		.4byte	0
 3565              	.LLST6:
 3566 00c1 06000000 		.4byte	.LVL30
 3567 00c5 10000000 		.4byte	.LVL31
 3568 00c9 0100     		.2byte	0x1
 3569 00cb 53       		.byte	0x53
 3570 00cc 00000000 		.4byte	0
 3571 00d0 00000000 		.4byte	0
 3572              	.LLST7:
 3573 00d4 00000000 		.4byte	.LVL32
 3574 00d8 10000000 		.4byte	.LVL33
 3575 00dc 0200     		.2byte	0x2
 3576 00de 30       		.byte	0x30
 3577 00df 9F       		.byte	0x9f
 3578 00e0 10000000 		.4byte	.LVL33
 3579 00e4 16000000 		.4byte	.LVL34
 3580 00e8 0100     		.2byte	0x1
 3581 00ea 50       		.byte	0x50
 3582 00eb 16000000 		.4byte	.LVL34
 3583 00ef 18000000 		.4byte	.LVL35
 3584 00f3 0200     		.2byte	0x2
 3585 00f5 30       		.byte	0x30
 3586 00f6 9F       		.byte	0x9f
 3587 00f7 18000000 		.4byte	.LVL35
 3588 00fb 20000000 		.4byte	.LFE7
 3589 00ff 0100     		.2byte	0x1
 3590 0101 50       		.byte	0x50
 3591 0102 00000000 		.4byte	0
 3592 0106 00000000 		.4byte	0
 3593              	.LLST8:
 3594 010a 00000000 		.4byte	.LVL36
 3595 010e 04000000 		.4byte	.LVL37
 3596 0112 0100     		.2byte	0x1
 3597 0114 50       		.byte	0x50
 3598 0115 04000000 		.4byte	.LVL37
 3599 0119 0C000000 		.4byte	.LFE8
 3600 011d 0400     		.2byte	0x4
 3601 011f F3       		.byte	0xf3
 3602 0120 01       		.uleb128 0x1
 3603 0121 50       		.byte	0x50
 3604 0122 9F       		.byte	0x9f
 3605 0123 00000000 		.4byte	0
 3606 0127 00000000 		.4byte	0
 3607              	.LLST9:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 109


 3608 012b 00000000 		.4byte	.LVL38
 3609 012f 04000000 		.4byte	.LVL39
 3610 0133 0100     		.2byte	0x1
 3611 0135 50       		.byte	0x50
 3612 0136 04000000 		.4byte	.LVL39
 3613 013a 14000000 		.4byte	.LFE9
 3614 013e 0400     		.2byte	0x4
 3615 0140 F3       		.byte	0xf3
 3616 0141 01       		.uleb128 0x1
 3617 0142 50       		.byte	0x50
 3618 0143 9F       		.byte	0x9f
 3619 0144 00000000 		.4byte	0
 3620 0148 00000000 		.4byte	0
 3621              	.LLST10:
 3622 014c 00000000 		.4byte	.LVL40
 3623 0150 0C000000 		.4byte	.LVL41
 3624 0154 0100     		.2byte	0x1
 3625 0156 50       		.byte	0x50
 3626 0157 0C000000 		.4byte	.LVL41
 3627 015b 20000000 		.4byte	.LVL46
 3628 015f 0400     		.2byte	0x4
 3629 0161 F3       		.byte	0xf3
 3630 0162 01       		.uleb128 0x1
 3631 0163 50       		.byte	0x50
 3632 0164 9F       		.byte	0x9f
 3633 0165 20000000 		.4byte	.LVL46
 3634 0169 22000000 		.4byte	.LVL47
 3635 016d 0100     		.2byte	0x1
 3636 016f 50       		.byte	0x50
 3637 0170 22000000 		.4byte	.LVL47
 3638 0174 28000000 		.4byte	.LFE10
 3639 0178 0400     		.2byte	0x4
 3640 017a F3       		.byte	0xf3
 3641 017b 01       		.uleb128 0x1
 3642 017c 50       		.byte	0x50
 3643 017d 9F       		.byte	0x9f
 3644 017e 00000000 		.4byte	0
 3645 0182 00000000 		.4byte	0
 3646              	.LLST11:
 3647 0186 00000000 		.4byte	.LVL40
 3648 018a 14000000 		.4byte	.LVL42
 3649 018e 0200     		.2byte	0x2
 3650 0190 30       		.byte	0x30
 3651 0191 9F       		.byte	0x9f
 3652 0192 14000000 		.4byte	.LVL42
 3653 0196 1C000000 		.4byte	.LVL44
 3654 019a 0100     		.2byte	0x1
 3655 019c 50       		.byte	0x50
 3656 019d 1C000000 		.4byte	.LVL44
 3657 01a1 1E000000 		.4byte	.LVL45
 3658 01a5 0300     		.2byte	0x3
 3659 01a7 70       		.byte	0x70
 3660 01a8 02       		.sleb128 2
 3661 01a9 9F       		.byte	0x9f
 3662 01aa 1E000000 		.4byte	.LVL45
 3663 01ae 20000000 		.4byte	.LVL46
 3664 01b2 0100     		.2byte	0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 110


 3665 01b4 50       		.byte	0x50
 3666 01b5 20000000 		.4byte	.LVL46
 3667 01b9 22000000 		.4byte	.LVL47
 3668 01bd 0200     		.2byte	0x2
 3669 01bf 30       		.byte	0x30
 3670 01c0 9F       		.byte	0x9f
 3671 01c1 22000000 		.4byte	.LVL47
 3672 01c5 28000000 		.4byte	.LFE10
 3673 01c9 0100     		.2byte	0x1
 3674 01cb 50       		.byte	0x50
 3675 01cc 00000000 		.4byte	0
 3676 01d0 00000000 		.4byte	0
 3677              	.LLST12:
 3678 01d4 00000000 		.4byte	.LVL48
 3679 01d8 0A000000 		.4byte	.LVL49
 3680 01dc 0100     		.2byte	0x1
 3681 01de 50       		.byte	0x50
 3682 01df 0A000000 		.4byte	.LVL49
 3683 01e3 68000000 		.4byte	.LFE11
 3684 01e7 0400     		.2byte	0x4
 3685 01e9 F3       		.byte	0xf3
 3686 01ea 01       		.uleb128 0x1
 3687 01eb 50       		.byte	0x50
 3688 01ec 9F       		.byte	0x9f
 3689 01ed 00000000 		.4byte	0
 3690 01f1 00000000 		.4byte	0
 3691              	.LLST13:
 3692 01f5 00000000 		.4byte	.LVL48
 3693 01f9 30000000 		.4byte	.LVL54
 3694 01fd 0100     		.2byte	0x1
 3695 01ff 51       		.byte	0x51
 3696 0200 30000000 		.4byte	.LVL54
 3697 0204 3C000000 		.4byte	.LVL56
 3698 0208 0400     		.2byte	0x4
 3699 020a F3       		.byte	0xf3
 3700 020b 01       		.uleb128 0x1
 3701 020c 51       		.byte	0x51
 3702 020d 9F       		.byte	0x9f
 3703 020e 3C000000 		.4byte	.LVL56
 3704 0212 3E000000 		.4byte	.LVL57
 3705 0216 0100     		.2byte	0x1
 3706 0218 51       		.byte	0x51
 3707 0219 3E000000 		.4byte	.LVL57
 3708 021d 68000000 		.4byte	.LFE11
 3709 0221 0400     		.2byte	0x4
 3710 0223 F3       		.byte	0xf3
 3711 0224 01       		.uleb128 0x1
 3712 0225 51       		.byte	0x51
 3713 0226 9F       		.byte	0x9f
 3714 0227 00000000 		.4byte	0
 3715 022b 00000000 		.4byte	0
 3716              	.LLST14:
 3717 022f 18000000 		.4byte	.LVL50
 3718 0233 1E000000 		.4byte	.LVL51
 3719 0237 0100     		.2byte	0x1
 3720 0239 52       		.byte	0x52
 3721 023a 1E000000 		.4byte	.LVL51
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 111


 3722 023e 24000000 		.4byte	.LVL53
 3723 0242 0400     		.2byte	0x4
 3724 0244 0A       		.byte	0xa
 3725 0245 0040     		.2byte	0x4000
 3726 0247 9F       		.byte	0x9f
 3727 0248 24000000 		.4byte	.LVL53
 3728 024c 35000000 		.4byte	.LVL55-1
 3729 0250 0100     		.2byte	0x1
 3730 0252 52       		.byte	0x52
 3731 0253 3C000000 		.4byte	.LVL56
 3732 0257 43000000 		.4byte	.LVL58-1
 3733 025b 0100     		.2byte	0x1
 3734 025d 52       		.byte	0x52
 3735 025e 00000000 		.4byte	0
 3736 0262 00000000 		.4byte	0
 3737              	.LLST15:
 3738 0266 18000000 		.4byte	.LVL50
 3739 026a 1E000000 		.4byte	.LVL51
 3740 026e 0400     		.2byte	0x4
 3741 0270 0A       		.byte	0xa
 3742 0271 0040     		.2byte	0x4000
 3743 0273 9F       		.byte	0x9f
 3744 0274 20000000 		.4byte	.LVL52
 3745 0278 35000000 		.4byte	.LVL55-1
 3746 027c 0100     		.2byte	0x1
 3747 027e 53       		.byte	0x53
 3748 027f 3C000000 		.4byte	.LVL56
 3749 0283 43000000 		.4byte	.LVL58-1
 3750 0287 0100     		.2byte	0x1
 3751 0289 53       		.byte	0x53
 3752 028a 00000000 		.4byte	0
 3753 028e 00000000 		.4byte	0
 3754              	.LLST16:
 3755 0292 00000000 		.4byte	.LVL60
 3756 0296 0E000000 		.4byte	.LVL61
 3757 029a 0100     		.2byte	0x1
 3758 029c 50       		.byte	0x50
 3759 029d 0E000000 		.4byte	.LVL61
 3760 02a1 40000000 		.4byte	.LFE12
 3761 02a5 0400     		.2byte	0x4
 3762 02a7 F3       		.byte	0xf3
 3763 02a8 01       		.uleb128 0x1
 3764 02a9 50       		.byte	0x50
 3765 02aa 9F       		.byte	0x9f
 3766 02ab 00000000 		.4byte	0
 3767 02af 00000000 		.4byte	0
 3768              	.LLST17:
 3769 02b3 0E000000 		.4byte	.LVL61
 3770 02b7 2C000000 		.4byte	.LVL64
 3771 02bb 0100     		.2byte	0x1
 3772 02bd 54       		.byte	0x54
 3773 02be 2E000000 		.4byte	.LVL65
 3774 02c2 38000000 		.4byte	.LVL66
 3775 02c6 0100     		.2byte	0x1
 3776 02c8 54       		.byte	0x54
 3777 02c9 00000000 		.4byte	0
 3778 02cd 00000000 		.4byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 112


 3779              	.LLST18:
 3780 02d1 0C000000 		.4byte	.LVL68
 3781 02d5 4D000000 		.4byte	.LVL69-1
 3782 02d9 0100     		.2byte	0x1
 3783 02db 50       		.byte	0x50
 3784 02dc 00000000 		.4byte	0
 3785 02e0 00000000 		.4byte	0
 3786              	.LLST19:
 3787 02e4 00000000 		.4byte	.LVL71
 3788 02e8 52000000 		.4byte	.LVL75
 3789 02ec 0100     		.2byte	0x1
 3790 02ee 50       		.byte	0x50
 3791 02ef 52000000 		.4byte	.LVL75
 3792 02f3 E8000000 		.4byte	.LVL84
 3793 02f7 0400     		.2byte	0x4
 3794 02f9 F3       		.byte	0xf3
 3795 02fa 01       		.uleb128 0x1
 3796 02fb 50       		.byte	0x50
 3797 02fc 9F       		.byte	0x9f
 3798 02fd E8000000 		.4byte	.LVL84
 3799 0301 04010000 		.4byte	.LFE13
 3800 0305 0100     		.2byte	0x1
 3801 0307 50       		.byte	0x50
 3802 0308 00000000 		.4byte	0
 3803 030c 00000000 		.4byte	0
 3804              	.LLST20:
 3805 0310 00000000 		.4byte	.LVL71
 3806 0314 4E000000 		.4byte	.LVL74
 3807 0318 0100     		.2byte	0x1
 3808 031a 51       		.byte	0x51
 3809 031b 4E000000 		.4byte	.LVL74
 3810 031f E8000000 		.4byte	.LVL84
 3811 0323 0100     		.2byte	0x1
 3812 0325 56       		.byte	0x56
 3813 0326 E8000000 		.4byte	.LVL84
 3814 032a 04010000 		.4byte	.LFE13
 3815 032e 0100     		.2byte	0x1
 3816 0330 51       		.byte	0x51
 3817 0331 00000000 		.4byte	0
 3818 0335 00000000 		.4byte	0
 3819              	.LLST21:
 3820 0339 00000000 		.4byte	.LVL71
 3821 033d 16000000 		.4byte	.LVL72
 3822 0341 0100     		.2byte	0x1
 3823 0343 52       		.byte	0x52
 3824 0344 16000000 		.4byte	.LVL72
 3825 0348 3C000000 		.4byte	.LVL73
 3826 034c 0400     		.2byte	0x4
 3827 034e F3       		.byte	0xf3
 3828 034f 01       		.uleb128 0x1
 3829 0350 52       		.byte	0x52
 3830 0351 9F       		.byte	0x9f
 3831 0352 3C000000 		.4byte	.LVL73
 3832 0356 9A000000 		.4byte	.LVL79
 3833 035a 0100     		.2byte	0x1
 3834 035c 55       		.byte	0x55
 3835 035d D0000000 		.4byte	.LVL83
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 113


 3836 0361 E8000000 		.4byte	.LVL84
 3837 0365 0100     		.2byte	0x1
 3838 0367 55       		.byte	0x55
 3839 0368 E8000000 		.4byte	.LVL84
 3840 036c 04010000 		.4byte	.LFE13
 3841 0370 0100     		.2byte	0x1
 3842 0372 52       		.byte	0x52
 3843 0373 00000000 		.4byte	0
 3844 0377 00000000 		.4byte	0
 3845              	.LLST22:
 3846 037b 00000000 		.4byte	.LVL85
 3847 037f 19000000 		.4byte	.LVL86-1
 3848 0383 0100     		.2byte	0x1
 3849 0385 50       		.byte	0x50
 3850 0386 19000000 		.4byte	.LVL86-1
 3851 038a 92000000 		.4byte	.LVL95
 3852 038e 0400     		.2byte	0x4
 3853 0390 F3       		.byte	0xf3
 3854 0391 01       		.uleb128 0x1
 3855 0392 50       		.byte	0x50
 3856 0393 9F       		.byte	0x9f
 3857 0394 92000000 		.4byte	.LVL95
 3858 0398 9C000000 		.4byte	.LVL96
 3859 039c 0100     		.2byte	0x1
 3860 039e 50       		.byte	0x50
 3861 039f 9C000000 		.4byte	.LVL96
 3862 03a3 B0000000 		.4byte	.LFE14
 3863 03a7 0400     		.2byte	0x4
 3864 03a9 F3       		.byte	0xf3
 3865 03aa 01       		.uleb128 0x1
 3866 03ab 50       		.byte	0x50
 3867 03ac 9F       		.byte	0x9f
 3868 03ad 00000000 		.4byte	0
 3869 03b1 00000000 		.4byte	0
 3870              	.LLST23:
 3871 03b5 00000000 		.4byte	.LVL85
 3872 03b9 19000000 		.4byte	.LVL86-1
 3873 03bd 0100     		.2byte	0x1
 3874 03bf 51       		.byte	0x51
 3875 03c0 19000000 		.4byte	.LVL86-1
 3876 03c4 92000000 		.4byte	.LVL95
 3877 03c8 0100     		.2byte	0x1
 3878 03ca 57       		.byte	0x57
 3879 03cb 92000000 		.4byte	.LVL95
 3880 03cf 9C000000 		.4byte	.LVL96
 3881 03d3 0100     		.2byte	0x1
 3882 03d5 51       		.byte	0x51
 3883 03d6 9C000000 		.4byte	.LVL96
 3884 03da B0000000 		.4byte	.LFE14
 3885 03de 0400     		.2byte	0x4
 3886 03e0 F3       		.byte	0xf3
 3887 03e1 01       		.uleb128 0x1
 3888 03e2 51       		.byte	0x51
 3889 03e3 9F       		.byte	0x9f
 3890 03e4 00000000 		.4byte	0
 3891 03e8 00000000 		.4byte	0
 3892              	.LLST24:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 114


 3893 03ec 00000000 		.4byte	.LVL85
 3894 03f0 19000000 		.4byte	.LVL86-1
 3895 03f4 0100     		.2byte	0x1
 3896 03f6 52       		.byte	0x52
 3897 03f7 19000000 		.4byte	.LVL86-1
 3898 03fb 26000000 		.4byte	.LVL88
 3899 03ff 0400     		.2byte	0x4
 3900 0401 F3       		.byte	0xf3
 3901 0402 01       		.uleb128 0x1
 3902 0403 52       		.byte	0x52
 3903 0404 9F       		.byte	0x9f
 3904 0405 26000000 		.4byte	.LVL88
 3905 0409 92000000 		.4byte	.LVL95
 3906 040d 0100     		.2byte	0x1
 3907 040f 55       		.byte	0x55
 3908 0410 92000000 		.4byte	.LVL95
 3909 0414 9C000000 		.4byte	.LVL96
 3910 0418 0100     		.2byte	0x1
 3911 041a 52       		.byte	0x52
 3912 041b 9C000000 		.4byte	.LVL96
 3913 041f A2000000 		.4byte	.LVL97
 3914 0423 0100     		.2byte	0x1
 3915 0425 55       		.byte	0x55
 3916 0426 00000000 		.4byte	0
 3917 042a 00000000 		.4byte	0
 3918              	.LLST25:
 3919 042e 00000000 		.4byte	.LVL98
 3920 0432 1C000000 		.4byte	.LVL99
 3921 0436 0100     		.2byte	0x1
 3922 0438 50       		.byte	0x50
 3923 0439 1C000000 		.4byte	.LVL99
 3924 043d 2C000000 		.4byte	.LFE15
 3925 0441 0400     		.2byte	0x4
 3926 0443 F3       		.byte	0xf3
 3927 0444 01       		.uleb128 0x1
 3928 0445 50       		.byte	0x50
 3929 0446 9F       		.byte	0x9f
 3930 0447 00000000 		.4byte	0
 3931 044b 00000000 		.4byte	0
 3932              	.LLST26:
 3933 044f 00000000 		.4byte	.LVL100
 3934 0453 0A000000 		.4byte	.LVL101
 3935 0457 0100     		.2byte	0x1
 3936 0459 50       		.byte	0x50
 3937 045a 0A000000 		.4byte	.LVL101
 3938 045e 18000000 		.4byte	.LFE16
 3939 0462 0400     		.2byte	0x4
 3940 0464 F3       		.byte	0xf3
 3941 0465 01       		.uleb128 0x1
 3942 0466 50       		.byte	0x50
 3943 0467 9F       		.byte	0x9f
 3944 0468 00000000 		.4byte	0
 3945 046c 00000000 		.4byte	0
 3946              	.LLST27:
 3947 0470 00000000 		.4byte	.LVL103
 3948 0474 0A000000 		.4byte	.LVL104
 3949 0478 0100     		.2byte	0x1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 115


 3950 047a 50       		.byte	0x50
 3951 047b 0A000000 		.4byte	.LVL104
 3952 047f 16000000 		.4byte	.LVL106
 3953 0483 0400     		.2byte	0x4
 3954 0485 F3       		.byte	0xf3
 3955 0486 01       		.uleb128 0x1
 3956 0487 50       		.byte	0x50
 3957 0488 9F       		.byte	0x9f
 3958 0489 16000000 		.4byte	.LVL106
 3959 048d 18000000 		.4byte	.LVL107
 3960 0491 0100     		.2byte	0x1
 3961 0493 50       		.byte	0x50
 3962 0494 18000000 		.4byte	.LVL107
 3963 0498 20000000 		.4byte	.LFE18
 3964 049c 0400     		.2byte	0x4
 3965 049e F3       		.byte	0xf3
 3966 049f 01       		.uleb128 0x1
 3967 04a0 50       		.byte	0x50
 3968 04a1 9F       		.byte	0x9f
 3969 04a2 00000000 		.4byte	0
 3970 04a6 00000000 		.4byte	0
 3971              	.LLST28:
 3972 04aa 00000000 		.4byte	.LVL103
 3973 04ae 14000000 		.4byte	.LVL105
 3974 04b2 0200     		.2byte	0x2
 3975 04b4 30       		.byte	0x30
 3976 04b5 9F       		.byte	0x9f
 3977 04b6 14000000 		.4byte	.LVL105
 3978 04ba 16000000 		.4byte	.LVL106
 3979 04be 0100     		.2byte	0x1
 3980 04c0 50       		.byte	0x50
 3981 04c1 16000000 		.4byte	.LVL106
 3982 04c5 18000000 		.4byte	.LVL107
 3983 04c9 0200     		.2byte	0x2
 3984 04cb 30       		.byte	0x30
 3985 04cc 9F       		.byte	0x9f
 3986 04cd 18000000 		.4byte	.LVL107
 3987 04d1 20000000 		.4byte	.LFE18
 3988 04d5 0100     		.2byte	0x1
 3989 04d7 50       		.byte	0x50
 3990 04d8 00000000 		.4byte	0
 3991 04dc 00000000 		.4byte	0
 3992              	.LLST29:
 3993 04e0 00000000 		.4byte	.LVL109
 3994 04e4 10000000 		.4byte	.LVL110
 3995 04e8 0200     		.2byte	0x2
 3996 04ea 30       		.byte	0x30
 3997 04eb 9F       		.byte	0x9f
 3998 04ec 10000000 		.4byte	.LVL110
 3999 04f0 18000000 		.4byte	.LFE20
 4000 04f4 0100     		.2byte	0x1
 4001 04f6 50       		.byte	0x50
 4002 04f7 00000000 		.4byte	0
 4003 04fb 00000000 		.4byte	0
 4004              		.section	.debug_aranges,"",%progbits
 4005 0000 D4000000 		.4byte	0xd4
 4006 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 116


 4007 0006 00000000 		.4byte	.Ldebug_info0
 4008 000a 04       		.byte	0x4
 4009 000b 00       		.byte	0
 4010 000c 0000     		.2byte	0
 4011 000e 0000     		.2byte	0
 4012 0010 00000000 		.4byte	.LFB1
 4013 0014 40010000 		.4byte	.LFE1-.LFB1
 4014 0018 00000000 		.4byte	.LFB2
 4015 001c C8000000 		.4byte	.LFE2-.LFB2
 4016 0020 00000000 		.4byte	.LFB0
 4017 0024 24000000 		.4byte	.LFE0-.LFB0
 4018 0028 00000000 		.4byte	.LFB3
 4019 002c 4C000000 		.4byte	.LFE3-.LFB3
 4020 0030 00000000 		.4byte	.LFB5
 4021 0034 20000000 		.4byte	.LFE5-.LFB5
 4022 0038 00000000 		.4byte	.LFB6
 4023 003c 0C000000 		.4byte	.LFE6-.LFB6
 4024 0040 00000000 		.4byte	.LFB7
 4025 0044 20000000 		.4byte	.LFE7-.LFB7
 4026 0048 00000000 		.4byte	.LFB8
 4027 004c 0C000000 		.4byte	.LFE8-.LFB8
 4028 0050 00000000 		.4byte	.LFB9
 4029 0054 14000000 		.4byte	.LFE9-.LFB9
 4030 0058 00000000 		.4byte	.LFB10
 4031 005c 28000000 		.4byte	.LFE10-.LFB10
 4032 0060 00000000 		.4byte	.LFB11
 4033 0064 68000000 		.4byte	.LFE11-.LFB11
 4034 0068 00000000 		.4byte	.LFB12
 4035 006c 40000000 		.4byte	.LFE12-.LFB12
 4036 0070 00000000 		.4byte	.LFB4
 4037 0074 B4000000 		.4byte	.LFE4-.LFB4
 4038 0078 00000000 		.4byte	.LFB13
 4039 007c 04010000 		.4byte	.LFE13-.LFB13
 4040 0080 00000000 		.4byte	.LFB14
 4041 0084 B0000000 		.4byte	.LFE14-.LFB14
 4042 0088 00000000 		.4byte	.LFB15
 4043 008c 2C000000 		.4byte	.LFE15-.LFB15
 4044 0090 00000000 		.4byte	.LFB16
 4045 0094 18000000 		.4byte	.LFE16-.LFB16
 4046 0098 00000000 		.4byte	.LFB17
 4047 009c 0C000000 		.4byte	.LFE17-.LFB17
 4048 00a0 00000000 		.4byte	.LFB18
 4049 00a4 20000000 		.4byte	.LFE18-.LFB18
 4050 00a8 00000000 		.4byte	.LFB19
 4051 00ac 20000000 		.4byte	.LFE19-.LFB19
 4052 00b0 00000000 		.4byte	.LFB20
 4053 00b4 18000000 		.4byte	.LFE20-.LFB20
 4054 00b8 00000000 		.4byte	.LFB21
 4055 00bc 10000000 		.4byte	.LFE21-.LFB21
 4056 00c0 00000000 		.4byte	.LFB22
 4057 00c4 02000000 		.4byte	.LFE22-.LFB22
 4058 00c8 00000000 		.4byte	.LFB23
 4059 00cc 02000000 		.4byte	.LFE23-.LFB23
 4060 00d0 00000000 		.4byte	0
 4061 00d4 00000000 		.4byte	0
 4062              		.section	.debug_ranges,"",%progbits
 4063              	.Ldebug_ranges0:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 117


 4064 0000 00000000 		.4byte	.LFB1
 4065 0004 40010000 		.4byte	.LFE1
 4066 0008 00000000 		.4byte	.LFB2
 4067 000c C8000000 		.4byte	.LFE2
 4068 0010 00000000 		.4byte	.LFB0
 4069 0014 24000000 		.4byte	.LFE0
 4070 0018 00000000 		.4byte	.LFB3
 4071 001c 4C000000 		.4byte	.LFE3
 4072 0020 00000000 		.4byte	.LFB5
 4073 0024 20000000 		.4byte	.LFE5
 4074 0028 00000000 		.4byte	.LFB6
 4075 002c 0C000000 		.4byte	.LFE6
 4076 0030 00000000 		.4byte	.LFB7
 4077 0034 20000000 		.4byte	.LFE7
 4078 0038 00000000 		.4byte	.LFB8
 4079 003c 0C000000 		.4byte	.LFE8
 4080 0040 00000000 		.4byte	.LFB9
 4081 0044 14000000 		.4byte	.LFE9
 4082 0048 00000000 		.4byte	.LFB10
 4083 004c 28000000 		.4byte	.LFE10
 4084 0050 00000000 		.4byte	.LFB11
 4085 0054 68000000 		.4byte	.LFE11
 4086 0058 00000000 		.4byte	.LFB12
 4087 005c 40000000 		.4byte	.LFE12
 4088 0060 00000000 		.4byte	.LFB4
 4089 0064 B4000000 		.4byte	.LFE4
 4090 0068 00000000 		.4byte	.LFB13
 4091 006c 04010000 		.4byte	.LFE13
 4092 0070 00000000 		.4byte	.LFB14
 4093 0074 B0000000 		.4byte	.LFE14
 4094 0078 00000000 		.4byte	.LFB15
 4095 007c 2C000000 		.4byte	.LFE15
 4096 0080 00000000 		.4byte	.LFB16
 4097 0084 18000000 		.4byte	.LFE16
 4098 0088 00000000 		.4byte	.LFB17
 4099 008c 0C000000 		.4byte	.LFE17
 4100 0090 00000000 		.4byte	.LFB18
 4101 0094 20000000 		.4byte	.LFE18
 4102 0098 00000000 		.4byte	.LFB19
 4103 009c 20000000 		.4byte	.LFE19
 4104 00a0 00000000 		.4byte	.LFB20
 4105 00a4 18000000 		.4byte	.LFE20
 4106 00a8 00000000 		.4byte	.LFB21
 4107 00ac 10000000 		.4byte	.LFE21
 4108 00b0 00000000 		.4byte	.LFB22
 4109 00b4 02000000 		.4byte	.LFE22
 4110 00b8 00000000 		.4byte	.LFB23
 4111 00bc 02000000 		.4byte	.LFE23
 4112 00c0 00000000 		.4byte	0
 4113 00c4 00000000 		.4byte	0
 4114              		.section	.debug_line,"",%progbits
 4115              	.Ldebug_line0:
 4116 0000 4C030000 		.section	.debug_str,"MS",%progbits,1
 4116      0200A700 
 4116      00000201 
 4116      FB0E0D00 
 4116      01010101 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 118


 4117              	.LASF104:
 4118 0000 4379446D 		.ascii	"CyDmaTdAllocate\000"
 4118      61546441 
 4118      6C6C6F63 
 4118      61746500 
 4119              	.LASF89:
 4120 0010 55534246 		.ascii	"USBFS_interfaceNumber\000"
 4120      535F696E 
 4120      74657266 
 4120      6163654E 
 4120      756D6265 
 4121              	.LASF22:
 4122 0026 6570546F 		.ascii	"epToggle\000"
 4122      67676C65 
 4122      00
 4123              	.LASF57:
 4124 002f 696E7465 		.ascii	"interfaceNumber\000"
 4124      72666163 
 4124      654E756D 
 4124      62657200 
 4125              	.LASF61:
 4126 003f 636E7472 		.ascii	"cntr\000"
 4126      00
 4127              	.LASF76:
 4128 0044 55534246 		.ascii	"USBFS_RWUEnabled\000"
 4128      535F5257 
 4128      55456E61 
 4128      626C6564 
 4128      00
 4129              	.LASF83:
 4130 0055 55534246 		.ascii	"USBFS_initVar\000"
 4130      535F696E 
 4130      69745661 
 4130      7200
 4131              	.LASF71:
 4132 0063 55534246 		.ascii	"USBFS_Force\000"
 4132      535F466F 
 4132      72636500 
 4133              	.LASF81:
 4134 006f 55534246 		.ascii	"USBFS_EnableSofInt\000"
 4134      535F456E 
 4134      61626C65 
 4134      536F6649 
 4134      6E7400
 4135              	.LASF44:
 4136 0082 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 4136      535F7369 
 4136      655F6570 
 4136      735F7374 
 4136      72756374 
 4137              	.LASF65:
 4138 0097 55534246 		.ascii	"USBFS_Stop\000"
 4138      535F5374 
 4138      6F7000
 4139              	.LASF98:
 4140 00a2 43794578 		.ascii	"CyExitCriticalSection\000"
 4140      69744372 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 119


 4140      69746963 
 4140      616C5365 
 4140      6374696F 
 4141              	.LASF63:
 4142 00b8 70446174 		.ascii	"pData\000"
 4142      6100
 4143              	.LASF34:
 4144 00be 6570496E 		.ascii	"epIntEn\000"
 4144      74456E00 
 4145              	.LASF74:
 4146 00c6 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 4146      535F5365 
 4146      74506F77 
 4146      65725374 
 4146      61747573 
 4147              	.LASF2:
 4148 00db 73686F72 		.ascii	"short int\000"
 4148      7420696E 
 4148      7400
 4149              	.LASF87:
 4150 00e5 55534246 		.ascii	"USBFS_configurationChanged\000"
 4150      535F636F 
 4150      6E666967 
 4150      75726174 
 4150      696F6E43 
 4151              	.LASF108:
 4152 0100 4379446D 		.ascii	"CyDmaTdSetConfiguration\000"
 4152      61546453 
 4152      6574436F 
 4152      6E666967 
 4152      75726174 
 4153              	.LASF18:
 4154 0118 73697A65 		.ascii	"sizetype\000"
 4154      74797065 
 4154      00
 4155              	.LASF24:
 4156 0121 65704D6F 		.ascii	"epMode\000"
 4156      646500
 4157              	.LASF45:
 4158 0128 61726245 		.ascii	"arbEp\000"
 4158      7000
 4159              	.LASF103:
 4160 012e 55534246 		.ascii	"USBFS_ep2_DmaInitialize\000"
 4160      535F6570 
 4160      325F446D 
 4160      61496E69 
 4160      7469616C 
 4161              	.LASF75:
 4162 0146 706F7765 		.ascii	"powerStatus\000"
 4162      72537461 
 4162      74757300 
 4163              	.LASF17:
 4164 0152 6C6F6E67 		.ascii	"long double\000"
 4164      20646F75 
 4164      626C6500 
 4165              	.LASF80:
 4166 015e 55534246 		.ascii	"USBFS_ReInitComponent\000"
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 120


 4166      535F5265 
 4166      496E6974 
 4166      436F6D70 
 4166      6F6E656E 
 4167              	.LASF51:
 4168 0174 6D6F6465 		.ascii	"mode\000"
 4168      00
 4169              	.LASF38:
 4170 0179 72775761 		.ascii	"rwWaMsb\000"
 4170      4D736200 
 4171              	.LASF32:
 4172 0181 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 4172      535F7369 
 4172      655F6570 
 4172      5F737472 
 4172      75637400 
 4173              	.LASF36:
 4174 0195 72657365 		.ascii	"reserved\000"
 4174      72766564 
 4174      00
 4175              	.LASF110:
 4176 019e 4379446D 		.ascii	"CyDmaChSetInitialTd\000"
 4176      61436853 
 4176      6574496E 
 4176      69746961 
 4176      6C546400 
 4177              	.LASF10:
 4178 01b2 75696E74 		.ascii	"uint16\000"
 4178      313600
 4179              	.LASF39:
 4180 01b9 72775261 		.ascii	"rwRa\000"
 4180      00
 4181              	.LASF85:
 4182 01be 55534246 		.ascii	"USBFS_transferState\000"
 4182      535F7472 
 4182      616E7366 
 4182      65725374 
 4182      61746500 
 4183              	.LASF99:
 4184 01d2 4379496E 		.ascii	"CyIntSetPriority\000"
 4184      74536574 
 4184      5072696F 
 4184      72697479 
 4184      00
 4185              	.LASF49:
 4186 01e3 55534246 		.ascii	"USBFS_InitComponent\000"
 4186      535F496E 
 4186      6974436F 
 4186      6D706F6E 
 4186      656E7400 
 4187              	.LASF43:
 4188 01f7 73696545 		.ascii	"sieEp\000"
 4188      7000
 4189              	.LASF67:
 4190 01fd 6C656E67 		.ascii	"length\000"
 4190      746800
 4191              	.LASF50:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 121


 4192 0204 64657669 		.ascii	"device\000"
 4192      636500
 4193              	.LASF12:
 4194 020b 666C6F61 		.ascii	"float\000"
 4194      7400
 4195              	.LASF114:
 4196 0211 433A5C55 		.ascii	"C:\\Users\\Caleb Cotter\\Documents\\GitHub\\3HC\\3H"
 4196      73657273 
 4196      5C43616C 
 4196      65622043 
 4196      6F747465 
 4197 023e 435F4669 		.ascii	"C_Firmware\\3HC_Firmware_0_1.cydsn\000"
 4197      726D7761 
 4197      72655C33 
 4197      48435F46 
 4197      69726D77 
 4198              	.LASF6:
 4199 0260 6C6F6E67 		.ascii	"long long int\000"
 4199      206C6F6E 
 4199      6720696E 
 4199      7400
 4200              	.LASF7:
 4201 026e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4201      206C6F6E 
 4201      6720756E 
 4201      7369676E 
 4201      65642069 
 4202              	.LASF31:
 4203 0285 65704372 		.ascii	"epCr0\000"
 4203      3000
 4204              	.LASF33:
 4205 028b 65704366 		.ascii	"epCfg\000"
 4205      6700
 4206              	.LASF4:
 4207 0291 6C6F6E67 		.ascii	"long int\000"
 4207      20696E74 
 4207      00
 4208              	.LASF62:
 4209 029a 55534246 		.ascii	"USBFS_InitEP_DMA\000"
 4209      535F496E 
 4209      69744550 
 4209      5F444D41 
 4209      00
 4210              	.LASF23:
 4211 02ab 61646472 		.ascii	"addr\000"
 4211      00
 4212              	.LASF77:
 4213 02b0 72657375 		.ascii	"result\000"
 4213      6C7400
 4214              	.LASF91:
 4215 02b7 55534246 		.ascii	"USBFS_deviceAddress\000"
 4215      535F6465 
 4215      76696365 
 4215      41646472 
 4215      65737300 
 4216              	.LASF78:
 4217 02cb 55534246 		.ascii	"USBFS_GetConfiguration\000"
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 122


 4217      535F4765 
 4217      74436F6E 
 4217      66696775 
 4217      72617469 
 4218              	.LASF73:
 4219 02e2 55534246 		.ascii	"USBFS_GetEPAckState\000"
 4219      535F4765 
 4219      74455041 
 4219      636B5374 
 4219      61746500 
 4220              	.LASF58:
 4221 02f6 55534246 		.ascii	"USBFS_GetEPState\000"
 4221      535F4765 
 4221      74455053 
 4221      74617465 
 4221      00
 4222              	.LASF107:
 4223 0307 55534246 		.ascii	"USBFS_Dp_ClearInterrupt\000"
 4223      535F4470 
 4223      5F436C65 
 4223      6172496E 
 4223      74657272 
 4224              	.LASF46:
 4225 031f 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 4225      535F6172 
 4225      625F6570 
 4225      735F7374 
 4225      72756374 
 4226              	.LASF68:
 4227 0334 55534246 		.ascii	"USBFS_ReadOutEP\000"
 4227      535F5265 
 4227      61644F75 
 4227      74455000 
 4228              	.LASF19:
 4229 0344 61747472 		.ascii	"attrib\000"
 4229      696200
 4230              	.LASF28:
 4231 034b 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 4231      4246535F 
 4231      45505F43 
 4231      544C5F42 
 4231      4C4F434B 
 4232              	.LASF86:
 4233 0360 55534246 		.ascii	"USBFS_configuration\000"
 4233      535F636F 
 4233      6E666967 
 4233      75726174 
 4233      696F6E00 
 4234              	.LASF1:
 4235 0374 756E7369 		.ascii	"unsigned char\000"
 4235      676E6564 
 4235      20636861 
 4235      7200
 4236              	.LASF42:
 4237 0382 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 4237      535F6172 
 4237      625F6570 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 123


 4237      5F737472 
 4237      75637400 
 4238              	.LASF35:
 4239 0396 65705372 		.ascii	"epSr\000"
 4239      00
 4240              	.LASF64:
 4241 039b 55534246 		.ascii	"USBFS_Stop_DMA\000"
 4241      535F5374 
 4241      6F705F44 
 4241      4D4100
 4242              	.LASF0:
 4243 03aa 7369676E 		.ascii	"signed char\000"
 4243      65642063 
 4243      68617200 
 4244              	.LASF97:
 4245 03b6 43794465 		.ascii	"CyDelayUs\000"
 4245      6C617955 
 4245      7300
 4246              	.LASF8:
 4247 03c0 756E7369 		.ascii	"unsigned int\000"
 4247      676E6564 
 4247      20696E74 
 4247      00
 4248              	.LASF109:
 4249 03cd 4379446D 		.ascii	"CyDmaTdSetAddress\000"
 4249      61546453 
 4249      65744164 
 4249      64726573 
 4249      7300
 4250              	.LASF41:
 4251 03df 72774472 		.ascii	"rwDr\000"
 4251      00
 4252              	.LASF37:
 4253 03e4 72775761 		.ascii	"rwWa\000"
 4253      00
 4254              	.LASF105:
 4255 03e9 4379446D 		.ascii	"CyDmaChDisable\000"
 4255      61436844 
 4255      69736162 
 4255      6C6500
 4256              	.LASF16:
 4257 03f8 72656733 		.ascii	"reg32\000"
 4257      3200
 4258              	.LASF27:
 4259 03fe 696E7465 		.ascii	"interface\000"
 4259      72666163 
 4259      6500
 4260              	.LASF60:
 4261 0408 55534246 		.ascii	"USBFS_GetEPCount\000"
 4261      535F4765 
 4261      74455043 
 4261      6F756E74 
 4261      00
 4262              	.LASF106:
 4263 0419 4379446D 		.ascii	"CyDmaTdFree\000"
 4263      61546446 
 4263      72656500 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 124


 4264              	.LASF113:
 4265 0425 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS.c\000"
 4265      72617465 
 4265      645F536F 
 4265      75726365 
 4265      5C50536F 
 4266              	.LASF14:
 4267 0444 63686172 		.ascii	"char\000"
 4267      00
 4268              	.LASF47:
 4269 0449 656E6162 		.ascii	"enableInterrupts\000"
 4269      6C65496E 
 4269      74657272 
 4269      75707473 
 4269      00
 4270              	.LASF59:
 4271 045a 65704E75 		.ascii	"epNumber\000"
 4271      6D626572 
 4271      00
 4272              	.LASF96:
 4273 0463 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4273      74657243 
 4273      72697469 
 4273      63616C53 
 4273      65637469 
 4274              	.LASF25:
 4275 047a 62756666 		.ascii	"buffOffset\000"
 4275      4F666673 
 4275      657400
 4276              	.LASF3:
 4277 0485 73686F72 		.ascii	"short unsigned int\000"
 4277      7420756E 
 4277      7369676E 
 4277      65642069 
 4277      6E7400
 4278              	.LASF29:
 4279 0498 6570436E 		.ascii	"epCnt0\000"
 4279      743000
 4280              	.LASF9:
 4281 049f 75696E74 		.ascii	"uint8\000"
 4281      3800
 4282              	.LASF53:
 4283 04a5 63723152 		.ascii	"cr1Reg\000"
 4283      656700
 4284              	.LASF30:
 4285 04ac 6570436E 		.ascii	"epCnt1\000"
 4285      743100
 4286              	.LASF82:
 4287 04b3 55534246 		.ascii	"USBFS_DisableSofInt\000"
 4287      535F4469 
 4287      7361626C 
 4287      65536F66 
 4287      496E7400 
 4288              	.LASF21:
 4289 04c7 68774570 		.ascii	"hwEpState\000"
 4289      53746174 
 4289      6500
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 125


 4290              	.LASF56:
 4291 04d1 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
 4291      535F4765 
 4291      74496E74 
 4291      65726661 
 4291      63655365 
 4292              	.LASF11:
 4293 04eb 75696E74 		.ascii	"uint32\000"
 4293      333200
 4294              	.LASF15:
 4295 04f2 72656738 		.ascii	"reg8\000"
 4295      00
 4296              	.LASF5:
 4297 04f7 6C6F6E67 		.ascii	"long unsigned int\000"
 4297      20756E73 
 4297      69676E65 
 4297      6420696E 
 4297      7400
 4298              	.LASF84:
 4299 0509 55534246 		.ascii	"USBFS_device\000"
 4299      535F6465 
 4299      76696365 
 4299      00
 4300              	.LASF92:
 4301 0516 55534246 		.ascii	"USBFS_EP\000"
 4301      535F4550 
 4301      00
 4302              	.LASF94:
 4303 051f 55534246 		.ascii	"USBFS_DmaTd\000"
 4303      535F446D 
 4303      61546400 
 4304              	.LASF69:
 4305 052b 55534246 		.ascii	"USBFS_EnableOutEP\000"
 4305      535F456E 
 4305      61626C65 
 4305      4F757445 
 4305      5000
 4306              	.LASF66:
 4307 053d 55534246 		.ascii	"USBFS_LoadInEP\000"
 4307      535F4C6F 
 4307      6164496E 
 4307      455000
 4308              	.LASF26:
 4309 054c 62756666 		.ascii	"bufferSize\000"
 4309      65725369 
 4309      7A6500
 4310              	.LASF101:
 4311 0557 43794465 		.ascii	"CyDelayCycles\000"
 4311      6C617943 
 4311      79636C65 
 4311      7300
 4312              	.LASF54:
 4313 0565 55534246 		.ascii	"USBFS_CheckActivity\000"
 4313      535F4368 
 4313      65636B41 
 4313      63746976 
 4313      69747900 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 126


 4314              	.LASF100:
 4315 0579 4379496E 		.ascii	"CyIntSetVector\000"
 4315      74536574 
 4315      56656374 
 4315      6F7200
 4316              	.LASF55:
 4317 0588 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 4317      535F4973 
 4317      436F6E66 
 4317      69677572 
 4317      6174696F 
 4318              	.LASF93:
 4319 05a5 55534246 		.ascii	"USBFS_DmaChan\000"
 4319      535F446D 
 4319      61436861 
 4319      6E00
 4320              	.LASF70:
 4321 05b3 55534246 		.ascii	"USBFS_DisableOutEP\000"
 4321      535F4469 
 4321      7361626C 
 4321      654F7574 
 4321      455000
 4322              	.LASF102:
 4323 05c6 55534246 		.ascii	"USBFS_ep1_DmaInitialize\000"
 4323      535F6570 
 4323      315F446D 
 4323      61496E69 
 4323      7469616C 
 4324              	.LASF13:
 4325 05de 646F7562 		.ascii	"double\000"
 4325      6C6500
 4326              	.LASF88:
 4327 05e5 55534246 		.ascii	"USBFS_deviceStatus\000"
 4327      535F6465 
 4327      76696365 
 4327      53746174 
 4327      757300
 4328              	.LASF52:
 4329 05f8 55534246 		.ascii	"USBFS_Start\000"
 4329      535F5374 
 4329      61727400 
 4330              	.LASF40:
 4331 0604 72775261 		.ascii	"rwRaMsb\000"
 4331      4D736200 
 4332              	.LASF111:
 4333 060c 4379446D 		.ascii	"CyDmaChEnable\000"
 4333      61436845 
 4333      6E61626C 
 4333      6500
 4334              	.LASF112:
 4335 061a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4335      43313120 
 4335      352E342E 
 4335      31203230 
 4335      31363036 
 4336 064d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4336      20726576 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\cctpJDzZ.s 			page 127


 4336      6973696F 
 4336      6E203233 
 4336      37373135 
 4337 0680 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4337      66756E63 
 4337      74696F6E 
 4337      2D736563 
 4337      74696F6E 
 4338              	.LASF48:
 4339 06a8 55534246 		.ascii	"USBFS_Init\000"
 4339      535F496E 
 4339      697400
 4340              	.LASF72:
 4341 06b3 62537461 		.ascii	"bState\000"
 4341      746500
 4342              	.LASF95:
 4343 06ba 55534246 		.ascii	"USBFS_lastPacketSize\000"
 4343      535F6C61 
 4343      73745061 
 4343      636B6574 
 4343      53697A65 
 4344              	.LASF90:
 4345 06cf 55534246 		.ascii	"USBFS_interfaceSetting\000"
 4345      535F696E 
 4345      74657266 
 4345      61636553 
 4345      65747469 
 4346              	.LASF20:
 4347 06e6 61706945 		.ascii	"apiEpState\000"
 4347      70537461 
 4347      746500
 4348              	.LASF79:
 4349 06f1 55534246 		.ascii	"USBFS_GetDeviceAddress\000"
 4349      535F4765 
 4349      74446576 
 4349      69636541 
 4349      64647265 
 4350              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
