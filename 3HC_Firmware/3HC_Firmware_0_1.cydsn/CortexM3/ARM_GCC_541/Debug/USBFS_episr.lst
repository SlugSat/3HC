ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_EP_1_ISR, %function
  25              	USBFS_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 2


  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 3


  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBFS_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  65              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBFS_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBFS_EP_2_ISR, %function
  71              	USBFS_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 4


 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  78              		.loc 1 137 0
  79 0000 0222     		movs	r2, #2
  80 0002 0A4B     		ldr	r3, .L7
  81 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 5


 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  82              		.loc 1 148 0
  83 0006 0F3B     		subs	r3, r3, #15
  84 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  85              		.loc 1 151 0
  86 000c 084B     		ldr	r3, .L7+4
  87 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  88 0010 03F00303 		and	r3, r3, #3
  89 0014 012B     		cmp	r3, #1
  90 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  91              		.loc 1 153 0
  92 0018 054A     		ldr	r2, .L7+4
  93 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  94 001c 83F08003 		eor	r3, r3, #128
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		movs	r2, #1
  99 0024 024B     		ldr	r3, .L7+4
 100 0026 5A76     		strb	r2, [r3, #25]
 101 0028 7047     		bx	lr
 102              	.L8:
 103 002a 00BF     		.align	2
 104              	.L7:
 105 002c 0B600040 		.word	1073766411
 106 0030 00000000 		.word	USBFS_EP
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 110              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 111              		.align	2
 112              		.global	USBFS_BUS_RESET_ISR
 113              		.thumb
 114              		.thumb_func
 115              		.type	USBFS_BUS_RESET_ISR, %function
 116              	USBFS_BUS_RESET_ISR:
 117              	.LFB2:
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 6


 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 7


 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 8


 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 9


 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 10


 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 11


 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 12


 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 13


 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 14


 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 15


 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 118              		.loc 1 723 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 16


 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 126              		.loc 1 734 0
 127 0002 FFF7FEFF 		bl	USBFS_ReInitComponent
 128              	.LVL0:
 129 0006 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 133              		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 134              		.align	2
 135              		.global	USBFS_ARB_ISR
 136              		.thumb
 137              		.thumb_func
 138              		.type	USBFS_ARB_ISR, %function
 139              	USBFS_ARB_ISR:
 140              	.LFB3:
 735:Generated_Source\PSoC5/USBFS_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_episr.c **** }
 740:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC5/USBFS_episr.c **** 
 742:Generated_Source\PSoC5/USBFS_episr.c **** 
 743:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:Generated_Source\PSoC5/USBFS_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC5/USBFS_episr.c **** *
 748:Generated_Source\PSoC5/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC5/USBFS_episr.c **** *
 750:Generated_Source\PSoC5/USBFS_episr.c **** *
 751:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:Generated_Source\PSoC5/USBFS_episr.c **** {
 754:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC5/USBFS_episr.c **** 
 758:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC5/USBFS_episr.c **** 
 760:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC5/USBFS_episr.c **** 
 762:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC5/USBFS_episr.c **** 
 764:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC5/USBFS_episr.c **** 
 766:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 767:Generated_Source\PSoC5/USBFS_episr.c **** 
 768:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC5/USBFS_episr.c **** }
 772:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 17


 773:Generated_Source\PSoC5/USBFS_episr.c **** 
 774:Generated_Source\PSoC5/USBFS_episr.c **** 
 775:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC5/USBFS_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:Generated_Source\PSoC5/USBFS_episr.c ****     ************************************************************************//**
 779:Generated_Source\PSoC5/USBFS_episr.c ****     *
 780:Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC5/USBFS_episr.c ****     *
 782:Generated_Source\PSoC5/USBFS_episr.c ****     *
 783:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:Generated_Source\PSoC5/USBFS_episr.c ****     {
 141              		.loc 1 785 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 70B4     		push	{r4, r5, r6}
 147              		.cfi_def_cfa_offset 12
 148              		.cfi_offset 4, -12
 149              		.cfi_offset 5, -8
 150              		.cfi_offset 6, -4
 151              	.LVL1:
 786:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 arbIntrStatus;
 787:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 epStatus;
 788:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 789:Generated_Source\PSoC5/USBFS_episr.c **** 
 790:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:Generated_Source\PSoC5/USBFS_episr.c **** 
 794:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC5/USBFS_episr.c **** 
 796:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC5/USBFS_episr.c **** 
 798:Generated_Source\PSoC5/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC5/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 152              		.loc 1 799 0
 153 0002 234B     		ldr	r3, .L18
 154 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 155 0006 E4B2     		uxtb	r4, r4
 156              	.LVL2:
 788:Generated_Source\PSoC5/USBFS_episr.c **** 
 157              		.loc 1 788 0
 158 0008 0123     		movs	r3, #1
 800:Generated_Source\PSoC5/USBFS_episr.c **** 
 801:Generated_Source\PSoC5/USBFS_episr.c ****         while (0u != arbIntrStatus)
 159              		.loc 1 801 0
 160 000a 3DE0     		b	.L12
 161              	.LVL3:
 162              	.L16:
 802:Generated_Source\PSoC5/USBFS_episr.c ****         {
 803:Generated_Source\PSoC5/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC5/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 163              		.loc 1 804 0
 164 000c 14F0010F 		tst	r4, #1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 18


 165 0010 37D0     		beq	.L13
 805:Generated_Source\PSoC5/USBFS_episr.c ****             {
 806:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC5/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 166              		.loc 1 807 0
 167 0012 1A46     		mov	r2, r3
 168 0014 1901     		lsls	r1, r3, #4
 169 0016 1F48     		ldr	r0, .L18+4
 170 0018 0844     		add	r0, r0, r1
 171 001a 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 172 001c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 173 001e 0140     		ands	r1, r1, r0
 174              	.LVL4:
 808:Generated_Source\PSoC5/USBFS_episr.c **** 
 809:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 175              		.loc 1 810 0
 176 0020 11F0010F 		tst	r1, #1
 177 0024 17D0     		beq	.L14
 811:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 812:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 178              		.loc 1 812 0
 179 0026 03EB4305 		add	r5, r3, r3, lsl #1
 180 002a A800     		lsls	r0, r5, #2
 181 002c 1A4D     		ldr	r5, .L18+8
 182 002e 2844     		add	r0, r0, r5
 183 0030 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 184 0032 10F0800F 		tst	r0, #128
 185 0036 0ED0     		beq	.L14
 813:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 814:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_ARB_EPX_CFG_IN_DATA_RDY
 186              		.loc 1 815 0
 187 0038 164D     		ldr	r5, .L18+4
 188 003a 1E01     		lsls	r6, r3, #4
 189 003c A85D     		ldrb	r0, [r5, r6]	@ zero_extendqisi2
 190 003e 00F0FE00 		and	r0, r0, #254
 191 0042 A855     		strb	r0, [r5, r6]
 816:Generated_Source\PSoC5/USBFS_episr.c **** 
 817:Generated_Source\PSoC5/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC5/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC5/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 822:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 824:Generated_Source\PSoC5/USBFS_episr.c ****                             else
 825:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 826:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 828:Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC5/USBFS_episr.c **** 
 831:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 192              		.loc 1 832 0
 193 0044 03EB4305 		add	r5, r3, r3, lsl #1
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 19


 194 0048 A800     		lsls	r0, r5, #2
 195 004a 134D     		ldr	r5, .L18+8
 196 004c 2844     		add	r0, r0, r5
 197 004e 4579     		ldrb	r5, [r0, #5]	@ zero_extendqisi2
 198 0050 EDB2     		uxtb	r5, r5
 199 0052 1248     		ldr	r0, .L18+12
 200 0054 8555     		strb	r5, [r0, r6]
 201              	.L14:
 833:Generated_Source\PSoC5/USBFS_episr.c **** 
 834:Generated_Source\PSoC5/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC5/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:Generated_Source\PSoC5/USBFS_episr.c ****                         {
 837:Generated_Source\PSoC5/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC5/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:Generated_Source\PSoC5/USBFS_episr.c ****                         }
 840:Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 842:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 843:Generated_Source\PSoC5/USBFS_episr.c **** 
 844:Generated_Source\PSoC5/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 202              		.loc 1 846 0
 203 0056 11F0020F 		tst	r1, #2
 204 005a 0FD0     		beq	.L15
 847:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 848:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 205              		.loc 1 848 0
 206 005c 02EB4205 		add	r5, r2, r2, lsl #1
 207 0060 A800     		lsls	r0, r5, #2
 208 0062 0D4D     		ldr	r5, .L18+8
 209 0064 2844     		add	r0, r0, r5
 210 0066 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 211 0068 10F0800F 		tst	r0, #128
 212 006c 06D1     		bne	.L15
 849:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 850:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 213              		.loc 1 851 0
 214 006e 02EB4205 		add	r5, r2, r2, lsl #1
 215 0072 A800     		lsls	r0, r5, #2
 216 0074 084D     		ldr	r5, .L18+8
 217 0076 2844     		add	r0, r0, r5
 218 0078 0025     		movs	r5, #0
 219 007a 4570     		strb	r5, [r0, #1]
 220              	.L15:
 852:Generated_Source\PSoC5/USBFS_episr.c **** 
 853:Generated_Source\PSoC5/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 855:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 856:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:Generated_Source\PSoC5/USBFS_episr.c **** 
 858:Generated_Source\PSoC5/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 862:Generated_Source\PSoC5/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 20


 863:Generated_Source\PSoC5/USBFS_episr.c **** 
 864:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCntBackup[ep]
 866:Generated_Source\PSoC5/USBFS_episr.c **** 
 867:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC5/USBFS_episr.c **** 
 870:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC5/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC5/USBFS_episr.c ****                     */
 873:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC5/USBFS_episr.c **** 
 875:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                                    
 879:Generated_Source\PSoC5/USBFS_episr.c **** 
 880:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 883:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:Generated_Source\PSoC5/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 886:Generated_Source\PSoC5/USBFS_episr.c **** 
 887:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 891:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 892:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 893:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC5/USBFS_episr.c **** 
 895:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC5/USBFS_episr.c ****                     
 898:Generated_Source\PSoC5/USBFS_episr.c ****                     
 899:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC5/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC5/USBFS_episr.c ****                     
 902:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 904:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 905:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 907:Generated_Source\PSoC5/USBFS_episr.c ****             
 908:Generated_Source\PSoC5/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 910:Generated_Source\PSoC5/USBFS_episr.c ****                     
 911:Generated_Source\PSoC5/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC5/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 914:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 915:Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 916:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 917:Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 919:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 21


 920:Generated_Source\PSoC5/USBFS_episr.c **** 
 921:Generated_Source\PSoC5/USBFS_episr.c **** 
 922:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC5/USBFS_episr.c **** 
 924:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC5/USBFS_episr.c **** 
 926:Generated_Source\PSoC5/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 927:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC5/USBFS_episr.c **** 
 930:Generated_Source\PSoC5/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 221              		.loc 1 931 0
 222 007c 1201     		lsls	r2, r2, #4
 223 007e 0848     		ldr	r0, .L18+16
 224 0080 8154     		strb	r1, [r0, r2]
 225              	.LVL5:
 226              	.L13:
 932:Generated_Source\PSoC5/USBFS_episr.c ****             }
 933:Generated_Source\PSoC5/USBFS_episr.c **** 
 934:Generated_Source\PSoC5/USBFS_episr.c ****             ++ep;
 227              		.loc 1 934 0
 228 0082 0133     		adds	r3, r3, #1
 229              	.LVL6:
 230 0084 DBB2     		uxtb	r3, r3
 231              	.LVL7:
 935:Generated_Source\PSoC5/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 232              		.loc 1 935 0
 233 0086 6408     		lsrs	r4, r4, #1
 234              	.LVL8:
 235              	.L12:
 801:Generated_Source\PSoC5/USBFS_episr.c ****         {
 236              		.loc 1 801 0
 237 0088 002C     		cmp	r4, #0
 238 008a BFD1     		bne	.L16
 936:Generated_Source\PSoC5/USBFS_episr.c ****         }
 937:Generated_Source\PSoC5/USBFS_episr.c **** 
 938:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 939:Generated_Source\PSoC5/USBFS_episr.c **** 
 940:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 941:Generated_Source\PSoC5/USBFS_episr.c **** 
 942:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 943:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 944:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 945:Generated_Source\PSoC5/USBFS_episr.c ****     }
 239              		.loc 1 945 0
 240 008c 70BC     		pop	{r4, r5, r6}
 241              		.cfi_restore 6
 242              		.cfi_restore 5
 243              		.cfi_restore 4
 244              		.cfi_def_cfa_offset 0
 245              	.LVL9:
 246 008e 7047     		bx	lr
 247              	.L19:
 248              		.align	2
 249              	.L18:
 250 0090 9F600040 		.word	1073766559
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 22


 251 0094 70600040 		.word	1073766512
 252 0098 00000000 		.word	USBFS_EP
 253 009c FE5F0040 		.word	1073766398
 254 00a0 72600040 		.word	1073766514
 255              		.cfi_endproc
 256              	.LFE3:
 257              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 258              		.text
 259              	.Letext0:
 260              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 261              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 262              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 263              		.section	.debug_info,"",%progbits
 264              	.Ldebug_info0:
 265 0000 42030000 		.4byte	0x342
 266 0004 0400     		.2byte	0x4
 267 0006 00000000 		.4byte	.Ldebug_abbrev0
 268 000a 04       		.byte	0x4
 269 000b 01       		.uleb128 0x1
 270 000c E8000000 		.4byte	.LASF51
 271 0010 0C       		.byte	0xc
 272 0011 67000000 		.4byte	.LASF52
 273 0015 4C020000 		.4byte	.LASF53
 274 0019 00000000 		.4byte	.Ldebug_ranges0+0
 275 001d 00000000 		.4byte	0
 276 0021 00000000 		.4byte	.Ldebug_line0
 277 0025 02       		.uleb128 0x2
 278 0026 01       		.byte	0x1
 279 0027 06       		.byte	0x6
 280 0028 28030000 		.4byte	.LASF0
 281 002c 02       		.uleb128 0x2
 282 002d 01       		.byte	0x1
 283 002e 08       		.byte	0x8
 284 002f DA000000 		.4byte	.LASF1
 285 0033 02       		.uleb128 0x2
 286 0034 02       		.byte	0x2
 287 0035 05       		.byte	0x5
 288 0036 E5020000 		.4byte	.LASF2
 289 003a 02       		.uleb128 0x2
 290 003b 02       		.byte	0x2
 291 003c 07       		.byte	0x7
 292 003d 4E000000 		.4byte	.LASF3
 293 0041 02       		.uleb128 0x2
 294 0042 04       		.byte	0x4
 295 0043 05       		.byte	0x5
 296 0044 04030000 		.4byte	.LASF4
 297 0048 02       		.uleb128 0x2
 298 0049 04       		.byte	0x4
 299 004a 07       		.byte	0x7
 300 004b 86010000 		.4byte	.LASF5
 301 004f 02       		.uleb128 0x2
 302 0050 08       		.byte	0x8
 303 0051 05       		.byte	0x5
 304 0052 BE020000 		.4byte	.LASF6
 305 0056 02       		.uleb128 0x2
 306 0057 08       		.byte	0x8
 307 0058 07       		.byte	0x7
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 23


 308 0059 14020000 		.4byte	.LASF7
 309 005d 03       		.uleb128 0x3
 310 005e 04       		.byte	0x4
 311 005f 05       		.byte	0x5
 312 0060 696E7400 		.ascii	"int\000"
 313 0064 02       		.uleb128 0x2
 314 0065 04       		.byte	0x4
 315 0066 07       		.byte	0x7
 316 0067 FF010000 		.4byte	.LASF8
 317 006b 04       		.uleb128 0x4
 318 006c F4020000 		.4byte	.LASF9
 319 0070 02       		.byte	0x2
 320 0071 E401     		.2byte	0x1e4
 321 0073 2C000000 		.4byte	0x2c
 322 0077 04       		.uleb128 0x4
 323 0078 DE010000 		.4byte	.LASF10
 324 007c 02       		.byte	0x2
 325 007d E501     		.2byte	0x1e5
 326 007f 3A000000 		.4byte	0x3a
 327 0083 02       		.uleb128 0x2
 328 0084 04       		.byte	0x4
 329 0085 04       		.byte	0x4
 330 0086 2B000000 		.4byte	.LASF11
 331 008a 02       		.uleb128 0x2
 332 008b 08       		.byte	0x8
 333 008c 04       		.byte	0x4
 334 008d B0010000 		.4byte	.LASF12
 335 0091 02       		.uleb128 0x2
 336 0092 01       		.byte	0x1
 337 0093 08       		.byte	0x8
 338 0094 D5020000 		.4byte	.LASF13
 339 0098 04       		.uleb128 0x4
 340 0099 76010000 		.4byte	.LASF14
 341 009d 02       		.byte	0x2
 342 009e 8E02     		.2byte	0x28e
 343 00a0 A4000000 		.4byte	0xa4
 344 00a4 05       		.uleb128 0x5
 345 00a5 6B000000 		.4byte	0x6b
 346 00a9 02       		.uleb128 0x2
 347 00aa 08       		.byte	0x8
 348 00ab 04       		.byte	0x4
 349 00ac 1C030000 		.4byte	.LASF15
 350 00b0 02       		.uleb128 0x2
 351 00b1 04       		.byte	0x4
 352 00b2 07       		.byte	0x7
 353 00b3 CC020000 		.4byte	.LASF16
 354 00b7 06       		.uleb128 0x6
 355 00b8 0C       		.byte	0xc
 356 00b9 03       		.byte	0x3
 357 00ba 8D       		.byte	0x8d
 358 00bb 2C010000 		.4byte	0x12c
 359 00bf 07       		.uleb128 0x7
 360 00c0 B0020000 		.4byte	.LASF17
 361 00c4 03       		.byte	0x3
 362 00c5 8F       		.byte	0x8f
 363 00c6 6B000000 		.4byte	0x6b
 364 00ca 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 24


 365 00cb 07       		.uleb128 0x7
 366 00cc 7B010000 		.4byte	.LASF18
 367 00d0 03       		.byte	0x3
 368 00d1 90       		.byte	0x90
 369 00d2 6B000000 		.4byte	0x6b
 370 00d6 01       		.byte	0x1
 371 00d7 07       		.uleb128 0x7
 372 00d8 2B020000 		.4byte	.LASF19
 373 00dc 03       		.byte	0x3
 374 00dd 91       		.byte	0x91
 375 00de 6B000000 		.4byte	0x6b
 376 00e2 02       		.byte	0x2
 377 00e3 07       		.uleb128 0x7
 378 00e4 D1000000 		.4byte	.LASF20
 379 00e8 03       		.byte	0x3
 380 00e9 92       		.byte	0x92
 381 00ea 6B000000 		.4byte	0x6b
 382 00ee 03       		.byte	0x3
 383 00ef 07       		.uleb128 0x7
 384 00f0 98010000 		.4byte	.LASF21
 385 00f4 03       		.byte	0x3
 386 00f5 93       		.byte	0x93
 387 00f6 6B000000 		.4byte	0x6b
 388 00fa 04       		.byte	0x4
 389 00fb 07       		.uleb128 0x7
 390 00fc B7020000 		.4byte	.LASF22
 391 0100 03       		.byte	0x3
 392 0101 94       		.byte	0x94
 393 0102 6B000000 		.4byte	0x6b
 394 0106 05       		.byte	0x5
 395 0107 07       		.uleb128 0x7
 396 0108 CB010000 		.4byte	.LASF23
 397 010c 03       		.byte	0x3
 398 010d 95       		.byte	0x95
 399 010e 77000000 		.4byte	0x77
 400 0112 06       		.byte	0x6
 401 0113 07       		.uleb128 0x7
 402 0114 DA020000 		.4byte	.LASF24
 403 0118 03       		.byte	0x3
 404 0119 96       		.byte	0x96
 405 011a 77000000 		.4byte	0x77
 406 011e 08       		.byte	0x8
 407 011f 07       		.uleb128 0x7
 408 0120 FA020000 		.4byte	.LASF25
 409 0124 03       		.byte	0x3
 410 0125 97       		.byte	0x97
 411 0126 6B000000 		.4byte	0x6b
 412 012a 0A       		.byte	0xa
 413 012b 00       		.byte	0
 414 012c 08       		.uleb128 0x8
 415 012d 8C000000 		.4byte	.LASF26
 416 0131 03       		.byte	0x3
 417 0132 98       		.byte	0x98
 418 0133 B7000000 		.4byte	0xb7
 419 0137 06       		.uleb128 0x6
 420 0138 10       		.byte	0x10
 421 0139 03       		.byte	0x3
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 25


 422 013a D4       		.byte	0xd4
 423 013b 70010000 		.4byte	0x170
 424 013f 07       		.uleb128 0x7
 425 0140 C3000000 		.4byte	.LASF27
 426 0144 03       		.byte	0x3
 427 0145 D6       		.byte	0xd6
 428 0146 6B000000 		.4byte	0x6b
 429 014a 00       		.byte	0
 430 014b 07       		.uleb128 0x7
 431 014c CA000000 		.4byte	.LASF28
 432 0150 03       		.byte	0x3
 433 0151 D7       		.byte	0xd7
 434 0152 6B000000 		.4byte	0x6b
 435 0156 01       		.byte	0x1
 436 0157 07       		.uleb128 0x7
 437 0158 1C000000 		.4byte	.LASF29
 438 015c 03       		.byte	0x3
 439 015d D8       		.byte	0xd8
 440 015e 6B000000 		.4byte	0x6b
 441 0162 02       		.byte	0x2
 442 0163 09       		.uleb128 0x9
 443 0164 67617000 		.ascii	"gap\000"
 444 0168 03       		.byte	0x3
 445 0169 D9       		.byte	0xd9
 446 016a 70010000 		.4byte	0x170
 447 016e 03       		.byte	0x3
 448 016f 00       		.byte	0
 449 0170 0A       		.uleb128 0xa
 450 0171 6B000000 		.4byte	0x6b
 451 0175 80010000 		.4byte	0x180
 452 0179 0B       		.uleb128 0xb
 453 017a B0000000 		.4byte	0xb0
 454 017e 0C       		.byte	0xc
 455 017f 00       		.byte	0
 456 0180 08       		.uleb128 0x8
 457 0181 B7010000 		.4byte	.LASF30
 458 0185 03       		.byte	0x3
 459 0186 DA       		.byte	0xda
 460 0187 37010000 		.4byte	0x137
 461 018b 06       		.uleb128 0x6
 462 018c 10       		.byte	0x10
 463 018d 03       		.byte	0x3
 464 018e E6       		.byte	0xe6
 465 018f 0C020000 		.4byte	0x20c
 466 0193 07       		.uleb128 0x7
 467 0194 61000000 		.4byte	.LASF31
 468 0198 03       		.byte	0x3
 469 0199 E8       		.byte	0xe8
 470 019a 6B000000 		.4byte	0x6b
 471 019e 00       		.byte	0
 472 019f 07       		.uleb128 0x7
 473 01a0 44020000 		.4byte	.LASF32
 474 01a4 03       		.byte	0x3
 475 01a5 E9       		.byte	0xe9
 476 01a6 6B000000 		.4byte	0x6b
 477 01aa 01       		.byte	0x1
 478 01ab 07       		.uleb128 0x7
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 26


 479 01ac 9D010000 		.4byte	.LASF33
 480 01b0 03       		.byte	0x3
 481 01b1 EA       		.byte	0xea
 482 01b2 6B000000 		.4byte	0x6b
 483 01b6 02       		.byte	0x2
 484 01b7 07       		.uleb128 0x7
 485 01b8 31000000 		.4byte	.LASF34
 486 01bc 03       		.byte	0x3
 487 01bd EB       		.byte	0xeb
 488 01be 6B000000 		.4byte	0x6b
 489 01c2 03       		.byte	0x3
 490 01c3 07       		.uleb128 0x7
 491 01c4 AB010000 		.4byte	.LASF35
 492 01c8 03       		.byte	0x3
 493 01c9 EC       		.byte	0xec
 494 01ca 6B000000 		.4byte	0x6b
 495 01ce 04       		.byte	0x4
 496 01cf 07       		.uleb128 0x7
 497 01d0 D6010000 		.4byte	.LASF36
 498 01d4 03       		.byte	0x3
 499 01d5 ED       		.byte	0xed
 500 01d6 6B000000 		.4byte	0x6b
 501 01da 05       		.byte	0x5
 502 01db 07       		.uleb128 0x7
 503 01dc EF020000 		.4byte	.LASF37
 504 01e0 03       		.byte	0x3
 505 01e1 EE       		.byte	0xee
 506 01e2 6B000000 		.4byte	0x6b
 507 01e6 06       		.byte	0x6
 508 01e7 07       		.uleb128 0x7
 509 01e8 0C020000 		.4byte	.LASF38
 510 01ec 03       		.byte	0x3
 511 01ed EF       		.byte	0xef
 512 01ee 6B000000 		.4byte	0x6b
 513 01f2 07       		.byte	0x7
 514 01f3 07       		.uleb128 0x7
 515 01f4 FA010000 		.4byte	.LASF39
 516 01f8 03       		.byte	0x3
 517 01f9 F0       		.byte	0xf0
 518 01fa 6B000000 		.4byte	0x6b
 519 01fe 08       		.byte	0x8
 520 01ff 09       		.uleb128 0x9
 521 0200 67617000 		.ascii	"gap\000"
 522 0204 03       		.byte	0x3
 523 0205 F1       		.byte	0xf1
 524 0206 0C020000 		.4byte	0x20c
 525 020a 09       		.byte	0x9
 526 020b 00       		.byte	0
 527 020c 0A       		.uleb128 0xa
 528 020d 6B000000 		.4byte	0x6b
 529 0211 1C020000 		.4byte	0x21c
 530 0215 0B       		.uleb128 0xb
 531 0216 B0000000 		.4byte	0xb0
 532 021a 06       		.byte	0x6
 533 021b 00       		.byte	0
 534 021c 08       		.uleb128 0x8
 535 021d 3A000000 		.4byte	.LASF40
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 27


 536 0221 03       		.byte	0x3
 537 0222 F2       		.byte	0xf2
 538 0223 8B010000 		.4byte	0x18b
 539 0227 0C       		.uleb128 0xc
 540 0228 90       		.byte	0x90
 541 0229 03       		.byte	0x3
 542 022a 0E01     		.2byte	0x10e
 543 022c 3E020000 		.4byte	0x23e
 544 0230 0D       		.uleb128 0xd
 545 0231 42030000 		.4byte	.LASF41
 546 0235 03       		.byte	0x3
 547 0236 1001     		.2byte	0x110
 548 0238 3E020000 		.4byte	0x23e
 549 023c 00       		.byte	0
 550 023d 00       		.byte	0
 551 023e 0A       		.uleb128 0xa
 552 023f 80010000 		.4byte	0x180
 553 0243 4E020000 		.4byte	0x24e
 554 0247 0B       		.uleb128 0xb
 555 0248 B0000000 		.4byte	0xb0
 556 024c 08       		.byte	0x8
 557 024d 00       		.byte	0
 558 024e 04       		.uleb128 0x4
 559 024f E5010000 		.4byte	.LASF42
 560 0253 03       		.byte	0x3
 561 0254 1101     		.2byte	0x111
 562 0256 27020000 		.4byte	0x227
 563 025a 0C       		.uleb128 0xc
 564 025b 90       		.byte	0x90
 565 025c 03       		.byte	0x3
 566 025d 1401     		.2byte	0x114
 567 025f 71020000 		.4byte	0x271
 568 0263 0D       		.uleb128 0xd
 569 0264 00000000 		.4byte	.LASF43
 570 0268 03       		.byte	0x3
 571 0269 1601     		.2byte	0x116
 572 026b 71020000 		.4byte	0x271
 573 026f 00       		.byte	0
 574 0270 00       		.byte	0
 575 0271 0A       		.uleb128 0xa
 576 0272 1C020000 		.4byte	0x21c
 577 0276 81020000 		.4byte	0x281
 578 027a 0B       		.uleb128 0xb
 579 027b B0000000 		.4byte	0xb0
 580 027f 08       		.byte	0x8
 581 0280 00       		.byte	0
 582 0281 04       		.uleb128 0x4
 583 0282 9B020000 		.4byte	.LASF44
 584 0286 03       		.byte	0x3
 585 0287 1701     		.2byte	0x117
 586 0289 5A020000 		.4byte	0x25a
 587 028d 0E       		.uleb128 0xe
 588 028e 35020000 		.4byte	.LASF45
 589 0292 01       		.byte	0x1
 590 0293 25       		.byte	0x25
 591 0294 00000000 		.4byte	.LFB0
 592 0298 30000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 28


 593 029c 01       		.uleb128 0x1
 594 029d 9C       		.byte	0x9c
 595 029e 0E       		.uleb128 0xe
 596 029f 0D030000 		.4byte	.LASF46
 597 02a3 01       		.byte	0x1
 598 02a4 78       		.byte	0x78
 599 02a5 00000000 		.4byte	.LFB1
 600 02a9 34000000 		.4byte	.LFE1-.LFB1
 601 02ad 01       		.uleb128 0x1
 602 02ae 9C       		.byte	0x9c
 603 02af 0F       		.uleb128 0xf
 604 02b0 A1000000 		.4byte	.LASF47
 605 02b4 01       		.byte	0x1
 606 02b5 D202     		.2byte	0x2d2
 607 02b7 00000000 		.4byte	.LFB2
 608 02bb 08000000 		.4byte	.LFE2-.LFB2
 609 02bf 01       		.uleb128 0x1
 610 02c0 9C       		.byte	0x9c
 611 02c1 CF020000 		.4byte	0x2cf
 612 02c5 10       		.uleb128 0x10
 613 02c6 06000000 		.4byte	.LVL0
 614 02ca 3A030000 		.4byte	0x33a
 615 02ce 00       		.byte	0
 616 02cf 0F       		.uleb128 0xf
 617 02d0 34030000 		.4byte	.LASF48
 618 02d4 01       		.byte	0x1
 619 02d5 1003     		.2byte	0x310
 620 02d7 00000000 		.4byte	.LFB3
 621 02db A4000000 		.4byte	.LFE3-.LFB3
 622 02df 01       		.uleb128 0x1
 623 02e0 9C       		.byte	0x9c
 624 02e1 15030000 		.4byte	0x315
 625 02e5 11       		.uleb128 0x11
 626 02e6 B5000000 		.4byte	.LASF49
 627 02ea 01       		.byte	0x1
 628 02eb 1203     		.2byte	0x312
 629 02ed 6B000000 		.4byte	0x6b
 630 02f1 00000000 		.4byte	.LLST0
 631 02f5 11       		.uleb128 0x11
 632 02f6 22000000 		.4byte	.LASF50
 633 02fa 01       		.byte	0x1
 634 02fb 1303     		.2byte	0x313
 635 02fd 6B000000 		.4byte	0x6b
 636 0301 13000000 		.4byte	.LLST1
 637 0305 12       		.uleb128 0x12
 638 0306 657000   		.ascii	"ep\000"
 639 0309 01       		.byte	0x1
 640 030a 1403     		.2byte	0x314
 641 030c 6B000000 		.4byte	0x6b
 642 0310 26000000 		.4byte	.LLST2
 643 0314 00       		.byte	0
 644 0315 0A       		.uleb128 0xa
 645 0316 25030000 		.4byte	0x325
 646 031a 25030000 		.4byte	0x325
 647 031e 0B       		.uleb128 0xb
 648 031f B0000000 		.4byte	0xb0
 649 0323 08       		.byte	0x8
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 29


 650 0324 00       		.byte	0
 651 0325 05       		.uleb128 0x5
 652 0326 2C010000 		.4byte	0x12c
 653 032a 13       		.uleb128 0x13
 654 032b A2010000 		.4byte	.LASF54
 655 032f 04       		.byte	0x4
 656 0330 79       		.byte	0x79
 657 0331 35030000 		.4byte	0x335
 658 0335 05       		.uleb128 0x5
 659 0336 15030000 		.4byte	0x315
 660 033a 14       		.uleb128 0x14
 661 033b 06000000 		.4byte	.LASF55
 662 033f 06000000 		.4byte	.LASF55
 663 0343 04       		.byte	0x4
 664 0344 A4       		.byte	0xa4
 665 0345 00       		.byte	0
 666              		.section	.debug_abbrev,"",%progbits
 667              	.Ldebug_abbrev0:
 668 0000 01       		.uleb128 0x1
 669 0001 11       		.uleb128 0x11
 670 0002 01       		.byte	0x1
 671 0003 25       		.uleb128 0x25
 672 0004 0E       		.uleb128 0xe
 673 0005 13       		.uleb128 0x13
 674 0006 0B       		.uleb128 0xb
 675 0007 03       		.uleb128 0x3
 676 0008 0E       		.uleb128 0xe
 677 0009 1B       		.uleb128 0x1b
 678 000a 0E       		.uleb128 0xe
 679 000b 55       		.uleb128 0x55
 680 000c 17       		.uleb128 0x17
 681 000d 11       		.uleb128 0x11
 682 000e 01       		.uleb128 0x1
 683 000f 10       		.uleb128 0x10
 684 0010 17       		.uleb128 0x17
 685 0011 00       		.byte	0
 686 0012 00       		.byte	0
 687 0013 02       		.uleb128 0x2
 688 0014 24       		.uleb128 0x24
 689 0015 00       		.byte	0
 690 0016 0B       		.uleb128 0xb
 691 0017 0B       		.uleb128 0xb
 692 0018 3E       		.uleb128 0x3e
 693 0019 0B       		.uleb128 0xb
 694 001a 03       		.uleb128 0x3
 695 001b 0E       		.uleb128 0xe
 696 001c 00       		.byte	0
 697 001d 00       		.byte	0
 698 001e 03       		.uleb128 0x3
 699 001f 24       		.uleb128 0x24
 700 0020 00       		.byte	0
 701 0021 0B       		.uleb128 0xb
 702 0022 0B       		.uleb128 0xb
 703 0023 3E       		.uleb128 0x3e
 704 0024 0B       		.uleb128 0xb
 705 0025 03       		.uleb128 0x3
 706 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 30


 707 0027 00       		.byte	0
 708 0028 00       		.byte	0
 709 0029 04       		.uleb128 0x4
 710 002a 16       		.uleb128 0x16
 711 002b 00       		.byte	0
 712 002c 03       		.uleb128 0x3
 713 002d 0E       		.uleb128 0xe
 714 002e 3A       		.uleb128 0x3a
 715 002f 0B       		.uleb128 0xb
 716 0030 3B       		.uleb128 0x3b
 717 0031 05       		.uleb128 0x5
 718 0032 49       		.uleb128 0x49
 719 0033 13       		.uleb128 0x13
 720 0034 00       		.byte	0
 721 0035 00       		.byte	0
 722 0036 05       		.uleb128 0x5
 723 0037 35       		.uleb128 0x35
 724 0038 00       		.byte	0
 725 0039 49       		.uleb128 0x49
 726 003a 13       		.uleb128 0x13
 727 003b 00       		.byte	0
 728 003c 00       		.byte	0
 729 003d 06       		.uleb128 0x6
 730 003e 13       		.uleb128 0x13
 731 003f 01       		.byte	0x1
 732 0040 0B       		.uleb128 0xb
 733 0041 0B       		.uleb128 0xb
 734 0042 3A       		.uleb128 0x3a
 735 0043 0B       		.uleb128 0xb
 736 0044 3B       		.uleb128 0x3b
 737 0045 0B       		.uleb128 0xb
 738 0046 01       		.uleb128 0x1
 739 0047 13       		.uleb128 0x13
 740 0048 00       		.byte	0
 741 0049 00       		.byte	0
 742 004a 07       		.uleb128 0x7
 743 004b 0D       		.uleb128 0xd
 744 004c 00       		.byte	0
 745 004d 03       		.uleb128 0x3
 746 004e 0E       		.uleb128 0xe
 747 004f 3A       		.uleb128 0x3a
 748 0050 0B       		.uleb128 0xb
 749 0051 3B       		.uleb128 0x3b
 750 0052 0B       		.uleb128 0xb
 751 0053 49       		.uleb128 0x49
 752 0054 13       		.uleb128 0x13
 753 0055 38       		.uleb128 0x38
 754 0056 0B       		.uleb128 0xb
 755 0057 00       		.byte	0
 756 0058 00       		.byte	0
 757 0059 08       		.uleb128 0x8
 758 005a 16       		.uleb128 0x16
 759 005b 00       		.byte	0
 760 005c 03       		.uleb128 0x3
 761 005d 0E       		.uleb128 0xe
 762 005e 3A       		.uleb128 0x3a
 763 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 31


 764 0060 3B       		.uleb128 0x3b
 765 0061 0B       		.uleb128 0xb
 766 0062 49       		.uleb128 0x49
 767 0063 13       		.uleb128 0x13
 768 0064 00       		.byte	0
 769 0065 00       		.byte	0
 770 0066 09       		.uleb128 0x9
 771 0067 0D       		.uleb128 0xd
 772 0068 00       		.byte	0
 773 0069 03       		.uleb128 0x3
 774 006a 08       		.uleb128 0x8
 775 006b 3A       		.uleb128 0x3a
 776 006c 0B       		.uleb128 0xb
 777 006d 3B       		.uleb128 0x3b
 778 006e 0B       		.uleb128 0xb
 779 006f 49       		.uleb128 0x49
 780 0070 13       		.uleb128 0x13
 781 0071 38       		.uleb128 0x38
 782 0072 0B       		.uleb128 0xb
 783 0073 00       		.byte	0
 784 0074 00       		.byte	0
 785 0075 0A       		.uleb128 0xa
 786 0076 01       		.uleb128 0x1
 787 0077 01       		.byte	0x1
 788 0078 49       		.uleb128 0x49
 789 0079 13       		.uleb128 0x13
 790 007a 01       		.uleb128 0x1
 791 007b 13       		.uleb128 0x13
 792 007c 00       		.byte	0
 793 007d 00       		.byte	0
 794 007e 0B       		.uleb128 0xb
 795 007f 21       		.uleb128 0x21
 796 0080 00       		.byte	0
 797 0081 49       		.uleb128 0x49
 798 0082 13       		.uleb128 0x13
 799 0083 2F       		.uleb128 0x2f
 800 0084 0B       		.uleb128 0xb
 801 0085 00       		.byte	0
 802 0086 00       		.byte	0
 803 0087 0C       		.uleb128 0xc
 804 0088 13       		.uleb128 0x13
 805 0089 01       		.byte	0x1
 806 008a 0B       		.uleb128 0xb
 807 008b 0B       		.uleb128 0xb
 808 008c 3A       		.uleb128 0x3a
 809 008d 0B       		.uleb128 0xb
 810 008e 3B       		.uleb128 0x3b
 811 008f 05       		.uleb128 0x5
 812 0090 01       		.uleb128 0x1
 813 0091 13       		.uleb128 0x13
 814 0092 00       		.byte	0
 815 0093 00       		.byte	0
 816 0094 0D       		.uleb128 0xd
 817 0095 0D       		.uleb128 0xd
 818 0096 00       		.byte	0
 819 0097 03       		.uleb128 0x3
 820 0098 0E       		.uleb128 0xe
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 32


 821 0099 3A       		.uleb128 0x3a
 822 009a 0B       		.uleb128 0xb
 823 009b 3B       		.uleb128 0x3b
 824 009c 05       		.uleb128 0x5
 825 009d 49       		.uleb128 0x49
 826 009e 13       		.uleb128 0x13
 827 009f 38       		.uleb128 0x38
 828 00a0 0B       		.uleb128 0xb
 829 00a1 00       		.byte	0
 830 00a2 00       		.byte	0
 831 00a3 0E       		.uleb128 0xe
 832 00a4 2E       		.uleb128 0x2e
 833 00a5 00       		.byte	0
 834 00a6 3F       		.uleb128 0x3f
 835 00a7 19       		.uleb128 0x19
 836 00a8 03       		.uleb128 0x3
 837 00a9 0E       		.uleb128 0xe
 838 00aa 3A       		.uleb128 0x3a
 839 00ab 0B       		.uleb128 0xb
 840 00ac 3B       		.uleb128 0x3b
 841 00ad 0B       		.uleb128 0xb
 842 00ae 27       		.uleb128 0x27
 843 00af 19       		.uleb128 0x19
 844 00b0 11       		.uleb128 0x11
 845 00b1 01       		.uleb128 0x1
 846 00b2 12       		.uleb128 0x12
 847 00b3 06       		.uleb128 0x6
 848 00b4 40       		.uleb128 0x40
 849 00b5 18       		.uleb128 0x18
 850 00b6 9742     		.uleb128 0x2117
 851 00b8 19       		.uleb128 0x19
 852 00b9 00       		.byte	0
 853 00ba 00       		.byte	0
 854 00bb 0F       		.uleb128 0xf
 855 00bc 2E       		.uleb128 0x2e
 856 00bd 01       		.byte	0x1
 857 00be 3F       		.uleb128 0x3f
 858 00bf 19       		.uleb128 0x19
 859 00c0 03       		.uleb128 0x3
 860 00c1 0E       		.uleb128 0xe
 861 00c2 3A       		.uleb128 0x3a
 862 00c3 0B       		.uleb128 0xb
 863 00c4 3B       		.uleb128 0x3b
 864 00c5 05       		.uleb128 0x5
 865 00c6 27       		.uleb128 0x27
 866 00c7 19       		.uleb128 0x19
 867 00c8 11       		.uleb128 0x11
 868 00c9 01       		.uleb128 0x1
 869 00ca 12       		.uleb128 0x12
 870 00cb 06       		.uleb128 0x6
 871 00cc 40       		.uleb128 0x40
 872 00cd 18       		.uleb128 0x18
 873 00ce 9742     		.uleb128 0x2117
 874 00d0 19       		.uleb128 0x19
 875 00d1 01       		.uleb128 0x1
 876 00d2 13       		.uleb128 0x13
 877 00d3 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 33


 878 00d4 00       		.byte	0
 879 00d5 10       		.uleb128 0x10
 880 00d6 898201   		.uleb128 0x4109
 881 00d9 00       		.byte	0
 882 00da 11       		.uleb128 0x11
 883 00db 01       		.uleb128 0x1
 884 00dc 31       		.uleb128 0x31
 885 00dd 13       		.uleb128 0x13
 886 00de 00       		.byte	0
 887 00df 00       		.byte	0
 888 00e0 11       		.uleb128 0x11
 889 00e1 34       		.uleb128 0x34
 890 00e2 00       		.byte	0
 891 00e3 03       		.uleb128 0x3
 892 00e4 0E       		.uleb128 0xe
 893 00e5 3A       		.uleb128 0x3a
 894 00e6 0B       		.uleb128 0xb
 895 00e7 3B       		.uleb128 0x3b
 896 00e8 05       		.uleb128 0x5
 897 00e9 49       		.uleb128 0x49
 898 00ea 13       		.uleb128 0x13
 899 00eb 02       		.uleb128 0x2
 900 00ec 17       		.uleb128 0x17
 901 00ed 00       		.byte	0
 902 00ee 00       		.byte	0
 903 00ef 12       		.uleb128 0x12
 904 00f0 34       		.uleb128 0x34
 905 00f1 00       		.byte	0
 906 00f2 03       		.uleb128 0x3
 907 00f3 08       		.uleb128 0x8
 908 00f4 3A       		.uleb128 0x3a
 909 00f5 0B       		.uleb128 0xb
 910 00f6 3B       		.uleb128 0x3b
 911 00f7 05       		.uleb128 0x5
 912 00f8 49       		.uleb128 0x49
 913 00f9 13       		.uleb128 0x13
 914 00fa 02       		.uleb128 0x2
 915 00fb 17       		.uleb128 0x17
 916 00fc 00       		.byte	0
 917 00fd 00       		.byte	0
 918 00fe 13       		.uleb128 0x13
 919 00ff 34       		.uleb128 0x34
 920 0100 00       		.byte	0
 921 0101 03       		.uleb128 0x3
 922 0102 0E       		.uleb128 0xe
 923 0103 3A       		.uleb128 0x3a
 924 0104 0B       		.uleb128 0xb
 925 0105 3B       		.uleb128 0x3b
 926 0106 0B       		.uleb128 0xb
 927 0107 49       		.uleb128 0x49
 928 0108 13       		.uleb128 0x13
 929 0109 3F       		.uleb128 0x3f
 930 010a 19       		.uleb128 0x19
 931 010b 3C       		.uleb128 0x3c
 932 010c 19       		.uleb128 0x19
 933 010d 00       		.byte	0
 934 010e 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 34


 935 010f 14       		.uleb128 0x14
 936 0110 2E       		.uleb128 0x2e
 937 0111 00       		.byte	0
 938 0112 3F       		.uleb128 0x3f
 939 0113 19       		.uleb128 0x19
 940 0114 3C       		.uleb128 0x3c
 941 0115 19       		.uleb128 0x19
 942 0116 6E       		.uleb128 0x6e
 943 0117 0E       		.uleb128 0xe
 944 0118 03       		.uleb128 0x3
 945 0119 0E       		.uleb128 0xe
 946 011a 3A       		.uleb128 0x3a
 947 011b 0B       		.uleb128 0xb
 948 011c 3B       		.uleb128 0x3b
 949 011d 0B       		.uleb128 0xb
 950 011e 00       		.byte	0
 951 011f 00       		.byte	0
 952 0120 00       		.byte	0
 953              		.section	.debug_loc,"",%progbits
 954              	.Ldebug_loc0:
 955              	.LLST0:
 956 0000 08000000 		.4byte	.LVL2
 957 0004 8E000000 		.4byte	.LVL9
 958 0008 0100     		.2byte	0x1
 959 000a 54       		.byte	0x54
 960 000b 00000000 		.4byte	0
 961 000f 00000000 		.4byte	0
 962              	.LLST1:
 963 0013 20000000 		.4byte	.LVL4
 964 0017 82000000 		.4byte	.LVL5
 965 001b 0100     		.2byte	0x1
 966 001d 51       		.byte	0x51
 967 001e 00000000 		.4byte	0
 968 0022 00000000 		.4byte	0
 969              	.LLST2:
 970 0026 02000000 		.4byte	.LVL1
 971 002a 0C000000 		.4byte	.LVL3
 972 002e 0200     		.2byte	0x2
 973 0030 31       		.byte	0x31
 974 0031 9F       		.byte	0x9f
 975 0032 0C000000 		.4byte	.LVL3
 976 0036 84000000 		.4byte	.LVL6
 977 003a 0100     		.2byte	0x1
 978 003c 53       		.byte	0x53
 979 003d 86000000 		.4byte	.LVL7
 980 0041 A4000000 		.4byte	.LFE3
 981 0045 0100     		.2byte	0x1
 982 0047 53       		.byte	0x53
 983 0048 00000000 		.4byte	0
 984 004c 00000000 		.4byte	0
 985              		.section	.debug_aranges,"",%progbits
 986 0000 34000000 		.4byte	0x34
 987 0004 0200     		.2byte	0x2
 988 0006 00000000 		.4byte	.Ldebug_info0
 989 000a 04       		.byte	0x4
 990 000b 00       		.byte	0
 991 000c 0000     		.2byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 35


 992 000e 0000     		.2byte	0
 993 0010 00000000 		.4byte	.LFB0
 994 0014 30000000 		.4byte	.LFE0-.LFB0
 995 0018 00000000 		.4byte	.LFB1
 996 001c 34000000 		.4byte	.LFE1-.LFB1
 997 0020 00000000 		.4byte	.LFB2
 998 0024 08000000 		.4byte	.LFE2-.LFB2
 999 0028 00000000 		.4byte	.LFB3
 1000 002c A4000000 		.4byte	.LFE3-.LFB3
 1001 0030 00000000 		.4byte	0
 1002 0034 00000000 		.4byte	0
 1003              		.section	.debug_ranges,"",%progbits
 1004              	.Ldebug_ranges0:
 1005 0000 00000000 		.4byte	.LFB0
 1006 0004 30000000 		.4byte	.LFE0
 1007 0008 00000000 		.4byte	.LFB1
 1008 000c 34000000 		.4byte	.LFE1
 1009 0010 00000000 		.4byte	.LFB2
 1010 0014 08000000 		.4byte	.LFE2
 1011 0018 00000000 		.4byte	.LFB3
 1012 001c A4000000 		.4byte	.LFE3
 1013 0020 00000000 		.4byte	0
 1014 0024 00000000 		.4byte	0
 1015              		.section	.debug_line,"",%progbits
 1016              	.Ldebug_line0:
 1017 0000 E4000000 		.section	.debug_str,"MS",%progbits,1
 1017      02006200 
 1017      00000201 
 1017      FB0E0D00 
 1017      01010101 
 1018              	.LASF43:
 1019 0000 61726245 		.ascii	"arbEp\000"
 1019      7000
 1020              	.LASF55:
 1021 0006 55534246 		.ascii	"USBFS_ReInitComponent\000"
 1021      535F5265 
 1021      496E6974 
 1021      436F6D70 
 1021      6F6E656E 
 1022              	.LASF29:
 1023 001c 65704372 		.ascii	"epCr0\000"
 1023      3000
 1024              	.LASF50:
 1025 0022 65705374 		.ascii	"epStatus\000"
 1025      61747573 
 1025      00
 1026              	.LASF11:
 1027 002b 666C6F61 		.ascii	"float\000"
 1027      7400
 1028              	.LASF34:
 1029 0031 72657365 		.ascii	"reserved\000"
 1029      72766564 
 1029      00
 1030              	.LASF40:
 1031 003a 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1031      535F6172 
 1031      625F6570 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 36


 1031      5F737472 
 1031      75637400 
 1032              	.LASF3:
 1033 004e 73686F72 		.ascii	"short unsigned int\000"
 1033      7420756E 
 1033      7369676E 
 1033      65642069 
 1033      6E7400
 1034              	.LASF31:
 1035 0061 65704366 		.ascii	"epCfg\000"
 1035      6700
 1036              	.LASF52:
 1037 0067 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1037      72617465 
 1037      645F536F 
 1037      75726365 
 1037      5C50536F 
 1038              	.LASF26:
 1039 008c 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1039      4246535F 
 1039      45505F43 
 1039      544C5F42 
 1039      4C4F434B 
 1040              	.LASF47:
 1041 00a1 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1041      535F4255 
 1041      535F5245 
 1041      5345545F 
 1041      49535200 
 1042              	.LASF49:
 1043 00b5 61726249 		.ascii	"arbIntrStatus\000"
 1043      6E747253 
 1043      74617475 
 1043      7300
 1044              	.LASF27:
 1045 00c3 6570436E 		.ascii	"epCnt0\000"
 1045      743000
 1046              	.LASF28:
 1047 00ca 6570436E 		.ascii	"epCnt1\000"
 1047      743100
 1048              	.LASF20:
 1049 00d1 6570546F 		.ascii	"epToggle\000"
 1049      67676C65 
 1049      00
 1050              	.LASF1:
 1051 00da 756E7369 		.ascii	"unsigned char\000"
 1051      676E6564 
 1051      20636861 
 1051      7200
 1052              	.LASF51:
 1053 00e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1053      43313120 
 1053      352E342E 
 1053      31203230 
 1053      31363036 
 1054 011b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1054      20726576 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 37


 1054      6973696F 
 1054      6E203233 
 1054      37373135 
 1055 014e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1055      66756E63 
 1055      74696F6E 
 1055      2D736563 
 1055      74696F6E 
 1056              	.LASF14:
 1057 0176 72656738 		.ascii	"reg8\000"
 1057      00
 1058              	.LASF18:
 1059 017b 61706945 		.ascii	"apiEpState\000"
 1059      70537461 
 1059      746500
 1060              	.LASF5:
 1061 0186 6C6F6E67 		.ascii	"long unsigned int\000"
 1061      20756E73 
 1061      69676E65 
 1061      6420696E 
 1061      7400
 1062              	.LASF21:
 1063 0198 61646472 		.ascii	"addr\000"
 1063      00
 1064              	.LASF33:
 1065 019d 65705372 		.ascii	"epSr\000"
 1065      00
 1066              	.LASF54:
 1067 01a2 55534246 		.ascii	"USBFS_EP\000"
 1067      535F4550 
 1067      00
 1068              	.LASF35:
 1069 01ab 72775761 		.ascii	"rwWa\000"
 1069      00
 1070              	.LASF12:
 1071 01b0 646F7562 		.ascii	"double\000"
 1071      6C6500
 1072              	.LASF30:
 1073 01b7 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1073      535F7369 
 1073      655F6570 
 1073      5F737472 
 1073      75637400 
 1074              	.LASF23:
 1075 01cb 62756666 		.ascii	"buffOffset\000"
 1075      4F666673 
 1075      657400
 1076              	.LASF36:
 1077 01d6 72775761 		.ascii	"rwWaMsb\000"
 1077      4D736200 
 1078              	.LASF10:
 1079 01de 75696E74 		.ascii	"uint16\000"
 1079      313600
 1080              	.LASF42:
 1081 01e5 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1081      535F7369 
 1081      655F6570 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 38


 1081      735F7374 
 1081      72756374 
 1082              	.LASF39:
 1083 01fa 72774472 		.ascii	"rwDr\000"
 1083      00
 1084              	.LASF8:
 1085 01ff 756E7369 		.ascii	"unsigned int\000"
 1085      676E6564 
 1085      20696E74 
 1085      00
 1086              	.LASF38:
 1087 020c 72775261 		.ascii	"rwRaMsb\000"
 1087      4D736200 
 1088              	.LASF7:
 1089 0214 6C6F6E67 		.ascii	"long long unsigned int\000"
 1089      206C6F6E 
 1089      6720756E 
 1089      7369676E 
 1089      65642069 
 1090              	.LASF19:
 1091 022b 68774570 		.ascii	"hwEpState\000"
 1091      53746174 
 1091      6500
 1092              	.LASF45:
 1093 0235 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1093      535F4550 
 1093      5F315F49 
 1093      535200
 1094              	.LASF32:
 1095 0244 6570496E 		.ascii	"epIntEn\000"
 1095      74456E00 
 1096              	.LASF53:
 1097 024c 433A5C55 		.ascii	"C:\\Users\\Caleb Cotter\\Documents\\GitHub\\3HC\\3H"
 1097      73657273 
 1097      5C43616C 
 1097      65622043 
 1097      6F747465 
 1098 0279 435F4669 		.ascii	"C_Firmware\\3HC_Firmware_0_1.cydsn\000"
 1098      726D7761 
 1098      72655C33 
 1098      48435F46 
 1098      69726D77 
 1099              	.LASF44:
 1100 029b 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1100      535F6172 
 1100      625F6570 
 1100      735F7374 
 1100      72756374 
 1101              	.LASF17:
 1102 02b0 61747472 		.ascii	"attrib\000"
 1102      696200
 1103              	.LASF22:
 1104 02b7 65704D6F 		.ascii	"epMode\000"
 1104      646500
 1105              	.LASF6:
 1106 02be 6C6F6E67 		.ascii	"long long int\000"
 1106      206C6F6E 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccmBqxib.s 			page 39


 1106      6720696E 
 1106      7400
 1107              	.LASF16:
 1108 02cc 73697A65 		.ascii	"sizetype\000"
 1108      74797065 
 1108      00
 1109              	.LASF13:
 1110 02d5 63686172 		.ascii	"char\000"
 1110      00
 1111              	.LASF24:
 1112 02da 62756666 		.ascii	"bufferSize\000"
 1112      65725369 
 1112      7A6500
 1113              	.LASF2:
 1114 02e5 73686F72 		.ascii	"short int\000"
 1114      7420696E 
 1114      7400
 1115              	.LASF37:
 1116 02ef 72775261 		.ascii	"rwRa\000"
 1116      00
 1117              	.LASF9:
 1118 02f4 75696E74 		.ascii	"uint8\000"
 1118      3800
 1119              	.LASF25:
 1120 02fa 696E7465 		.ascii	"interface\000"
 1120      72666163 
 1120      6500
 1121              	.LASF4:
 1122 0304 6C6F6E67 		.ascii	"long int\000"
 1122      20696E74 
 1122      00
 1123              	.LASF46:
 1124 030d 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1124      535F4550 
 1124      5F325F49 
 1124      535200
 1125              	.LASF15:
 1126 031c 6C6F6E67 		.ascii	"long double\000"
 1126      20646F75 
 1126      626C6500 
 1127              	.LASF0:
 1128 0328 7369676E 		.ascii	"signed char\000"
 1128      65642063 
 1128      68617200 
 1129              	.LASF48:
 1130 0334 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1130      535F4152 
 1130      425F4953 
 1130      5200
 1131              	.LASF41:
 1132 0342 73696545 		.ascii	"sieEp\000"
 1132      7000
 1133              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
