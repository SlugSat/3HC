ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 3


  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBUART_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  65              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBUART_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBUART_EP_2_ISR, %function
  71              	USBUART_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 4


 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  78              		.loc 1 137 0
  79 0000 0222     		movs	r2, #2
  80 0002 0A4B     		ldr	r3, .L7
  81 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 5


 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  82              		.loc 1 148 0
  83 0006 0F3B     		subs	r3, r3, #15
  84 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  85              		.loc 1 151 0
  86 000c 084B     		ldr	r3, .L7+4
  87 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  88 0010 03F00303 		and	r3, r3, #3
  89 0014 012B     		cmp	r3, #1
  90 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  91              		.loc 1 153 0
  92 0018 054A     		ldr	r2, .L7+4
  93 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  94 001c 83F08003 		eor	r3, r3, #128
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		movs	r2, #1
  99 0024 024B     		ldr	r3, .L7+4
 100 0026 5A76     		strb	r2, [r3, #25]
 101 0028 7047     		bx	lr
 102              	.L8:
 103 002a 00BF     		.align	2
 104              	.L7:
 105 002c 0B600040 		.word	1073766411
 106 0030 00000000 		.word	USBUART_EP
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 110              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 111              		.align	2
 112              		.global	USBUART_EP_3_ISR
 113              		.thumb
 114              		.thumb_func
 115              		.type	USBUART_EP_3_ISR, %function
 116              	USBUART_EP_3_ISR:
 117              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 6


 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 118              		.loc 1 202 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 123              		.loc 1 218 0
 124 0000 0422     		movs	r2, #4
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 7


 125 0002 0C4B     		ldr	r3, .L11
 126 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 127              		.loc 1 229 0
 128 0006 0F3B     		subs	r3, r3, #15
 129 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 130              		.loc 1 232 0
 131 000c 0A4B     		ldr	r3, .L11+4
 132 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 133 0012 03F00303 		and	r3, r3, #3
 134 0016 012B     		cmp	r3, #1
 135 0018 06D0     		beq	.L10
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 136              		.loc 1 234 0
 137 001a 074A     		ldr	r2, .L11+4
 138 001c 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 139 0020 83F08003 		eor	r3, r3, #128
 140 0024 82F82730 		strb	r3, [r2, #39]
 141              	.L10:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 142              		.loc 1 243 0
 143 0028 0122     		movs	r2, #1
 144 002a 034B     		ldr	r3, .L11+4
 145 002c 83F82520 		strb	r2, [r3, #37]
 146 0030 7047     		bx	lr
 147              	.L12:
 148 0032 00BF     		.align	2
 149              	.L11:
 150 0034 0B600040 		.word	1073766411
 151 0038 00000000 		.word	USBUART_EP
 152              		.cfi_endproc
 153              	.LFE2:
 154              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 155              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 156              		.align	2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 8


 157              		.global	USBUART_SOF_ISR
 158              		.thumb
 159              		.thumb_func
 160              		.type	USBUART_SOF_ISR, %function
 161              	USBUART_SOF_ISR:
 162              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 9


 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 10


 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 11


 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 12


 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 13


 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 14


 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 15


 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 16


 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 163              		.loc 1 694 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE3:
 171              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 172 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 173              		.align	2
 174              		.global	USBUART_BUS_RESET_ISR
 175              		.thumb
 176              		.thumb_func
 177              		.type	USBUART_BUS_RESET_ISR, %function
 178              	USBUART_BUS_RESET_ISR:
 179              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 180              		.loc 1 723 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		.loc 1 723 0
 185 0000 08B5     		push	{r3, lr}
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 17


 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 189              		.loc 1 734 0
 190 0002 FFF7FEFF 		bl	USBUART_ReInitComponent
 191              	.LVL0:
 192 0006 08BD     		pop	{r3, pc}
 193              		.cfi_endproc
 194              	.LFE4:
 195              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 196              		.text
 197              	.Letext0:
 198              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 199              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 200              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 201              		.section	.debug_info,"",%progbits
 202              	.Ldebug_info0:
 203 0000 50020000 		.4byte	0x250
 204 0004 0400     		.2byte	0x4
 205 0006 00000000 		.4byte	.Ldebug_abbrev0
 206 000a 04       		.byte	0x4
 207 000b 01       		.uleb128 0x1
 208 000c 8B000000 		.4byte	.LASF37
 209 0010 0C       		.byte	0xc
 210 0011 60010000 		.4byte	.LASF38
 211 0015 F6010000 		.4byte	.LASF39
 212 0019 00000000 		.4byte	.Ldebug_ranges0+0
 213 001d 00000000 		.4byte	0
 214 0021 00000000 		.4byte	.Ldebug_line0
 215 0025 02       		.uleb128 0x2
 216 0026 01       		.byte	0x1
 217 0027 06       		.byte	0x6
 218 0028 CF020000 		.4byte	.LASF0
 219 002c 02       		.uleb128 0x2
 220 002d 01       		.byte	0x1
 221 002e 08       		.byte	0x8
 222 002f 52010000 		.4byte	.LASF1
 223 0033 02       		.uleb128 0x2
 224 0034 02       		.byte	0x2
 225 0035 05       		.byte	0x5
 226 0036 73020000 		.4byte	.LASF2
 227 003a 02       		.uleb128 0x2
 228 003b 02       		.byte	0x2
 229 003c 07       		.byte	0x7
 230 003d 35000000 		.4byte	.LASF3
 231 0041 02       		.uleb128 0x2
 232 0042 04       		.byte	0x4
 233 0043 05       		.byte	0x5
 234 0044 A3020000 		.4byte	.LASF4
 235 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 18


 236 0049 04       		.byte	0x4
 237 004a 07       		.byte	0x7
 238 004b 1E010000 		.4byte	.LASF5
 239 004f 02       		.uleb128 0x2
 240 0050 08       		.byte	0x8
 241 0051 05       		.byte	0x5
 242 0052 55020000 		.4byte	.LASF6
 243 0056 02       		.uleb128 0x2
 244 0057 08       		.byte	0x8
 245 0058 07       		.byte	0x7
 246 0059 BF010000 		.4byte	.LASF7
 247 005d 03       		.uleb128 0x3
 248 005e 04       		.byte	0x4
 249 005f 05       		.byte	0x5
 250 0060 696E7400 		.ascii	"int\000"
 251 0064 02       		.uleb128 0x2
 252 0065 04       		.byte	0x4
 253 0066 07       		.byte	0x7
 254 0067 B2010000 		.4byte	.LASF8
 255 006b 04       		.uleb128 0x4
 256 006c 93020000 		.4byte	.LASF9
 257 0070 02       		.byte	0x2
 258 0071 E401     		.2byte	0x1e4
 259 0073 2C000000 		.4byte	0x2c
 260 0077 04       		.uleb128 0x4
 261 0078 A0010000 		.4byte	.LASF10
 262 007c 02       		.byte	0x2
 263 007d E501     		.2byte	0x1e5
 264 007f 3A000000 		.4byte	0x3a
 265 0083 02       		.uleb128 0x2
 266 0084 04       		.byte	0x4
 267 0085 04       		.byte	0x4
 268 0086 2F000000 		.4byte	.LASF11
 269 008a 02       		.uleb128 0x2
 270 008b 08       		.byte	0x8
 271 008c 04       		.byte	0x4
 272 008d 87010000 		.4byte	.LASF12
 273 0091 02       		.uleb128 0x2
 274 0092 01       		.byte	0x1
 275 0093 08       		.byte	0x8
 276 0094 63020000 		.4byte	.LASF13
 277 0098 04       		.uleb128 0x4
 278 0099 19010000 		.4byte	.LASF14
 279 009d 02       		.byte	0x2
 280 009e 8E02     		.2byte	0x28e
 281 00a0 A4000000 		.4byte	0xa4
 282 00a4 05       		.uleb128 0x5
 283 00a5 6B000000 		.4byte	0x6b
 284 00a9 02       		.uleb128 0x2
 285 00aa 08       		.byte	0x8
 286 00ab 04       		.byte	0x4
 287 00ac C3020000 		.4byte	.LASF15
 288 00b0 02       		.uleb128 0x2
 289 00b1 04       		.byte	0x4
 290 00b2 07       		.byte	0x7
 291 00b3 45020000 		.4byte	.LASF16
 292 00b7 06       		.uleb128 0x6
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 19


 293 00b8 0C       		.byte	0xc
 294 00b9 03       		.byte	0x3
 295 00ba 8D       		.byte	0x8d
 296 00bb 2C010000 		.4byte	0x12c
 297 00bf 07       		.uleb128 0x7
 298 00c0 8E010000 		.4byte	.LASF17
 299 00c4 03       		.byte	0x3
 300 00c5 8F       		.byte	0x8f
 301 00c6 6B000000 		.4byte	0x6b
 302 00ca 00       		.byte	0
 303 00cb 07       		.uleb128 0x7
 304 00cc A7010000 		.4byte	.LASF18
 305 00d0 03       		.byte	0x3
 306 00d1 90       		.byte	0x90
 307 00d2 6B000000 		.4byte	0x6b
 308 00d6 01       		.byte	0x1
 309 00d7 07       		.uleb128 0x7
 310 00d8 D6010000 		.4byte	.LASF19
 311 00dc 03       		.byte	0x3
 312 00dd 91       		.byte	0x91
 313 00de 6B000000 		.4byte	0x6b
 314 00e2 02       		.byte	0x2
 315 00e3 07       		.uleb128 0x7
 316 00e4 77000000 		.4byte	.LASF20
 317 00e8 03       		.byte	0x3
 318 00e9 92       		.byte	0x92
 319 00ea 6B000000 		.4byte	0x6b
 320 00ee 03       		.byte	0x3
 321 00ef 07       		.uleb128 0x7
 322 00f0 30010000 		.4byte	.LASF21
 323 00f4 03       		.byte	0x3
 324 00f5 93       		.byte	0x93
 325 00f6 6B000000 		.4byte	0x6b
 326 00fa 04       		.byte	0x4
 327 00fb 07       		.uleb128 0x7
 328 00fc 4E020000 		.4byte	.LASF22
 329 0100 03       		.byte	0x3
 330 0101 94       		.byte	0x94
 331 0102 6B000000 		.4byte	0x6b
 332 0106 05       		.byte	0x5
 333 0107 07       		.uleb128 0x7
 334 0108 95010000 		.4byte	.LASF23
 335 010c 03       		.byte	0x3
 336 010d 95       		.byte	0x95
 337 010e 77000000 		.4byte	0x77
 338 0112 06       		.byte	0x6
 339 0113 07       		.uleb128 0x7
 340 0114 68020000 		.4byte	.LASF24
 341 0118 03       		.byte	0x3
 342 0119 96       		.byte	0x96
 343 011a 77000000 		.4byte	0x77
 344 011e 08       		.byte	0x8
 345 011f 07       		.uleb128 0x7
 346 0120 99020000 		.4byte	.LASF25
 347 0124 03       		.byte	0x3
 348 0125 97       		.byte	0x97
 349 0126 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 20


 350 012a 0A       		.byte	0xa
 351 012b 00       		.byte	0
 352 012c 08       		.uleb128 0x8
 353 012d AC020000 		.4byte	.LASF26
 354 0131 03       		.byte	0x3
 355 0132 98       		.byte	0x98
 356 0133 B7000000 		.4byte	0xb7
 357 0137 06       		.uleb128 0x6
 358 0138 10       		.byte	0x10
 359 0139 03       		.byte	0x3
 360 013a D4       		.byte	0xd4
 361 013b 70010000 		.4byte	0x170
 362 013f 07       		.uleb128 0x7
 363 0140 69000000 		.4byte	.LASF27
 364 0144 03       		.byte	0x3
 365 0145 D6       		.byte	0xd6
 366 0146 6B000000 		.4byte	0x6b
 367 014a 00       		.byte	0
 368 014b 07       		.uleb128 0x7
 369 014c 70000000 		.4byte	.LASF28
 370 0150 03       		.byte	0x3
 371 0151 D7       		.byte	0xd7
 372 0152 6B000000 		.4byte	0x6b
 373 0156 01       		.byte	0x1
 374 0157 07       		.uleb128 0x7
 375 0158 29000000 		.4byte	.LASF29
 376 015c 03       		.byte	0x3
 377 015d D8       		.byte	0xd8
 378 015e 6B000000 		.4byte	0x6b
 379 0162 02       		.byte	0x2
 380 0163 09       		.uleb128 0x9
 381 0164 67617000 		.ascii	"gap\000"
 382 0168 03       		.byte	0x3
 383 0169 D9       		.byte	0xd9
 384 016a 70010000 		.4byte	0x170
 385 016e 03       		.byte	0x3
 386 016f 00       		.byte	0
 387 0170 0A       		.uleb128 0xa
 388 0171 6B000000 		.4byte	0x6b
 389 0175 80010000 		.4byte	0x180
 390 0179 0B       		.uleb128 0xb
 391 017a B0000000 		.4byte	0xb0
 392 017e 0C       		.byte	0xc
 393 017f 00       		.byte	0
 394 0180 08       		.uleb128 0x8
 395 0181 E0010000 		.4byte	.LASF30
 396 0185 03       		.byte	0x3
 397 0186 DA       		.byte	0xda
 398 0187 37010000 		.4byte	0x137
 399 018b 0C       		.uleb128 0xc
 400 018c 90       		.byte	0x90
 401 018d 03       		.byte	0x3
 402 018e 0E01     		.2byte	0x10e
 403 0190 A2010000 		.4byte	0x1a2
 404 0194 0D       		.uleb128 0xd
 405 0195 35010000 		.4byte	.LASF31
 406 0199 03       		.byte	0x3
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 21


 407 019a 1001     		.2byte	0x110
 408 019c A2010000 		.4byte	0x1a2
 409 01a0 00       		.byte	0
 410 01a1 00       		.byte	0
 411 01a2 0A       		.uleb128 0xa
 412 01a3 80010000 		.4byte	0x180
 413 01a7 B2010000 		.4byte	0x1b2
 414 01ab 0B       		.uleb128 0xb
 415 01ac B0000000 		.4byte	0xb0
 416 01b0 08       		.byte	0x8
 417 01b1 00       		.byte	0
 418 01b2 04       		.uleb128 0x4
 419 01b3 3B010000 		.4byte	.LASF32
 420 01b7 03       		.byte	0x3
 421 01b8 1101     		.2byte	0x111
 422 01ba 8B010000 		.4byte	0x18b
 423 01be 0E       		.uleb128 0xe
 424 01bf DB020000 		.4byte	.LASF33
 425 01c3 01       		.byte	0x1
 426 01c4 25       		.byte	0x25
 427 01c5 00000000 		.4byte	.LFB0
 428 01c9 30000000 		.4byte	.LFE0-.LFB0
 429 01cd 01       		.uleb128 0x1
 430 01ce 9C       		.byte	0x9c
 431 01cf 0E       		.uleb128 0xe
 432 01d0 48000000 		.4byte	.LASF34
 433 01d4 01       		.byte	0x1
 434 01d5 78       		.byte	0x78
 435 01d6 00000000 		.4byte	.LFB1
 436 01da 34000000 		.4byte	.LFE1-.LFB1
 437 01de 01       		.uleb128 0x1
 438 01df 9C       		.byte	0x9c
 439 01e0 0E       		.uleb128 0xe
 440 01e1 00000000 		.4byte	.LASF35
 441 01e5 01       		.byte	0x1
 442 01e6 C9       		.byte	0xc9
 443 01e7 00000000 		.4byte	.LFB2
 444 01eb 3C000000 		.4byte	.LFE2-.LFB2
 445 01ef 01       		.uleb128 0x1
 446 01f0 9C       		.byte	0x9c
 447 01f1 0F       		.uleb128 0xf
 448 01f2 59000000 		.4byte	.LASF36
 449 01f6 01       		.byte	0x1
 450 01f7 B502     		.2byte	0x2b5
 451 01f9 00000000 		.4byte	.LFB3
 452 01fd 02000000 		.4byte	.LFE3-.LFB3
 453 0201 01       		.uleb128 0x1
 454 0202 9C       		.byte	0x9c
 455 0203 10       		.uleb128 0x10
 456 0204 7D020000 		.4byte	.LASF40
 457 0208 01       		.byte	0x1
 458 0209 D202     		.2byte	0x2d2
 459 020b 00000000 		.4byte	.LFB4
 460 020f 08000000 		.4byte	.LFE4-.LFB4
 461 0213 01       		.uleb128 0x1
 462 0214 9C       		.byte	0x9c
 463 0215 23020000 		.4byte	0x223
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 22


 464 0219 11       		.uleb128 0x11
 465 021a 06000000 		.4byte	.LVL0
 466 021e 48020000 		.4byte	0x248
 467 0222 00       		.byte	0
 468 0223 0A       		.uleb128 0xa
 469 0224 33020000 		.4byte	0x233
 470 0228 33020000 		.4byte	0x233
 471 022c 0B       		.uleb128 0xb
 472 022d B0000000 		.4byte	0xb0
 473 0231 08       		.byte	0x8
 474 0232 00       		.byte	0
 475 0233 05       		.uleb128 0x5
 476 0234 2C010000 		.4byte	0x12c
 477 0238 12       		.uleb128 0x12
 478 0239 80000000 		.4byte	.LASF41
 479 023d 04       		.byte	0x4
 480 023e 79       		.byte	0x79
 481 023f 43020000 		.4byte	0x243
 482 0243 05       		.uleb128 0x5
 483 0244 23020000 		.4byte	0x223
 484 0248 13       		.uleb128 0x13
 485 0249 11000000 		.4byte	.LASF42
 486 024d 11000000 		.4byte	.LASF42
 487 0251 04       		.byte	0x4
 488 0252 A4       		.byte	0xa4
 489 0253 00       		.byte	0
 490              		.section	.debug_abbrev,"",%progbits
 491              	.Ldebug_abbrev0:
 492 0000 01       		.uleb128 0x1
 493 0001 11       		.uleb128 0x11
 494 0002 01       		.byte	0x1
 495 0003 25       		.uleb128 0x25
 496 0004 0E       		.uleb128 0xe
 497 0005 13       		.uleb128 0x13
 498 0006 0B       		.uleb128 0xb
 499 0007 03       		.uleb128 0x3
 500 0008 0E       		.uleb128 0xe
 501 0009 1B       		.uleb128 0x1b
 502 000a 0E       		.uleb128 0xe
 503 000b 55       		.uleb128 0x55
 504 000c 17       		.uleb128 0x17
 505 000d 11       		.uleb128 0x11
 506 000e 01       		.uleb128 0x1
 507 000f 10       		.uleb128 0x10
 508 0010 17       		.uleb128 0x17
 509 0011 00       		.byte	0
 510 0012 00       		.byte	0
 511 0013 02       		.uleb128 0x2
 512 0014 24       		.uleb128 0x24
 513 0015 00       		.byte	0
 514 0016 0B       		.uleb128 0xb
 515 0017 0B       		.uleb128 0xb
 516 0018 3E       		.uleb128 0x3e
 517 0019 0B       		.uleb128 0xb
 518 001a 03       		.uleb128 0x3
 519 001b 0E       		.uleb128 0xe
 520 001c 00       		.byte	0
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 23


 521 001d 00       		.byte	0
 522 001e 03       		.uleb128 0x3
 523 001f 24       		.uleb128 0x24
 524 0020 00       		.byte	0
 525 0021 0B       		.uleb128 0xb
 526 0022 0B       		.uleb128 0xb
 527 0023 3E       		.uleb128 0x3e
 528 0024 0B       		.uleb128 0xb
 529 0025 03       		.uleb128 0x3
 530 0026 08       		.uleb128 0x8
 531 0027 00       		.byte	0
 532 0028 00       		.byte	0
 533 0029 04       		.uleb128 0x4
 534 002a 16       		.uleb128 0x16
 535 002b 00       		.byte	0
 536 002c 03       		.uleb128 0x3
 537 002d 0E       		.uleb128 0xe
 538 002e 3A       		.uleb128 0x3a
 539 002f 0B       		.uleb128 0xb
 540 0030 3B       		.uleb128 0x3b
 541 0031 05       		.uleb128 0x5
 542 0032 49       		.uleb128 0x49
 543 0033 13       		.uleb128 0x13
 544 0034 00       		.byte	0
 545 0035 00       		.byte	0
 546 0036 05       		.uleb128 0x5
 547 0037 35       		.uleb128 0x35
 548 0038 00       		.byte	0
 549 0039 49       		.uleb128 0x49
 550 003a 13       		.uleb128 0x13
 551 003b 00       		.byte	0
 552 003c 00       		.byte	0
 553 003d 06       		.uleb128 0x6
 554 003e 13       		.uleb128 0x13
 555 003f 01       		.byte	0x1
 556 0040 0B       		.uleb128 0xb
 557 0041 0B       		.uleb128 0xb
 558 0042 3A       		.uleb128 0x3a
 559 0043 0B       		.uleb128 0xb
 560 0044 3B       		.uleb128 0x3b
 561 0045 0B       		.uleb128 0xb
 562 0046 01       		.uleb128 0x1
 563 0047 13       		.uleb128 0x13
 564 0048 00       		.byte	0
 565 0049 00       		.byte	0
 566 004a 07       		.uleb128 0x7
 567 004b 0D       		.uleb128 0xd
 568 004c 00       		.byte	0
 569 004d 03       		.uleb128 0x3
 570 004e 0E       		.uleb128 0xe
 571 004f 3A       		.uleb128 0x3a
 572 0050 0B       		.uleb128 0xb
 573 0051 3B       		.uleb128 0x3b
 574 0052 0B       		.uleb128 0xb
 575 0053 49       		.uleb128 0x49
 576 0054 13       		.uleb128 0x13
 577 0055 38       		.uleb128 0x38
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 24


 578 0056 0B       		.uleb128 0xb
 579 0057 00       		.byte	0
 580 0058 00       		.byte	0
 581 0059 08       		.uleb128 0x8
 582 005a 16       		.uleb128 0x16
 583 005b 00       		.byte	0
 584 005c 03       		.uleb128 0x3
 585 005d 0E       		.uleb128 0xe
 586 005e 3A       		.uleb128 0x3a
 587 005f 0B       		.uleb128 0xb
 588 0060 3B       		.uleb128 0x3b
 589 0061 0B       		.uleb128 0xb
 590 0062 49       		.uleb128 0x49
 591 0063 13       		.uleb128 0x13
 592 0064 00       		.byte	0
 593 0065 00       		.byte	0
 594 0066 09       		.uleb128 0x9
 595 0067 0D       		.uleb128 0xd
 596 0068 00       		.byte	0
 597 0069 03       		.uleb128 0x3
 598 006a 08       		.uleb128 0x8
 599 006b 3A       		.uleb128 0x3a
 600 006c 0B       		.uleb128 0xb
 601 006d 3B       		.uleb128 0x3b
 602 006e 0B       		.uleb128 0xb
 603 006f 49       		.uleb128 0x49
 604 0070 13       		.uleb128 0x13
 605 0071 38       		.uleb128 0x38
 606 0072 0B       		.uleb128 0xb
 607 0073 00       		.byte	0
 608 0074 00       		.byte	0
 609 0075 0A       		.uleb128 0xa
 610 0076 01       		.uleb128 0x1
 611 0077 01       		.byte	0x1
 612 0078 49       		.uleb128 0x49
 613 0079 13       		.uleb128 0x13
 614 007a 01       		.uleb128 0x1
 615 007b 13       		.uleb128 0x13
 616 007c 00       		.byte	0
 617 007d 00       		.byte	0
 618 007e 0B       		.uleb128 0xb
 619 007f 21       		.uleb128 0x21
 620 0080 00       		.byte	0
 621 0081 49       		.uleb128 0x49
 622 0082 13       		.uleb128 0x13
 623 0083 2F       		.uleb128 0x2f
 624 0084 0B       		.uleb128 0xb
 625 0085 00       		.byte	0
 626 0086 00       		.byte	0
 627 0087 0C       		.uleb128 0xc
 628 0088 13       		.uleb128 0x13
 629 0089 01       		.byte	0x1
 630 008a 0B       		.uleb128 0xb
 631 008b 0B       		.uleb128 0xb
 632 008c 3A       		.uleb128 0x3a
 633 008d 0B       		.uleb128 0xb
 634 008e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 25


 635 008f 05       		.uleb128 0x5
 636 0090 01       		.uleb128 0x1
 637 0091 13       		.uleb128 0x13
 638 0092 00       		.byte	0
 639 0093 00       		.byte	0
 640 0094 0D       		.uleb128 0xd
 641 0095 0D       		.uleb128 0xd
 642 0096 00       		.byte	0
 643 0097 03       		.uleb128 0x3
 644 0098 0E       		.uleb128 0xe
 645 0099 3A       		.uleb128 0x3a
 646 009a 0B       		.uleb128 0xb
 647 009b 3B       		.uleb128 0x3b
 648 009c 05       		.uleb128 0x5
 649 009d 49       		.uleb128 0x49
 650 009e 13       		.uleb128 0x13
 651 009f 38       		.uleb128 0x38
 652 00a0 0B       		.uleb128 0xb
 653 00a1 00       		.byte	0
 654 00a2 00       		.byte	0
 655 00a3 0E       		.uleb128 0xe
 656 00a4 2E       		.uleb128 0x2e
 657 00a5 00       		.byte	0
 658 00a6 3F       		.uleb128 0x3f
 659 00a7 19       		.uleb128 0x19
 660 00a8 03       		.uleb128 0x3
 661 00a9 0E       		.uleb128 0xe
 662 00aa 3A       		.uleb128 0x3a
 663 00ab 0B       		.uleb128 0xb
 664 00ac 3B       		.uleb128 0x3b
 665 00ad 0B       		.uleb128 0xb
 666 00ae 27       		.uleb128 0x27
 667 00af 19       		.uleb128 0x19
 668 00b0 11       		.uleb128 0x11
 669 00b1 01       		.uleb128 0x1
 670 00b2 12       		.uleb128 0x12
 671 00b3 06       		.uleb128 0x6
 672 00b4 40       		.uleb128 0x40
 673 00b5 18       		.uleb128 0x18
 674 00b6 9742     		.uleb128 0x2117
 675 00b8 19       		.uleb128 0x19
 676 00b9 00       		.byte	0
 677 00ba 00       		.byte	0
 678 00bb 0F       		.uleb128 0xf
 679 00bc 2E       		.uleb128 0x2e
 680 00bd 00       		.byte	0
 681 00be 3F       		.uleb128 0x3f
 682 00bf 19       		.uleb128 0x19
 683 00c0 03       		.uleb128 0x3
 684 00c1 0E       		.uleb128 0xe
 685 00c2 3A       		.uleb128 0x3a
 686 00c3 0B       		.uleb128 0xb
 687 00c4 3B       		.uleb128 0x3b
 688 00c5 05       		.uleb128 0x5
 689 00c6 27       		.uleb128 0x27
 690 00c7 19       		.uleb128 0x19
 691 00c8 11       		.uleb128 0x11
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 26


 692 00c9 01       		.uleb128 0x1
 693 00ca 12       		.uleb128 0x12
 694 00cb 06       		.uleb128 0x6
 695 00cc 40       		.uleb128 0x40
 696 00cd 18       		.uleb128 0x18
 697 00ce 9742     		.uleb128 0x2117
 698 00d0 19       		.uleb128 0x19
 699 00d1 00       		.byte	0
 700 00d2 00       		.byte	0
 701 00d3 10       		.uleb128 0x10
 702 00d4 2E       		.uleb128 0x2e
 703 00d5 01       		.byte	0x1
 704 00d6 3F       		.uleb128 0x3f
 705 00d7 19       		.uleb128 0x19
 706 00d8 03       		.uleb128 0x3
 707 00d9 0E       		.uleb128 0xe
 708 00da 3A       		.uleb128 0x3a
 709 00db 0B       		.uleb128 0xb
 710 00dc 3B       		.uleb128 0x3b
 711 00dd 05       		.uleb128 0x5
 712 00de 27       		.uleb128 0x27
 713 00df 19       		.uleb128 0x19
 714 00e0 11       		.uleb128 0x11
 715 00e1 01       		.uleb128 0x1
 716 00e2 12       		.uleb128 0x12
 717 00e3 06       		.uleb128 0x6
 718 00e4 40       		.uleb128 0x40
 719 00e5 18       		.uleb128 0x18
 720 00e6 9742     		.uleb128 0x2117
 721 00e8 19       		.uleb128 0x19
 722 00e9 01       		.uleb128 0x1
 723 00ea 13       		.uleb128 0x13
 724 00eb 00       		.byte	0
 725 00ec 00       		.byte	0
 726 00ed 11       		.uleb128 0x11
 727 00ee 898201   		.uleb128 0x4109
 728 00f1 00       		.byte	0
 729 00f2 11       		.uleb128 0x11
 730 00f3 01       		.uleb128 0x1
 731 00f4 31       		.uleb128 0x31
 732 00f5 13       		.uleb128 0x13
 733 00f6 00       		.byte	0
 734 00f7 00       		.byte	0
 735 00f8 12       		.uleb128 0x12
 736 00f9 34       		.uleb128 0x34
 737 00fa 00       		.byte	0
 738 00fb 03       		.uleb128 0x3
 739 00fc 0E       		.uleb128 0xe
 740 00fd 3A       		.uleb128 0x3a
 741 00fe 0B       		.uleb128 0xb
 742 00ff 3B       		.uleb128 0x3b
 743 0100 0B       		.uleb128 0xb
 744 0101 49       		.uleb128 0x49
 745 0102 13       		.uleb128 0x13
 746 0103 3F       		.uleb128 0x3f
 747 0104 19       		.uleb128 0x19
 748 0105 3C       		.uleb128 0x3c
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 27


 749 0106 19       		.uleb128 0x19
 750 0107 00       		.byte	0
 751 0108 00       		.byte	0
 752 0109 13       		.uleb128 0x13
 753 010a 2E       		.uleb128 0x2e
 754 010b 00       		.byte	0
 755 010c 3F       		.uleb128 0x3f
 756 010d 19       		.uleb128 0x19
 757 010e 3C       		.uleb128 0x3c
 758 010f 19       		.uleb128 0x19
 759 0110 6E       		.uleb128 0x6e
 760 0111 0E       		.uleb128 0xe
 761 0112 03       		.uleb128 0x3
 762 0113 0E       		.uleb128 0xe
 763 0114 3A       		.uleb128 0x3a
 764 0115 0B       		.uleb128 0xb
 765 0116 3B       		.uleb128 0x3b
 766 0117 0B       		.uleb128 0xb
 767 0118 00       		.byte	0
 768 0119 00       		.byte	0
 769 011a 00       		.byte	0
 770              		.section	.debug_aranges,"",%progbits
 771 0000 3C000000 		.4byte	0x3c
 772 0004 0200     		.2byte	0x2
 773 0006 00000000 		.4byte	.Ldebug_info0
 774 000a 04       		.byte	0x4
 775 000b 00       		.byte	0
 776 000c 0000     		.2byte	0
 777 000e 0000     		.2byte	0
 778 0010 00000000 		.4byte	.LFB0
 779 0014 30000000 		.4byte	.LFE0-.LFB0
 780 0018 00000000 		.4byte	.LFB1
 781 001c 34000000 		.4byte	.LFE1-.LFB1
 782 0020 00000000 		.4byte	.LFB2
 783 0024 3C000000 		.4byte	.LFE2-.LFB2
 784 0028 00000000 		.4byte	.LFB3
 785 002c 02000000 		.4byte	.LFE3-.LFB3
 786 0030 00000000 		.4byte	.LFB4
 787 0034 08000000 		.4byte	.LFE4-.LFB4
 788 0038 00000000 		.4byte	0
 789 003c 00000000 		.4byte	0
 790              		.section	.debug_ranges,"",%progbits
 791              	.Ldebug_ranges0:
 792 0000 00000000 		.4byte	.LFB0
 793 0004 30000000 		.4byte	.LFE0
 794 0008 00000000 		.4byte	.LFB1
 795 000c 34000000 		.4byte	.LFE1
 796 0010 00000000 		.4byte	.LFB2
 797 0014 3C000000 		.4byte	.LFE2
 798 0018 00000000 		.4byte	.LFB3
 799 001c 02000000 		.4byte	.LFE3
 800 0020 00000000 		.4byte	.LFB4
 801 0024 08000000 		.4byte	.LFE4
 802 0028 00000000 		.4byte	0
 803 002c 00000000 		.4byte	0
 804              		.section	.debug_line,"",%progbits
 805              	.Ldebug_line0:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 28


 806 0000 E2000000 		.section	.debug_str,"MS",%progbits,1
 806      02006800 
 806      00000201 
 806      FB0E0D00 
 806      01010101 
 807              	.LASF35:
 808 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 808      4152545F 
 808      45505F33 
 808      5F495352 
 808      00
 809              	.LASF42:
 810 0011 55534255 		.ascii	"USBUART_ReInitComponent\000"
 810      4152545F 
 810      5265496E 
 810      6974436F 
 810      6D706F6E 
 811              	.LASF29:
 812 0029 65704372 		.ascii	"epCr0\000"
 812      3000
 813              	.LASF11:
 814 002f 666C6F61 		.ascii	"float\000"
 814      7400
 815              	.LASF3:
 816 0035 73686F72 		.ascii	"short unsigned int\000"
 816      7420756E 
 816      7369676E 
 816      65642069 
 816      6E7400
 817              	.LASF34:
 818 0048 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 818      4152545F 
 818      45505F32 
 818      5F495352 
 818      00
 819              	.LASF36:
 820 0059 55534255 		.ascii	"USBUART_SOF_ISR\000"
 820      4152545F 
 820      534F465F 
 820      49535200 
 821              	.LASF27:
 822 0069 6570436E 		.ascii	"epCnt0\000"
 822      743000
 823              	.LASF28:
 824 0070 6570436E 		.ascii	"epCnt1\000"
 824      743100
 825              	.LASF20:
 826 0077 6570546F 		.ascii	"epToggle\000"
 826      67676C65 
 826      00
 827              	.LASF41:
 828 0080 55534255 		.ascii	"USBUART_EP\000"
 828      4152545F 
 828      455000
 829              	.LASF37:
 830 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 830      43313120 
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 29


 830      352E342E 
 830      31203230 
 830      31363036 
 831 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 831      20726576 
 831      6973696F 
 831      6E203233 
 831      37373135 
 832 00f1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 832      66756E63 
 832      74696F6E 
 832      2D736563 
 832      74696F6E 
 833              	.LASF14:
 834 0119 72656738 		.ascii	"reg8\000"
 834      00
 835              	.LASF5:
 836 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 836      20756E73 
 836      69676E65 
 836      6420696E 
 836      7400
 837              	.LASF21:
 838 0130 61646472 		.ascii	"addr\000"
 838      00
 839              	.LASF31:
 840 0135 73696545 		.ascii	"sieEp\000"
 840      7000
 841              	.LASF32:
 842 013b 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 842      4152545F 
 842      7369655F 
 842      6570735F 
 842      73747275 
 843              	.LASF1:
 844 0152 756E7369 		.ascii	"unsigned char\000"
 844      676E6564 
 844      20636861 
 844      7200
 845              	.LASF38:
 846 0160 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 846      72617465 
 846      645F536F 
 846      75726365 
 846      5C50536F 
 847              	.LASF12:
 848 0187 646F7562 		.ascii	"double\000"
 848      6C6500
 849              	.LASF17:
 850 018e 61747472 		.ascii	"attrib\000"
 850      696200
 851              	.LASF23:
 852 0195 62756666 		.ascii	"buffOffset\000"
 852      4F666673 
 852      657400
 853              	.LASF10:
 854 01a0 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 30


 854      313600
 855              	.LASF18:
 856 01a7 61706945 		.ascii	"apiEpState\000"
 856      70537461 
 856      746500
 857              	.LASF8:
 858 01b2 756E7369 		.ascii	"unsigned int\000"
 858      676E6564 
 858      20696E74 
 858      00
 859              	.LASF7:
 860 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 860      206C6F6E 
 860      6720756E 
 860      7369676E 
 860      65642069 
 861              	.LASF19:
 862 01d6 68774570 		.ascii	"hwEpState\000"
 862      53746174 
 862      6500
 863              	.LASF30:
 864 01e0 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 864      4152545F 
 864      7369655F 
 864      65705F73 
 864      74727563 
 865              	.LASF39:
 866 01f6 433A5C55 		.ascii	"C:\\Users\\Caleb Cotter\\Documents\\GitHub\\3HC\\3H"
 866      73657273 
 866      5C43616C 
 866      65622043 
 866      6F747465 
 867 0223 435F4669 		.ascii	"C_Firmware\\3HC_Firmware_0_1.cydsn\000"
 867      726D7761 
 867      72655C33 
 867      48435F46 
 867      69726D77 
 868              	.LASF16:
 869 0245 73697A65 		.ascii	"sizetype\000"
 869      74797065 
 869      00
 870              	.LASF22:
 871 024e 65704D6F 		.ascii	"epMode\000"
 871      646500
 872              	.LASF6:
 873 0255 6C6F6E67 		.ascii	"long long int\000"
 873      206C6F6E 
 873      6720696E 
 873      7400
 874              	.LASF13:
 875 0263 63686172 		.ascii	"char\000"
 875      00
 876              	.LASF24:
 877 0268 62756666 		.ascii	"bufferSize\000"
 877      65725369 
 877      7A6500
 878              	.LASF2:
ARM GAS  C:\Users\CALEBC~1\AppData\Local\Temp\ccMp5iBg.s 			page 31


 879 0273 73686F72 		.ascii	"short int\000"
 879      7420696E 
 879      7400
 880              	.LASF40:
 881 027d 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 881      4152545F 
 881      4255535F 
 881      52455345 
 881      545F4953 
 882              	.LASF9:
 883 0293 75696E74 		.ascii	"uint8\000"
 883      3800
 884              	.LASF25:
 885 0299 696E7465 		.ascii	"interface\000"
 885      72666163 
 885      6500
 886              	.LASF4:
 887 02a3 6C6F6E67 		.ascii	"long int\000"
 887      20696E74 
 887      00
 888              	.LASF26:
 889 02ac 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 889      42554152 
 889      545F4550 
 889      5F43544C 
 889      5F424C4F 
 890              	.LASF15:
 891 02c3 6C6F6E67 		.ascii	"long double\000"
 891      20646F75 
 891      626C6500 
 892              	.LASF0:
 893 02cf 7369676E 		.ascii	"signed char\000"
 893      65642063 
 893      68617200 
 894              	.LASF33:
 895 02db 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 895      4152545F 
 895      45505F31 
 895      5F495352 
 895      00
 896              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
